'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program set the configuration of the MPU6050 device and display the results to the attached PC terminal.
'''
'''The MPU6060 features three 16-bit analog-to-digital converters (ADCs) for digitizing the gyroscope outputs
'''and three 16-bit ADCs for digitizing the accelerometer outputs. For precision tracking of both fast and slow
'''motions, the parts feature a user-programmable gyroscope full-scale range of ±250, ±500, ±1000, and
'''±2000°/sec (dps) and a user-programmable accelerometer full-scale range of ±2g, ±4g, ±8g, and ±16g.
'''
'''This program uses the hardware implementation of I2C for the Microchip and ATMEL microprocessors.
'''The microprocessor must have a suitable I2C or TWI module.
'''
'''The hardware serial connections are shown in the program.
'''
'''A useful link is shown below.  This code was not used but this could be a great reference.
'''https://developer.mbed.org/users/Sissors/code/MPU6050/docs/5c63e20c50f3/MPU6050_8cpp_source.html
'''
'''@author  EvanV
'''@licence GPL
'''@version 1.1a
'''@date    25.03.17
'''********************************************************************************

' ----- Configuration
#CHIP mega328p,16

' ----- Define Hardware settings
' Define I2C settings
#DEFINE HI2C_BAUD_RATE 100
#DEFINE HI2C_DATA
#DEFINE HI2C_CLOCK
HI2CMode Master

' THIS CONFIG OF THE SERIAL PORT WORKS WITH A  MAX232 (or equiv) THEN TO PC
' USART settings - CHANGE PORTS if required
#DEFINE USART_BAUD_RATE 9600
#DEFINE USART_TX_BLOCKING
Wait 500 ms

HSerPrint "I2C Sensor"
HSerPrintCRLF


'Set clock
HI2CStart
HI2CSend 0xD0
HI2CSend 0x6B
HI2CSend 0
HI2CStop

'Set power
HI2CStart
HI2CSend 0xD0
HI2CSend 0x1B
HI2CSend 0
HI2CStop

'Enable Interrupt of device
HI2CStart
HI2CSend 0xD0
HI2CSend 0x38
HI2CSend 0x21
HI2CStop

HSerPrint "I2C Init Completed"
HSerPrintCRLF

Do

    'Read XYZ Accelerometer Measurements
    HI2CReStart
    HI2CSend 0xD0
    HI2CSend 0x3B
    HI2CReStart
    HI2CSend 0xD1
    HI2CReceive xa_msb
    HI2CReceive xa_lsb
    HI2CReceive ya_msb
    HI2CReceive ya_lsb
    HI2CReceive za_msb
    HI2CReceive za_lsb, nak
    HI2CStop


    'Read Temperature Measurement
    Dim mytemp As Word
    HI2CReStart
    HI2CSend 0xD0
    HI2CSend 0x41
    HI2CReStart
    HI2CSend 0xD1
    HI2CReceive temp_msb
    HI2CReceive temp_lsb, nak
    HI2CStop


    'Read Gyroscope Measurements
    HI2CReStart
    HI2CSend 0xD0
    HI2CSend 0x43
    HI2CReStart
    HI2CSend 0xD1
    HI2CReceive xg_msb
    HI2CReceive xg_lsb
    HI2CReceive yg_msb
    HI2CReceive yg_lsb
    HI2CReceive zg_msb
    HI2CReceive zg_lsb, nak
    HI2CStop


' Display information from the sensor

    HSerPrint Pad(Str(ConvertValue( xa_msb, xa_lsb )),5)
    HSerPrint ":"
    HSerPrint Pad(Str(ConvertValue( ya_msb, ya_lsb )),5)
    HSerPrint ":"
    HSerPrint Pad(Str(ConvertValue( za_msb, za_lsb )),5)

    HSerSend 9
    HSerPrint Pad(Str(ConvertValue( xg_msb, xg_lsb )),5)
    HSerPrint ":"
    HSerPrint Pad(Str(ConvertValue( yg_msb, yg_lsb )),5)
    HSerPrint ":"
    HSerPrint Pad(Str(ConvertValue( zg_msb, zg_lsb )),5)

    HSerSend 9
    HSerPrint Hex(temp_msb)
    HSerPrint Hex(temp_lsb)

    HSerSend 9
    HSerPrint mytemp

    'Factorised calculation to show as a decimal

    'set the values to a word
    mytemp = (temp_msb *256)+ temp_lsb
    'These calcs are specified in the datasheet
    mytemp = (mytemp + 521)
    mytemp = mytemp / 34
    mytemp  = mytemp + 350

    HSerSend 9
    HSerPrint mytemp/100
    HSerPrint "."
    HSerPrint LeftPad(Str(mytemp - ((mytemp/100)*100)),2,"0")

    HSerPrintCRLF

    Wait 100 ms
Loop


' Methods

Function ConvertValue ( In inVarH, In inVarL ) As Integer

    Dim inVar As Word Alias inVarH, inVarL
    ' Convert 2 complement
    If inVar.15 = 1 Then
        ConvertValue = (inVar XOR 65535) + 1
    Else
        ConvertValue = inVar
    End If

End Function
