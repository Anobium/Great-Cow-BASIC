'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the KS0108 GLCD capabilities.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''@author  EvanV
'''@licence GPL
'''@version 1.3A
'''@date    31.01.15
'''********************************************************************************

' ----- Configuration

#CHIP 16F886,16
#OPTION Explicit
#INCLUDE <glcd.h>

' ----- Define Hardware settings
' Hardware is setup in the GLCD methods, therefore none are requied here.

' ----- Constants
' This is the Default value, not required.
#DEFINE GLCD_TYPE GLCD_TYPE_KS0108
' the comments shows the Chipino connections
'D9 to pin 5 of LCD
#DEFINE GLCD_RW PORTB.1
'D13 to pin 17 of LCD
#DEFINE GLCD_RESET PORTB.5
'D12 to CS1
#DEFINE GLCD_CS1 PORTB.3
'D11 to CS2
#DEFINE GLCD_CS2 PORTB.4
'D8 to pin 4 D/I pin on LCD
#DEFINE GLCD_RS PORTB.0
'D10 to Pin 6 on LCD
#DEFINE GLCD_ENABLE PORTB.2
'D0 to pin 7 on LCD
#DEFINE GLCD_DB0 PORTC.7
'D1 to pin 8 on LCD
#DEFINE GLCD_DB1 PORTC.6
'D2 to pin 9 on LCD
#DEFINE GLCD_DB2 PORTC.5
'D3 to pin 10 on LCD
#DEFINE GLCD_DB3 PORTC.4
'D4 to pin 11 on LCD
#DEFINE GLCD_DB4 PORTC.3
'D5 to pin 12 on LCD
#DEFINE GLCD_DB5 PORTC.2
'D6 to pin 13 on LCD
#DEFINE GLCD_DB6 PORTC.1
'D7 to pin 14 on LCD
#DEFINE GLCD_DB7 PORTC.0

' = 2 normal usage, 6 or above is OK at 32 mhz!
#DEFINE KS0108ReadDelay    4
' = 1 normal usage you may get away with 0, 2 or above is OK at 32 mhz!
#DEFINE KS0108WriteDelay   0
' = 1 normal usage you may get away with 0, 2 or above is OK at 32 mhz!
#DEFINE KS0108ClockDelay   0

' ----- Variables
Dim BYTENUMBER, CCOUNT As Byte

CCount = 0
Dim longNumber As Long
' max value = 4294967296
longNumber = 4294967290
Dim wordNumber As Word
Dim outString As String
wordNumber = 0
byteNumber = 0




' ----- Main body of program commences here.

' Prepare the static components of the screen
' Print some text
GLCDPrint ( 0,   0, "PrintStr")
' Print some more text
GLCDPrint ( 64,  0, "@")
' Print chip speed
GLCDPrint ( 69,  0, Str(ChipMHz) + "Mhz")
' GLCDPrint ( 84, 0, "Mhz")                                     ; Print some text
' Draw some text
GLCDDrawString( 0,8,"DrawStr")
' Draw a box
Box 0,0,GLCD_WIDTH-1, GLCD_HEIGHT-1
' Draw a box
Box GLCD_WIDTH-5, GLCD_HEIGHT-5,GLCD_WIDTH-1, GLCD_HEIGHT-1
' Draw a circle
Circle( 44,41,15)
' Draw a line
Line 64,31,0,31

Do Forever
    For CCount = 32 To 127
        ' Print a HEX string
        GLCDPrint ( 64 ,  36,  Hex(longNumber_E ) )
        ' Print a HEX string
        GLCDPrint ( 76 ,  36,  Hex(longNumber_U ) )
        ' Print a HEX string
        GLCDPrint ( 88 ,  36,  Hex(longNumber_H ) )
        ' Print a HEX string
        GLCDPrint ( 100 ,  36, Hex(longNumber   ) )
        ' Print a HEX string
        GLCDPrint ( 112 ,  36, "h" )


        ' Print a padded string
        GLCDPrint ( 64 ,  44, Pad(Str(wordNumber), 5 ) )
        ' Print a padded string
        GLCDPrint ( 64 ,  52, Pad(Str(byteNumber), 3 ) )


        ' Draw a Box
        Box (46,9,56,19)
        ' Draw a character
        GLCDDrawChar(48, 9, CCount )
        ' Prepare a string
        outString = Str( CCount )
        ' Draw a string
        GLCDDrawString(64, 9, Pad(outString,3) )

        ' Draw a filled box
        FilledBox 3,43,11,51, wordNumber

        ' Draw a filled box
        FilledCircle( 44,41,9, longNumber XOR 1)
        ' Draw a line
        Line 0,63,64,31

        ' Do some simple maths
        longNumber = longNumber + 7 : wordNumber = wordNumber + 3 : byteNumber++
    Next
Loop

End

