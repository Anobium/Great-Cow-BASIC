'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the ILI9340 GLCD capabilities.
'''It is a nice graphical LCD, suitable for a lot of various projects.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''@author 	EvanV
'''@licence	GPL
'''@version	1.0
'''@date   	04.06.2015
'''********************************************************************************

'Chip Settings.
#CHIP 16f1938,32
#OPTION Explicit

#INCLUDE <glcd.h>
#INCLUDE <chipino.h>

#DEFINE GLCD_TYPE GLCD_TYPE_ILI9340

'Pin mappings for SPI - this GLCD driver supports Hardware SPI and Software SPI
' Data command line
#DEFINE GLCD_DC 			D8
' Chip select line
#DEFINE GLCD_CS 			D10
' Reset line
#DEFINE GLCD_RESET 		D9

' Data in | MISO
#DEFINE GLCD_DI  			D3
' Data out | MOSI
#DEFINE GLCD_DO  			D2
' Clock Line
#DEFINE GLCD_SCK 			D4

' remove/comment out if you want to use software SPI.
#DEFINE ILI9340_HardwareSPI














'GLCD selected extension font set. ASCII characters 31-254, the extended font uses 1358 bytes of program memory
#DEFINE GLCD_EXTENDEDFONTSET1
GLCDfntDefaultSize = 1

'GLCDCLS  supports GLCDBackground as default
'GLCDCLS  also support passing color parameter.
'GLCDCLS [color]
' optionally you can rotate the screen.
GLCDRotate ( Landscape_Rev )


'Available colors
'ILI9340_BLACK
'ILI9340_RED
'ILI9340_GREEN
'ILI9340_BLUE
'ILI9340_WHITE
'ILI9340_PURPLE
'ILI9340_YELLOW
'ILI9340_CYAN
'ILI9340_D_GRAY
'ILI9340_L_GRAY
'ILI9340_SILVER
'ILI9340_MAROON
'ILI9340_OLIVE
'ILI9340_LIME
'ILI9340_AQUA
'ILI9340_TEAL
'ILI9340_NAVY
'ILI9340_FUCHSIA


Dim CCOUNT, BYTENUMBER, OLDFONT, OLDFONT As Byte

CCount = 31
Dim longNumber As Long
' max value = 4294967290
longNumber = 0
Dim wordNumber As Word
wordNumber = 0
byteNumber = 0


Repeat 2

    GLCDRotate ( Landscape_Rev )
    GLCDCLS ILI9340_BLUE

    GLCDForeground = ILI9340_MAROON
    GLCDfntDefaultSize = 1
    GLCDPrint ( 2, 2, "GLCDPrint String" )


    GLCDForeground = ILI9340_WHITE
    GLCDfntDefaultSize = 2
    GLCDPrint ( 2, 12, "GLCDPrint String" )


    GLCDForeground = ILI9340_YELLOW
    GLCDfntDefaultSize = 3
    GLCDPrint ( 2,30, "GLCDPrint String" )

    longNumber = 0xFFFFFFFF
    wordNumber = 0xFFFF
    byteNumber = 0xFF

    GLCDRotate ( Portrait )
    GLCDCLS ILI9340_WHITE

    GLCDForeground = ILI9340_MAROON
    GLCDfntDefaultSize = 1
    GLCDPrint ( 2, 2, bytenumber )


    GLCDForeground = ILI9340_BLACK
    GLCDfntDefaultSize = 2
    GLCDPrint ( 2, 12, wordNumber )


    GLCDForeground = ILI9340_CYAN
    GLCDfntDefaultSize = 3
    GLCDPrint ( 2,30, longnumber )

    Wait 2 s

End Repeat



GLCDCLS ILI9340_BLUE
'Set font size.
GLCDfntDefaultSize = 2
' max value = 4294967290
longNumber = 0
wordNumber = 0
byteNumber = 0

'Using the global variable GLCDfntDefaultsize to show the different capabilities
Select Case GLCDfntDefaultSize

Case 1

    ShowCase1

Case 2

    ShowCase2

Case 3

    GLCDDrawString (2, 1, "GLCD font")
    GLCDDrawString (2, 25, "size = 3")
    Box 0,0,ILI9340_GLCD_WIDTH-1, ILI9340_GLCD_HEIGHT-1, ILI9340_BLUE
    Box ILI9340_GLCD_WIDTH-5, ILI9340_GLCD_HEIGHT-5,ILI9340_GLCD_WIDTH-1, ILI9340_GLCD_HEIGHT-1, ILI9340_WHITE

End Select

End


Sub ShowCase1

    GLCDRotate ( Portrait )

    GLCDDrawString (2, 1, "GCB", ILI9340_WHITE )
    GLCDDrawString (56,1,"v.941", ILI9340_YELLOW )
    GLCDDrawString (2, 16, "DrawStr", ILI9340_WHITE )

    GLCDDrawString ( 60, 31, "Long Number" )
    GLCDDrawString ( 60, 39, "Word Number" )
    GLCDDrawString ( 60, 47, "Byte Number" )

    GLCDDrawString ( 74, 16, "Asc:" )

    Box 0,0,ILI9340_GLCD_WIDTH-1, ILI9340_GLCD_HEIGHT-1, ILI9340_YELLOW
    Box ILI9340_GLCD_WIDTH-5, ILI9340_GLCD_HEIGHT-5,ILI9340_GLCD_WIDTH-1, ILI9340_GLCD_HEIGHT-1, ILI9340_WHITE

    'center
    Circle( ILI9340_GLCD_WIDTH/2, ILI9340_GLCD_HEIGHT/2, 50, ILI9340_SILVER )
    FilledCircle( ILI9340_GLCD_WIDTH/2, ILI9340_GLCD_HEIGHT/2, 25, ILI9340_D_GRAY  )

    Line 0,  ILI9340_GLCD_HEIGHT-1 , ILI9340_GLCD_WIDTH/2 +100,  (ILI9340_GLCD_HEIGHT /2) - 50, ILI9340_CYAN
    Line  0, (ILI9340_GLCD_HEIGHT /2) - 50, ILI9340_GLCD_WIDTH/2 +100, (ILI9340_GLCD_HEIGHT /2) - 50, ILI9340_CYAN

    FilledBox 2,ILI9340_GLCD_HEIGHT/2+10,42,ILI9340_GLCD_HEIGHT/2+50, ILI9340_RED

    oldfont = GLCDfntDefaultSize
    GLCDfntDefaultSize = 3
    GLCDDrawString ( 42, ILI9340_GLCD_HEIGHT - 30 , "ILI9340 Driver" , ILI9340_WHITE )

    GLCDfntDefaultSize = 1
    GLCDDrawString ( ILI9340_GLCD_WIDTH - 60, 2 , "July 2019" , ILI9340_WHITE )
    #IFDEF ILI9340_HardwareSPI
        GLCDDrawString ( ILI9340_GLCD_WIDTH - 42, 10 , "HW SPI" , ILI9340_WHITE )
    #ENDIF

    #IFNDEF ILI9340_HardwareSPI
        GLCDDrawString ( ILI9340_GLCD_WIDTH - 42, 10 , "SW SPI" , ILI9340_WHITE )
    #ENDIF

    'Revert the font size
    GLCDfntDefaultSize = oldfont
    GLCDForeground = ILI9340_WHITE

    Do Forever

        GLCDPrint ( 144 , 31, longNumber)
        GLCDPrint ( 144 , 39, Pad( Str(wordnumber),5))
        GLCDPrint ( 144 , 47, Pad( Str(bytenumber),3))

        GLCDDrawChar(54, 16, CCount )
        'Draw a box around the Char below
        Box 52,15,62,26, ILI9340_WHITE

        GLCDDrawString ( 100, 16 , Pad( Str(CCount),3) )

        CCount++
        If CCount = 0 Then CCount = 31
        If CCount = 128 Then CCount = 192
        longNumber = longNumber + 7

        wordNumber = wordNumber + 3
        byteNumber++

    Loop

End Sub

Sub ShowCase2

    GLCDRotate ( Landscape_Rev )

    GLCDDrawString (2, 1, "GCB",ILI9340_WHITE)
    GLCDDrawString (56,1,"v.941",ILI9340_YELLOW)
    GLCDDrawString (2, 18, "DrawStr",ILI9340_WHITE)

    GLCDDrawString ( 2, 52, "Long:" )
    GLCDDrawString ( 2, 70, "Word:" )
    GLCDDrawString ( 2, 88, "Byte:" )

    GLCDDrawString ( 128, 18, "Asc:"+"  " )

    Box 0,0,ILI9340_GLCD_WIDTH-1, ILI9340_GLCD_HEIGHT-1, ILI9340_YELLOW
    Box ILI9340_GLCD_WIDTH-5, ILI9340_GLCD_HEIGHT-5,ILI9340_GLCD_WIDTH-1, ILI9340_GLCD_HEIGHT-1, ILI9340_WHITE

    'center
    Circle( ILI9340_GLCD_WIDTH/2, ILI9340_GLCD_HEIGHT/2, 50, ILI9340_SILVER )
    FilledCircle( ILI9340_GLCD_WIDTH/2, ILI9340_GLCD_HEIGHT/2, 25, ILI9340_D_GRAY  )

    Line 0,  ILI9340_GLCD_HEIGHT-1 , ILI9340_GLCD_WIDTH/2 +100,  (ILI9340_GLCD_HEIGHT /2) - 50, ILI9340_CYAN
    Line  0, (ILI9340_GLCD_HEIGHT /2) - 50, ILI9340_GLCD_WIDTH/2 +100, (ILI9340_GLCD_HEIGHT /2) - 50, ILI9340_CYAN

    FilledBox 2,ILI9340_GLCD_HEIGHT/2+10,42,ILI9340_GLCD_HEIGHT/2+50, ILI9340_RED

    oldfont = GLCDfntDefaultSize
    GLCDfntDefaultSize = 3
    GLCDDrawString ( 50, ILI9340_GLCD_HEIGHT - 30 , "ILI9340 Driver" , ILI9340_WHITE )

    GLCDfntDefaultSize = 1
    GLCDDrawString ( ILI9340_GLCD_WIDTH - 60, 2 , "July 2019" , ILI9340_WHITE )

    #IFDEF ILI9340_HardwareSPI
        GLCDDrawString ( ILI9340_GLCD_WIDTH - 42, 10 , "HW SPI" , ILI9340_WHITE )
    #ENDIF

    #IFNDEF ILI9340_HardwareSPI
        GLCDDrawString ( ILI9340_GLCD_WIDTH - 42, 10 , "SW SPI" , ILI9340_WHITE )
    #ENDIF

    'Revert the font size
    GLCDfntDefaultSize = oldfont
    GLCDForeground = ILI9340_WHITE
    BigPrint_ILI9340 ( 100 , ILI9340_GLCD_HEIGHT - 60 , "Great Cow Basic" )

    Do Forever

        GLCDPrint ( 64 , 52, longNumber)
        GLCDPrint ( 64 , 70, Pad( Str(wordnumber),5))
        GLCDPrint ( 64 , 88, Pad( Str(bytenumber),3))

        GLCDDrawChar(99, 18, CCount )
        'Draw a box around the Char below
        Box 98,18,117,42, ILI9340_WHITE

        GLCDDrawString ( 180, 18 , Pad( Str(CCount),3) )

        CCount++
        If CCount = 0 Then CCount = 31
        If CCount = 128 Then CCount = 192
        longNumber = longNumber + 7
        wordNumber = wordNumber + 3
        byteNumber++

    Loop
End Sub
