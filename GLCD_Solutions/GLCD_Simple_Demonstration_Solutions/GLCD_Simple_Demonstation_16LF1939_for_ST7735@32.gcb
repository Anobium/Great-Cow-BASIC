'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the ST7735 GLCD capabilities.  It is a nice small graphical LCD, suitable for a lot of various projects.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''@author  EvanV
'''@licence GPL
'''@version 1.0
'''@date    16.12.18
'''********************************************************************************

  'Chip Settings. Assumes the my development board 'C' with with a 16LF1939
  #chip 16lf1939,32
  #option explicit
  #config Osc = INT, MCLRE_ON, PLLEN_ON

      #include <glcd.h>

      #define GLCD_TYPE GLCD_TYPE_ST7735

     'Pin mappings for SPI
      #define GLCD_DI  portc.4        '  NOT CONNECTED - can loop back if required
      #define GLCD_DO  portc.5        ' > SDA
      #define GLCD_SCK portc.3       ' > SCK

      #define GLCD_DC porta.0       ' > A0
      #define GLCD_CS portc.1        ' > CS    p16
      #define GLCD_RESET portc.0     ' > RESET p15

      #define ST7735_HardwareSPI     ' remove comment out if you want to use software SPI.

      Dim CCOUNT, BYTENUMBER as Byte

      GLCDCLS
'      GLCDRotate ( PORTRAIT_REV )     ' optionally you can rotate the screen.

      #define GLCD_OLED_FONT
      GLCDfntDefaultSize = 2
      GLCDFontWidth = 5

      CCount = 0
      dim longNumber as long
      longNumber = 0 ' max value = 4294967290
      dim wordNumber as Word
      wordNumber = 0
      byteNumber = 0

      GLCDPrint (1, 1, "PrintStr", ST7735_Green)
      GLCDDrawString( 1,( 9 * GLCDfntDefaultSize ),"DrawStr", ST7735_RED )
      box 0,0,ST7735_GLCD_WIDTH-1, ST7735_GLCD_HEIGHT-1, ST7735_BLACK
      box ST7735_GLCD_WIDTH-5, ST7735_GLCD_HEIGHT-5,ST7735_GLCD_WIDTH-1, ST7735_GLCD_HEIGHT-1, ST7735_RED
      Circle( 25,30* GLCDfntDefaultSize,8,1)                              ;center
      line 0,  ST7735_GLCD_HEIGHT-1 , ST7735_GLCD_WIDTH/2,  (ST7735_GLCD_HEIGHT /2) +1
      line  ST7735_GLCD_WIDTH/2, (ST7735_GLCD_HEIGHT /2) +1 ,0, (ST7735_GLCD_HEIGHT /2) +1

      DO forever

        For CCOUNT = 32 to 127

          GLCDForeground = ST7735_BLACK

          'erase previous numbers then print
          filledbox 80, 100, 96, 116, GLCDBackground
          GLCDPrint ( 64 , 100, byteNumber)

          'erase previous numbers then print
          filledbox 54, 116, 96, 115, GLCDBackground
          GLCDPrint ( 46 , 116, wordNumber )

          'This number will not clear when overflow happens...
          GLCDPrint ( 32 , 132, longNumber )

          'Draw single character
          GLCDDrawChar(82, 9 * GLCDfntDefaultSize, CCount, ST7735_CYAN  )

          'Fill a box
          filledbox 2,54,6,58, wordNumber

          'Fill a circle
          FilledCircle( 25,30* GLCDfntDefaultSize,4,longNumber xor 1)         ;center

          longNumber = longNumber + 7
          wordNumber = wordNumber + 3
          byteNumber++

        Next

      LOOP

  end
