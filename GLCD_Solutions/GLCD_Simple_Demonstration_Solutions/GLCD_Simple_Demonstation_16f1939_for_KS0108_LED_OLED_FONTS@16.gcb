'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the KS0108 GLCD capabilities for OLED font
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''@author  EvanV with works of ChuckH
'''@licence GPL
'''@version 1.2c
'''@date    22.12.14
'''********************************************************************************

#CHIP 16f1939,32
#OPTION Explicit

#INCLUDE <glcd.h>
' This is the Default value, not required.
#DEFINE GLCD_TYPE GLCD_TYPE_KS0108
'  #define GLCDDirection 1                          ' Invert display, not always required
#DEFINE GLCD_OLED_FONT


'D12 to actually since CS1, CS2 can be reversed on some devices
#DEFINE GLCD_CS1 PORTa.7
#DEFINE GLCD_CS2 PORTa.6
'D0 to pin 7 on LCD
#DEFINE GLCD_DB0 PORTD.0
'D1 to pin 8 on LCD
#DEFINE GLCD_DB1 PORTD.1
'D2 to pin 9 on LCD
#DEFINE GLCD_DB2 PORTD.2
'D3 to pin 10 on LCD
#DEFINE GLCD_DB3 PORTD.3
'D4 to pin 11 on LCD
#DEFINE GLCD_DB4 PORTD.4
'D5 to pin 12 on LCD
#DEFINE GLCD_DB5 PORTD.5
'D6 to pin 13 on LCD
#DEFINE GLCD_DB6 PORTD.6
'D7 to pin 14 on LCD
#DEFINE GLCD_DB7 PORTD.7

#DEFINE GLCD_RS PORTa.0
#DEFINE GLCD_Enable PORTA.1
#DEFINE GLCD_RW PORTA.2
#DEFINE GLCD_RESET PORTA.3


' 2 normal usage, 3 for 32 mhz!
#DEFINE KS0108ReadDelay   3
'  #define KS0108WriteDelay  1     ; 1 normal usage, 0 works
'  #define KS0108ClockDelay  1     ; 1 normal usage, 0 works

'change to LED height, this, avoids set the 4 LED signals
#DEFINE LED_GLCD_HEIGHT GLCD_HEIGHT-1

Dim BYTENUMBER, CCOUNT As Byte
GLCDfntDefaultSize = 1
CCount = 0
Dim longNumber As Long
' max value = 4294967296
longNumber = 4294967290
Dim wordNumber As Word
Dim outString As String
wordNumber = 0
byteNumber = 0

Box 0,0,GLCD_WIDTH-1, LED_GLCD_HEIGHT-1
'In this demonstration we have to change the width, depending on which font you have selected.
'You would not need to do this one you have selected your font set.
'We use a macro to do this
GLCDfntDefaultSize = 2: SetFontWidth

' Print some texT
GLCDPrint ( 1,   1, "Great Cow")
' Print some text
GLCDPrint ( 1,   19, "BASIC 2019")
GLCDfntDefaultSize = 1: SetFontWidth

' Print some text
GLCDPrint ( 1,   52, "@Evan R. Venn")
Wait 4 s
GLCDCLS

' Prepare the static components of the screen
' Print some text
GLCDPrint ( 2,   1, "PrintStr")
' Print some more text
GLCDPrint ( 64,  1, "LAT@")
' Print chip speed
GLCDPrint ( 88,  1, ChipMHz)
' Print some text
GLCDPrint ( 100, 1, "Mhz")
' Draw some text
GLCDDrawString( 2, 9, "DrawStr")
' Draw a box
Box 0,0,GLCD_WIDTH-1, LED_GLCD_HEIGHT-1
' Draw a box
Box GLCD_WIDTH-5, LED_GLCD_HEIGHT-5,GLCD_WIDTH-1, LED_GLCD_HEIGHT-1
' Draw a circle
Circle( 44,41,15)
' Draw a line
Line LED_GLCD_HEIGHT,31,0,31
' Draw a Box
Box (46, 9, 56, 19 )

Do Forever
    For CCount = 32 To 127

        outString = Hex(longNumber_E )
        outString = outString + Hex(longNumber_U )
        outString = outString + Hex(longNumber_H )
        outString = outString + Hex(longNumber ) +"h"
        #IFDEF GLCD_OLED_FONT
            'When we use a variable font, line OLED font 1.. we have to clear the GLCD first
            FilledBox ( 64, 40, 122, 47, GLCDBackground )
        #ENDIF
        ' Print a HEX string
        GLCDPrint ( 64 ,  40,  outString )

        #IFDEF GLCD_OLED_FONT
            'When we use a variable font, line OLED font 1.. we have to clear the GLCD first
            FilledBox ( 64, 48, 80, 61, GLCDBackground )
        #ENDIF
        ' Print a padded string
        GLCDPrint ( 64 ,  47, Pad(Str(wordNumber), 5 ) )
        ' Print a padded string
        GLCDPrint ( 64 ,  54, Pad(Str(byteNumber), 3 ) )

        ' Draw a Box, to erase
        FilledBox (47, 10, 55, 18, 0 )

        ' Draw a character
        GLCDDrawChar(49, 10, CCount )
        ' Prepare a string
        outString = Str( CCount )
        GLCDfntDefaultSize = 2: SetFontWidth
        ' Draw a string
        GLCDDrawString(LED_GLCD_HEIGHT, 8, Pad(outString,3) )
        GLCDfntDefaultSize = 1: SetFontWidth
        ' Draw a filled box
        FilledBox 3,43,11,51, wordNumber

        ' Draw a filled box
        FilledCircle( 44,41,9, longNumber XOR 1)
        ' Draw a line
        Line 0,63,LED_GLCD_HEIGHT,31

        ' Do some simple maths
        longNumber = longNumber + 7 : wordNumber = wordNumber + 3 : byteNumber++


    Next
Loop

End

Macro SetFontWidth

    #IFDEF GLCD_OLED_FONT
        GLCDFontWidth = 5
    #ENDIF

    #IFNDEF GLCD_OLED_FONT
        GLCDFontWidth = 6
    #ENDIF

End Macro
