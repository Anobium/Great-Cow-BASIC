'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the ILI9486L GLCD capabilities.
'''It is a nice graphical LCD, suitable for a lot of various projects.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
''':
'''This has been tested using the hardware and the software SPI option.
''':
''':
'''@author  EvanV
'''@licence GPL
'''@version 1.0
'''@date    24.01.2019
'''********************************************************************************

'Chip Settings.
#CHIP 18f24k42, 64
#OPTION Explicit
#CONFIG EXTMCLR

#INCLUDE <glcd.h>

#DEFINE GLCD_TYPE GLCD_TYPE_ILI9486

'Pin mappings for SPI - this GLCD driver supports Hardware SPI and Software SPI
' read command line
#DEFINE GLCD_RD       portc.0
' write command line
#DEFINE GLCD_WR       portc.1
' Command/Data line.
#DEFINE GLCD_DC       portc.2
' Chip select line
#DEFINE GLCD_CS       portc.3
' Reset line
#DEFINE GLCD_RST      portc.4

#DEFINE GLCD_DataPort portb


'main program start here

'GLCD selected extension font set. ASCII characters 31-254, the extended font uses 1358 bytes of program memory
#DEFINE GLCD_EXTENDEDFONTSET1
GLCDfntDefaultSize = 1


'GLCDCLS  supports GLCDBackground as default
'GLCDCLS  also support passing color parameter.
'GLCDCLS [color]

'Available colors
'      TFT_WHITE
'      TFT_BLACK
'      TFT_RED
'      TFT_GREEN
'      TFT_BLUE
'      TFT_YELLOW
'      TFT_CYAN
'      TFT_MAGENTA
'      TFT_NAVY
'      TFT_DARKGREEN
'      TFT_DARKCYAN
'      TFT_MAROON
'      TFT_PURPLE
'      TFT_OLIVE
'      TFT_OIGHTGREY
'      TFT_DARKGREY
'      TFT_ORANGE
'      TFT_GREENYELLOW
'      TFT_PINK

Dim CCOUNT, BYTENUMBER, OLDFONT, OLDFONT As Byte

CCount = 31
Dim longNumber As Long
' max value = 4294967290
longNumber = 0
Dim wordNumber As Word
wordNumber = 0
byteNumber = 0

'These are not public methods, but, they are included
'Turn display off
DSTB_ILI9486L ( Off )
Wait 2 s
'Turn display on
DSTB_ILI9486L ( On )

Repeat 2

    GLCDCLS TFT_BLUE

    GLCDForeground = TFT_MAGENTA
    GLCDfntDefaultSize = 1
    GLCDPrint ( 2, 2, "GLCDPrint String" )


    GLCDForeground = TFT_WHITE
    GLCDfntDefaultSize = 2
    GLCDPrint ( 2, 12, "GLCDPrint String" )


    GLCDForeground = TFT_YELLOW
    GLCDfntDefaultSize = 3
    GLCDPrint ( 2,30, "GLCDPrint String" )

    longNumber = 0xFFFFFFFF
    wordNumber = 0xFFFF
    byteNumber = 0xFF

    GLCDCLS TFT_WHITE

    GLCDForeground = TFT_MAGENTA
    GLCDfntDefaultSize = 1
    GLCDPrint ( 2, 2, bytenumber )


    GLCDForeground = TFT_BLACK
    GLCDfntDefaultSize = 2
    GLCDPrint ( 2, 12, wordNumber )


    GLCDForeground = TFT_CYAN
    GLCDfntDefaultSize = 3
    GLCDPrint ( 2,30, longnumber )

    GLCDRotate ( Portrait_Rev )

End Repeat

GLCDRotate ( Portrait )
GLCDCLS TFT_BLUE
'Set font size.
GLCDfntDefaultSize = 1
' max value = 4294967290
longNumber = 0
wordNumber = 0
byteNumber = 0

'Using the global variable GLCDfntDefaultsize to show the different capabilities
Select Case GLCDfntDefaultSize

Case 1

    ShowCase1

Case 2

    ShowCase2

Case 3

    GLCDDrawString (2, 1, "GLCD font")
    GLCDDrawString (2, 25, "size = 3")
    Box 0,0,ILI9486L_GLCD_WIDTH-1, ILI9486L_GLCD_HEIGHT-1, TFT_BLUE
    Box ILI9486L_GLCD_WIDTH-5, ILI9486L_GLCD_HEIGHT-5,ILI9486L_GLCD_WIDTH-1, ILI9486L_GLCD_HEIGHT-1, TFT_WHITE

End Select

End


Sub ShowCase1

    GLCDDrawString (2, 1, "GCB", TFT_WHITE )
    GLCDDrawString (56,1,"v.98", TFT_YELLOW )
    GLCDDrawString (2, 16, "DrawStr", TFT_WHITE )

    GLCDDrawString ( 60, 31, "Long Number" )
    GLCDDrawString ( 60, 39, "Word Number" )
    GLCDDrawString ( 60, 47, "Byte Number" )

    GLCDDrawString ( 74, 16, "Asc:" )

    Box 0,0,ILI9486L_GLCD_WIDTH-1, ILI9486L_GLCD_HEIGHT-1, TFT_YELLOW
    Box ILI9486L_GLCD_WIDTH-5, ILI9486L_GLCD_HEIGHT-5,ILI9486L_GLCD_WIDTH-1, ILI9486L_GLCD_HEIGHT-1, TFT_WHITE

    'center
    Circle( ILI9486L_GLCD_WIDTH/2, ILI9486L_GLCD_HEIGHT/2, 50, TFT_LIGHTGREY )
    FilledCircle( ILI9486L_GLCD_WIDTH/2, ILI9486L_GLCD_HEIGHT/2, 25, TFT_DARKGREY  )

    Line 0,  ILI9486L_GLCD_HEIGHT-1 , ILI9486L_GLCD_WIDTH/2 +100,  (ILI9486L_GLCD_HEIGHT /2) - 50, TFT_CYAN
    Line  0, (ILI9486L_GLCD_HEIGHT /2) - 50, ILI9486L_GLCD_WIDTH/2 +100, (ILI9486L_GLCD_HEIGHT /2) - 50, TFT_CYAN

    FilledBox 2,ILI9486L_GLCD_HEIGHT/2+10,42,ILI9486L_GLCD_HEIGHT/2+50, TFT_RED

    oldfont = GLCDfntDefaultSize
    GLCDfntDefaultSize = 3
    GLCDDrawString ( 36, ILI9486L_GLCD_HEIGHT - 30 , "ILI9486L Driver" , TFT_WHITE )

    GLCDfntDefaultSize = 1
    GLCDDrawString ( ILI9486L_GLCD_WIDTH - 64, 2 , "Jan 2019" , TFT_WHITE )

    GLCDDrawString ( ILI9486L_GLCD_WIDTH - 64, 10 , "8Bit_Port" , TFT_WHITE )


    'Revert the font size
    GLCDfntDefaultSize = oldfont
    GLCDForeground = TFT_RED
    BigPrint_ILI9486L ( 100 , ILI9486L_GLCD_HEIGHT - 60 , "Great Cow Basic" )
    GLCDForeground = TFT_WHITE
    Do Forever

        GLCDPrint ( 144 , 31, longNumber)
        GLCDPrint ( 144 , 39, Pad( Str(wordnumber),5))
        GLCDPrint ( 144 , 47, Pad( Str(bytenumber),3))

        GLCDDrawChar(54, 16, CCount )
        'Draw a box around the Char below
        Box 52,15,62,26, TFT_WHITE

        GLCDDrawString ( 100, 16 , Pad( Str(CCount),3) )

        CCount++
        If CCount = 0 Then CCount = 31
        If CCount = 128 Then CCount = 192
        longNumber = longNumber + 7

        wordNumber = wordNumber + 3
        byteNumber++

    Loop

End Sub

Sub ShowCase2

    GLCDDrawString (2, 1,  "GCB",TFT_WHITE)
    GLCDDrawString (56,1,  "v.98",TFT_YELLOW)
    GLCDDrawString (2, 18, "DrawStr",TFT_WHITE)

    GLCDDrawString ( 2, 52, "Long:" )
    GLCDDrawString ( 2, 70, "Word:" )
    GLCDDrawString ( 2, 88, "Byte:" )

    GLCDDrawString ( 128, 18, "Asc:"+"  " )

    Box 0,0,ILI9486L_GLCD_WIDTH-1, ILI9486L_GLCD_HEIGHT-1, TFT_RED
    Box ILI9486L_GLCD_WIDTH-5, ILI9486L_GLCD_HEIGHT-5,ILI9486L_GLCD_WIDTH-1, ILI9486L_GLCD_HEIGHT-1, TFT_WHITE

    'center
    Circle( ILI9486L_GLCD_WIDTH/2, ILI9486L_GLCD_HEIGHT/2, 50, TFT_LIGHTGREY )
    FilledCircle( ILI9486L_GLCD_WIDTH/2, ILI9486L_GLCD_HEIGHT/2, 25, TFT_DARKGREY  )

    Line 0,  ILI9486L_GLCD_HEIGHT-1 , ILI9486L_GLCD_WIDTH/2 +100,  (ILI9486L_GLCD_HEIGHT /2) - 50, TFT_CYAN
    Line  0, (ILI9486L_GLCD_HEIGHT /2) - 50, ILI9486L_GLCD_WIDTH/2 +100, (ILI9486L_GLCD_HEIGHT /2) - 50, TFT_CYAN

    FilledBox 2,ILI9486L_GLCD_HEIGHT/2+10,42,ILI9486L_GLCD_HEIGHT/2+50, TFT_RED

    oldfont = GLCDfntDefaultSize
    GLCDfntDefaultSize = 3
    GLCDDrawString ( 36, ILI9486L_GLCD_HEIGHT - 30 , "ILI9486L Driver" , TFT_WHITE )

    GLCDfntDefaultSize = 1
    GLCDDrawString ( ILI9486L_GLCD_WIDTH - 64, 2 , "Jan 2019" , TFT_WHITE )

    GLCDDrawString ( ILI9486L_GLCD_WIDTH - 64, 10 , "8Bit_Port" , TFT_WHITE )

    'Revert the font size
    GLCDfntDefaultSize = oldfont
    GLCDForeground = TFT_RED
    BigPrint_ILI9486L ( 100 , ILI9486L_GLCD_HEIGHT - 60 , "Great Cow Basic" )
    GLCDForeground = TFT_WHITE
    Do Forever

        GLCDPrint ( 64 , 52, longNumber)
        GLCDPrint ( 64 , 70, Pad( Str(wordnumber),5))
        GLCDPrint ( 64 , 88, Pad( Str(bytenumber),3))

        GLCDDrawChar(99, 18, CCount )
        'Draw a box around the Char below
        Box 98,18,117,42, TFT_WHITE

        GLCDDrawString ( 180, 18 , Pad( Str(CCount),3) )

        CCount++
        If CCount = 0 Then CCount = 31
        If CCount = 128 Then CCount = 192
        longNumber = longNumber + 7
        wordNumber = wordNumber + 3
        byteNumber++

    Loop
End Sub


