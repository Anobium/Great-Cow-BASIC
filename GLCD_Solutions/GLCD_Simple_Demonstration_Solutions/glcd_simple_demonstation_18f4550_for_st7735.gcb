'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the ST7735 GLCD capabilities.  It is a nice small graphical LCD, suitable for a lot of various projects.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''@author  EvanV
'''@licence GPL
'''@version 1.0
'''@date    09.09.2019
'''********************************************************************************

'Chip Settings.
#CHIP 18F4550, 48
#CONFIG FOSC=HSPLL_HS, PLLDIV=5, CPUDIV=OSC1_PLL2,  MCLRE=On

#OPTION Explicit


#INCLUDE <glcd.h>
#DEFINE GLCD_TYPE GLCD_TYPE_ST7735
' can be ST7735_BLACKTAB, ST7735_GREENTAB or ST7735_REDTAB.  Each tab is a different ST7735 configuration.
#DEFINE ST7735TABCOLOR ST7735_BLACKTAB
' you may have to try all three - if you do not know what chipset you have.

'Pin mappings for SPI ST7735
'Data/Command select
#DEFINE GLCD_DC         portE.2
'CS Chip select
#DEFINE GLCD_CS         portB.2
#DEFINE GLCD_RESET      portC.6
'SPI SDO (MOSI)
#DEFINE GLCD_DO         portC.7
'SPI SCK
#DEFINE GLCD_SCK        portB.1

'    #define ST7735_HardwareSPI     ' remove comment out if you want to use software SPI.

'Optionally, you can define the HWSPIMode by using #define HWSPIMode masterfast where #define HWSPIMode is masterslow|master|masterfast
'This will overwrite the default in the GLCD SPI library.  This is so users do not have to change the library.
'the default is "master"
'The following example can be commented out if you want to use the default value
'#define HWSPIMode masterfast

'*************************** GLCD Specific setup ************************************************
'GLCD selected extension font set. ASCII characters 31-254, the extended font uses 1358 bytes of program memory
#DEFINE GLCD_EXTENDEDFONTSET1
GLCDfntDefaultSize = 1

'GLCDCLS  supports GLCDBackground as default
'GLCDCLS  also support passing color parameter.
'GLCDCLS [color]
' optionally you can rotate the screen.
GLCDRotate ( Landscape_Rev )


'Available colors
'TFT_BLACK
'TFT_RED
'TFT_GREEN
'TFT_BLUE
'TFT_WHITE
'TFT_PURPLE
'TFT_YELLOW
'TFT_CYAN
'TFT_D_GRAY
'TFT_L_GRAY
'TFT_LIGHTGREY
'TFT_MAROON
'TFT_OLIVE
'TFT_LIME
'TFT_AQUA
'TFT_TEAL
'TFT_NAVY
'TFT_FUCHSIA

Dim CCOUNT, BYTENUMBER, OLDFONT, OLDFONT As Byte

CCount = 31
Dim longNumber As Long
' max value = 4294967290
longNumber = 0
Dim wordNumber As Word
wordNumber = 0
byteNumber = 0


Repeat 2

    GLCDRotate ( Landscape_Rev )
    GLCDCLS TFT_BLUE

    GLCDForeground = TFT_YELLOW
    GLCDfntDefaultSize = 1
    GLCDPrint ( 2, 2, "Font 1" )

    GLCDForeground = TFT_WHITE
    GLCDfntDefaultSize = 2
    GLCDPrint ( 2, 12, "Font 2" )

    GLCDForeground = TFT_YELLOW
    GLCDfntDefaultSize = 3
    GLCDPrint ( 2,30, "Font 3" )

    Wait 2 s

    longNumber = 0xFFFFFFFF
    wordNumber = 0xFFFF
    byteNumber = 0xFF

    GLCDRotate ( Portrait )
    GLCDCLS TFT_WHITE
    GLCDfntDefaultSize = 1

    GLCDForeground = TFT_MAROON
    GLCDfntDefaultSize = 1
    GLCDPrint ( 2, 2, bytenumber )


    GLCDForeground = TFT_BLACK
    GLCDfntDefaultSize = 2
    GLCDPrint ( 2, 12, wordNumber )


    GLCDForeground = TFT_CYAN
    GLCDfntDefaultSize = 3
    GLCDPrint ( 2,30, longnumber )

    Wait 2 s

End Repeat



GLCDCLS TFT_BLUE
'Set font size.
'this determines the demo to execute also
GLCDfntDefaultSize = 1
' max value = 4294967290
longNumber = 0
wordNumber = 0
byteNumber = 0

'Using the global variable GLCDfntDefaultsize to show the different capabilities
Select Case GLCDfntDefaultSize

Case 1

    ShowCase1

Case 2

    ShowCase2

Case 3

    GLCDDrawString (2, 0, "GLCD")
    GLCDDrawString (2, 24, "Font")
    GLCDDrawString (2, 48, "size 3")
    Box 0,0,GLCDDeviceWidth, GLCDDeviceHeight, TFT_WHITE
    Box GLCDDeviceWidth-4, GLCDDeviceHeight-4,GLCDDeviceWidth, GLCDDeviceHeight, TFT_WHITE

End Select

End


Sub ShowCase1

    GLCDRotate ( Portrait_Rev )

    GLCDDrawString (2, 1, "GCB", TFT_WHITE )
    GLCDDrawString (26,1,"v0.98", TFT_YELLOW )
    GLCDDrawString (2, 20, "DrawStr", TFT_WHITE )

    GLCDDrawString ( 2, 31, "Long#" )
    GLCDDrawString ( 2, 39, "Word#" )
    GLCDDrawString ( 2, 47, "Byte#" )

    GLCDDrawString ( 74, 20, "Asc:" )

    Box 0,0,GLCDDeviceWidth, GLCDDeviceHeight, TFT_YELLOW
    Box GLCDDeviceWidth-4, GLCDDeviceHeight-4,GLCDDeviceWidth, GLCDDeviceHeight, TFT_WHITE

    'center
    Circle( (GLCDDeviceWidth+1)/2, (GLCDDeviceHeight+1)/2, 20, TFT_LIGHTGREY )
    FilledCircle( (GLCDDeviceWidth+1)/2, (GLCDDeviceHeight+1)/2, 10, TFT_DARKGREY  )

    Line 0,  GLCDDeviceHeight , (GLCDDeviceWidth+1)/2 +55,  (GLCDDeviceHeight /2) - 20, TFT_CYAN
    Line  0, (GLCDDeviceHeight /2) - 20, (GLCDDeviceWidth+1)/2 +55, (GLCDDeviceHeight /2) - 20, TFT_CYAN

    FilledBox 2,(GLCDDeviceHeight+1)/2+10,22,(GLCDDeviceHeight+1)/2+32, TFT_RED

    oldfont = GLCDfntDefaultSize
    GLCDfntDefaultSize = 2
    GLCDDrawString ( 36, GLCDDeviceHeight - 30 , "ST7735" , TFT_WHITE )

    GLCDfntDefaultSize = 1
    GLCDDrawString ( GLCDDeviceWidth - 57, 1 , "Apr 2019" , TFT_WHITE )
    #IFDEF ST7735_HardwareSPI
        GLCDDrawString ( GLCDDeviceWidth - 42, 10 , "HW SPI" , TFT_WHITE )
    #ENDIF

    #IFNDEF ST7735_HardwareSPI
        GLCDDrawString ( GLCDDeviceWidth - 42, 10 , "SW SPI" , TFT_WHITE )
    #ENDIF

    'Revert the font size
    GLCDfntDefaultSize = oldfont
    GLCDForeground = TFT_WHITE

    Do Forever

        GLCDPrint ( 40 , 31, longNumber)
        GLCDPrint ( 40 , 39, Pad( Str(wordnumber),5))
        GLCDPrint ( 40 , 47, Pad( Str(bytenumber),3))

        GLCDDrawChar(54, 20, CCount )
        'Draw a box around the Char below
        Box 52,19,62,30, TFT_WHITE

        GLCDDrawString ( 100, 20 , Pad( Str(CCount),3) )

        CCount++
        If CCount = 0 Then CCount = 31
        If CCount = 128 Then CCount = 192
        longNumber = longNumber + 7

        wordNumber = wordNumber + 3
        byteNumber++

    Loop

End Sub

Sub ShowCase2


    'Change the font size as this device. This is intended
    GLCDfntDefaultSize = 1

    GLCDRotate ( Landscape_Rev )
    GLCDDrawString (2, 1, "GCB", TFT_WHITE )
    GLCDDrawString (26,1,"v0.98", TFT_YELLOW )
    GLCDDrawString (2, 10, "DrawStr", TFT_WHITE )

    GLCDDrawString ( 64, 10, "Asc:" )
    GLCDDrawString ( 2, 18, "Long#" )
    GLCDDrawString ( 2, 26, "Word#" )
    GLCDDrawString ( 2, 34, "Byte#" )



    Box 0,0,GLCDDeviceWidth, GLCDDeviceHeight, TFT_YELLOW
    Box GLCDDeviceWidth-5, GLCDDeviceHeight-5,GLCDDeviceWidth, GLCDDeviceHeight, TFT_WHITE

    'center
    Circle( (GLCDDeviceWidth+1)/2, (GLCDDeviceHeight+1)/2, 20, TFT_LIGHTGREY )
    FilledCircle( (GLCDDeviceWidth+1)/2, (GLCDDeviceHeight+1)/2, 10, TFT_DARKGREY  )

    Line 0,  GLCDDeviceHeight , (GLCDDeviceWidth+1)/2 +55,  (GLCDDeviceHeight /2) - 20, TFT_CYAN
    Line  0, (GLCDDeviceHeight /2) - 20, (GLCDDeviceWidth+1)/2 +55, (GLCDDeviceHeight /2) - 20, TFT_CYAN

    FilledBox 2,(GLCDDeviceHeight+1)/2+10,22,(GLCDDeviceHeight+1)/2+32, TFT_RED

    oldfont = GLCDfntDefaultSize
    GLCDfntDefaultSize = 2
    GLCDDrawString ( 50, GLCDDeviceHeight - 30 , "ST7735 " , TFT_WHITE )

    GLCDfntDefaultSize = 1
    GLCDDrawString ( GLCDDeviceWidth - 57, 1 , "Apr 2019" , TFT_WHITE )
    #IFDEF ST7735_HardwareSPI
        GLCDDrawString ( GLCDDeviceWidth - 42, 10 , "HW SPI" , TFT_WHITE )
    #ENDIF

    #IFNDEF ST7735_HardwareSPI
        GLCDDrawString ( GLCDDeviceWidth - 42, 10 , "SW SPI" , TFT_WHITE )
    #ENDIF

    'Revert the font size
    GLCDfntDefaultSize = oldfont
    GLCDForeground = TFT_WHITE

    Do Forever

        GLCDPrint ( 40 , 18, longNumber)
        GLCDPrint ( 40 , 26, Pad( Str(wordnumber),5))
        GLCDPrint ( 40 , 34, Pad( Str(bytenumber),3))

        GLCDDrawChar(54, 10, CCount )
        'Draw a box around the Char below
        Box 52,10,62,20, TFT_WHITE

        GLCDDrawString ( 90, 10 , Pad( Str(CCount),3) )

        CCount++
        If CCount = 0 Then CCount = 31
        If CCount = 128 Then CCount = 192
        longNumber = longNumber + 7
        wordNumber = wordNumber + 3
        byteNumber++

    Loop
End Sub
