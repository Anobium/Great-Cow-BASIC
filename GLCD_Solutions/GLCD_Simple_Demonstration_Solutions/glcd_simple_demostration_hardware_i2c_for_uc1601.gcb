'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the UC1601 GLCD capabilities.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The display is 120*24 mm, with an active display surface of 4inches, and a 132*22 pixel resolution.
'''The display is easy to interface, using an I2C and SPI type of communication.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''@author  EvanV
'''@licence GPL
'''@version 1.0
'''@date    27.08.2019
'''********************************************************************************

' ----- Configuration
#CHIP 16f18446, 32
#OPTION Explicit


' ----- Define GLCD Hardware settings
#INCLUDE <glcd.h>

#DEFINE GLCD_TYPE GLCD_TYPE_UC1601
'I2C address
#DEFINE GLCD_I2C_Address      0x70
'Hard Reset pin connection
#DEFINE GLCD_RESET            portc.0
#DEFINE GLCD_PROTECTOVERRUN
#DEFINE GLCD_OLED_FONT

'Generated by PIC PPS Tool for Great Cow Basic
'PPS Tool version: 0.0.5.20
'PinManager data: v1.65.2
'Generated for 16F18446
'
'Template comment at the start of the config file
'
#STARTUP InitPPS, 85
#DEFINE PPSToolPart 16F18446

Sub InitPPS

    'Module: MSSP1
    'SCL1 > RB7
    RB7PPS = 0x0013
    'RB7 > SCL1 (bi-directional)
    SSP1CLKPPS = 0x000F
    'SDA1 > RB5
    RB5PPS = 0x0014
    'RB5 > SDA1 (bi-directional)
    SSP1DATPPS = 0x000D

End Sub
'Template comment at the end of the config file

' ----- Define Hardware settings
' Define I2C settings - CHANGE PORTS if required for your specific device.
#DEFINE HI2C_BAUD_RATE 100
#DEFINE HI2C_DATA  PORTB.5
#DEFINE HI2C_CLOCK PORTB.7
'I2C pins need to be input for SSP module when used on this type of Microchip PIC device
Dir HI2C_DATA In
Dir HI2C_CLOCK In
HI2CMode Master


' ----- Define variables

Dim BYTENUMBER, CCOUNT As Byte
CCount = 0
Dim longNumber As Long
' max value = 4294967290
longNumber = 0x00
longNumber = 0
Dim wordNumber As Word
Dim outstring As String
wordNumber = 0
byteNumber = 0

' ----- Main program

GLCDRotate ( Landscape_Rev )

GLCDfntDefaultSize = 2
GLCDFontWidth = 4
' Print some text
GLCDPrint( 0, 0, "Sanbum UC1601" )
GLCDfntDefaultSize = 1
GLCDFontWidth = 5
' Print some text
GLCDPrint( 10, 15, "Contrast " )
GLCDPrintString Str ( UC1601_CONTRAST )
Wait 4 s
GLCDCLS


GLCDPrint 0, 0,   "Great Cow BASIC"
GLCDPrint (0, 7, "Anobium 2019")
GLCDPrint (0, 14, "MPLAB Xpress Board")
GLCDPrint (94, 0, ChipNameStr )
GLCDPrint (64, 7, "I2C GLCD UC1601" )

Wait 4 s
GLCDCLS

' Prepare the static components of the screen
' Print some text
GLCDPrint ( 2,   1, "GLCDPrint")
' Print some more text
GLCDPrint ( 48,  1, "@")
' Print chip speed
GLCDPrint ( 54,  1, ChipMHz)
' Print some text
GLCDPrintString ( "Mhz")
' Draw a box
Box 0,0,GLCD_WIDTH-1, GLCD_HEIGHT-1
' Draw a box
Box GLCD_WIDTH-5, GLCD_HEIGHT-5,GLCD_WIDTH-1, GLCD_HEIGHT-1
' Draw a circle
Circle( GLCD_WIDTH/2+(GLCD_WIDTH/4),GLCD_HEIGHT/2,5)
' Draw a line
Line 0,GLCD_HEIGHT-1,GLCD_WIDTH/2+(GLCD_WIDTH/4),(GLCD_HEIGHT/2)-5
Wait 2 s
GLCDCLS

Do Forever

    For CCount = 32 To 127

        GLCDPrint ( 64 ,  0, "0x" )
        ' Print a HEX string
        GLCDPrintString ( Hex(longNumber_E ) )
        ' Print a HEX string
        GLCDPrintString ( Hex(longNumber_U ) )
        ' Print a HEX string
        GLCDPrintString ( Hex(longNumber_H ) )
        ' Print a HEX string
        GLCDPrintString ( Hex(longNumber   ) )
        ' Pad for string
        GLCDPrintString "  "

        ' Print a padded string
        GLCDPrint ( 64 ,  7, Pad(Str(wordNumber), 10 ) )
        ' Print a padded string
        GLCDPrint ( 64 ,  15, Pad(Str(byteNumber), 5 ) )


        ' Draw a Box
        FilledBox (1,1,8,8, GLCDBackground  )
        ' Draw a Box
        Box (0,0,9,9 )

        ' Draw a character
        GLCDDrawChar(3, 1, CCount )
        ' Prepare a string
        outString = Str( CCount )
        ' Draw a string
        GLCDDrawString(12, 1, Pad(outString,3) )

        ' Draw a filled box
        FilledBox 0,21,5,16, wordNumber

        ' Draw a filled box
        Ellipse( 40,11,12,8  , longNumber XOR 1)
        ' Draw a line
        Line 5,16,40,2

        ' Do some simple maths
        longNumber = longNumber + 1 : wordNumber = wordNumber + 1 : byteNumber++

    Next

Loop
End
