'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the KS0108 GLCD capabilities.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''@author  EvanV with works of ChuckH
'''@licence GPL
'''@version 1.2c
'''@date    22.12.14
'''********************************************************************************

#CHIP 16f1939,32
#OPTION Explicit

#INCLUDE <glcd.h>
' This is the Default value, not required.
#DEFINE GLCD_TYPE GLCD_TYPE_KS0108
' #define GLCDDirection 1                          ' Invert display, not always required

'D12 to actually since CS1, CS2 can be reversed on some devices
#DEFINE GLCD_CS1 PORTC.1
#DEFINE GLCD_CS2 PORTC.0
'D0 to pin 7 on LCD
#DEFINE GLCD_DB0 PORTD.0
'D1 to pin 8 on LCD
#DEFINE GLCD_DB1 PORTD.1
'D2 to pin 9 on LCD
#DEFINE GLCD_DB2 PORTD.2
'D3 to pin 10 on LCD
#DEFINE GLCD_DB3 PORTD.3
'D4 to pin 11 on LCD
#DEFINE GLCD_DB4 PORTD.4
'D5 to pin 12 on LCD
#DEFINE GLCD_DB5 PORTD.5
'D6 to pin 13 on LCD
#DEFINE GLCD_DB6 PORTD.6
'D7 to pin 14 on LCD
#DEFINE GLCD_DB7 PORTD.7

#DEFINE GLCD_RS PORTe.0
#DEFINE GLCD_Enable PORTe.2
#DEFINE GLCD_RW PORTe.1
#DEFINE GLCD_RESET PORTC.2

' Changed timing for 32 mhz device
' = 2 normal usage, 6 or above is OK at 32 mhz!
#DEFINE KS0108ReadDelay    2
' = 1 normal usage you may get away with 0, 2 or above is OK at 32 mhz!
#DEFINE KS0108WriteDelay   1
' = 1 normal usage you may get away with 0, 2 or above is OK at 32 mhz!
#DEFINE KS0108ClockDelay   1
'change to LED height, this, avoids set the 4 LED signals
#DEFINE LED_GLCD_HEIGHT GLCD_HEIGHT-1


Dim BYTENUMBER, CCOUNT As Byte

CCount = 0
Dim longNumber As Long
' max value = 4294967296
longNumber = 4294967290
Dim wordNumber As Word
Dim outString As String
wordNumber = 0
byteNumber = 0

' Print some text
GLCDPrint ( 0,   0, "Great Cow BASIC 2019")
' Print some text
GLCDPrint ( 0,   16, "@Evan R. Venn")
Wait 3 s
GLCDCLS

' Prepare the static components of the screen
' Print some text
GLCDPrint ( 0,   0, "PrintStr")
' Print some more text
GLCDPrint ( 64,  0, "LAT@")
' Print chip speed
GLCDPrint ( 88,  0, ChipMHz)
' Print some text
GLCDPrint ( 100, 0, "Mhz")
' Draw some text
GLCDDrawString( 0,8,"DrawStr")
' Draw a box
Box 0,0,GLCD_WIDTH-1, LED_GLCD_HEIGHT-1
' Draw a box
Box GLCD_WIDTH-5, LED_GLCD_HEIGHT-5,GLCD_WIDTH-1, LED_GLCD_HEIGHT-1
' Draw a circle
Circle( 44,41,15)
' Draw a line
Line LED_GLCD_HEIGHT,31,0,31

Do Forever
    For CCount = 32 To 127
        ' Print a HEX string
        GLCDPrint ( LED_GLCD_HEIGHT ,  36,  Hex(longNumber_E ) )
        ' Print a HEX string
        GLCDPrint ( 76 ,  36,  Hex(longNumber_U ) )
        ' Print a HEX string
        GLCDPrint ( 88 ,  36,  Hex(longNumber_H ) )
        ' Print a HEX string
        GLCDPrint ( 100 ,  36, Hex(longNumber   ) )
        ' Print a HEX string
        GLCDPrint ( 112 ,  36, "h" )


        ' Print a padded string
        GLCDPrint ( LED_GLCD_HEIGHT ,  44, Pad(Str(wordNumber), 5 ) )
        ' Print a padded string
        GLCDPrint ( LED_GLCD_HEIGHT ,  52, Pad(Str(byteNumber), 3 ) )


        ' Draw a Box
        Box (46,9,56,19)
        ' Draw a character
        GLCDDrawChar(48, 9, CCount )
        ' Prepare a string
        outString = Str( CCount )
        ' Draw a string
        GLCDDrawString(LED_GLCD_HEIGHT, 9, Pad(outString,3) )

        ' Draw a filled box
        FilledBox 3,43,11,51, wordNumber

        ' Draw a filled box
        FilledCircle( 44,41,9, longNumber XOR 1)
        ' Draw a line
        Line 0,63,LED_GLCD_HEIGHT,31

        ' Do some simple maths
        longNumber = longNumber + 7 : wordNumber = wordNumber + 3 : byteNumber++
    Next
Loop

End

