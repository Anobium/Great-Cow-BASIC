'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program demonstrates the rotation capabilities of the SSD1289 GLCD capabilities.
'''It is a nice graphical LCD, suitable for a lot of various projects.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''@author 	DimiK
'''@licence	GPL
'''@version	1.1
'''@date   	05.12.2015
'''**********

'Chip Settings
#CHIP mega2560, 16
#OPTION Explicit

'Include
#INCLUDE <glcd.h>

'GLCD Device Selection
#DEFINE GLCD_TYPE GLCD_TYPE_SSD1289
#DEFINE GLCD_EXTENDEDFONTSET1
'Define ports for the SSD1289 display
#DEFINE GLCD_WR   PORTG.2
#DEFINE GLCD_CS   PORTG.1
#DEFINE GLCD_RS   PORTD.7
#DEFINE GLCD_RST  PORTG.0
#DEFINE GLCD_DB0  PORTC.0
#DEFINE GLCD_DB1  PORTC.1
#DEFINE GLCD_DB2  PORTC.2
#DEFINE GLCD_DB3  PORTC.3
#DEFINE GLCD_DB4  PORTC.4
#DEFINE GLCD_DB5  PORTC.5
#DEFINE GLCD_DB6  PORTC.6
#DEFINE GLCD_DB7  PORTC.7
#DEFINE GLCD_DB8  PORTA.0
#DEFINE GLCD_DB9  PORTA.1
#DEFINE GLCD_DB10 PORTA.2
#DEFINE GLCD_DB11 PORTA.3
#DEFINE GLCD_DB12 PORTA.4
#DEFINE GLCD_DB13 PORTA.5
#DEFINE GLCD_DB14 PORTA.6
#DEFINE GLCD_DB15 PORTA.7

GLCDCLS SSD1289_blue

'Set font size, in this demo this also set the demonstration to execute.
GLCDfntDefaultSize = 2

Dim BYTENUMBER, OLDFONT, CCOUNT, OLDFONT, CCOUNT As Byte
Dim longNumber As Long
Dim wordNumber As Word

' max value = 4294967290
longNumber = 0
wordNumber = 0
byteNumber = 0

'Using the global variable GLCDfntDefaultsize to show the different capabilities
Select Case GLCDfntDefaultSize

Case 1

    ShowCase1

Case 2

    ShowCase2

Case 3

    GLCDDrawString (2, 1, "GLCD font")
    GLCDDrawString (2, 25, "size = 3")
    Box 0,0,SSD1289_GLCD_WIDTH-1, SSD1289_GLCD_HEIGHT-1, SSD1289_BLUE
    Box SSD1289_GLCD_WIDTH-5, SSD1289_GLCD_HEIGHT-5,SSD1289_GLCD_WIDTH-1, SSD1289_GLCD_HEIGHT-1, SSD1289_WHITE

End Select

End


Sub ShowCase1

    GLCDRotate ( Portrait )

    GLCDDrawString (2, 1, "GCB", SSD1289_WHITE )
    GLCDDrawString (56,1,"v.95", SSD1289_YELLOW )
    GLCDDrawString (2, 16, "DrawStr", SSD1289_WHITE )

    GLCDDrawString ( 60, 31, "Long Number" )
    GLCDDrawString ( 60, 39, "Word Number" )
    GLCDDrawString ( 60, 47, "Byte Number" )

    GLCDDrawString ( 74, 16, "Asc:" )

    Box 0,0,SSD1289_GLCD_WIDTH-1, SSD1289_GLCD_HEIGHT-1, SSD1289_YELLOW
    Box SSD1289_GLCD_WIDTH-5, SSD1289_GLCD_HEIGHT-5,SSD1289_GLCD_WIDTH-1, SSD1289_GLCD_HEIGHT-1, SSD1289_WHITE

    'center
    Circle( SSD1289_GLCD_WIDTH/2, SSD1289_GLCD_HEIGHT/2, 50, SSD1289_SILVER )
    FilledCircle( SSD1289_GLCD_WIDTH/2, SSD1289_GLCD_HEIGHT/2, 25, SSD1289_D_GRAY  )

    Line 0,  SSD1289_GLCD_HEIGHT-1 , SSD1289_GLCD_WIDTH/2 +100,  (SSD1289_GLCD_HEIGHT /2) - 50, SSD1289_CYAN
    Line  0, (SSD1289_GLCD_HEIGHT /2) - 50, SSD1289_GLCD_WIDTH/2 +100, (SSD1289_GLCD_HEIGHT /2) - 50, SSD1289_CYAN

    FilledBox 2,SSD1289_GLCD_HEIGHT/2+10,42,SSD1289_GLCD_HEIGHT/2+50, SSD1289_RED

    oldfont = GLCDfntDefaultSize
    GLCDfntDefaultSize = 3
    GLCDDrawString ( 42, SSD1289_GLCD_HEIGHT - 30 , "SSD1289" , SSD1289_WHITE )

    GLCDfntDefaultSize = 1
    GLCDDrawString ( SSD1289_GLCD_WIDTH - 60, 2 , " Dec 2019" , SSD1289_WHITE )


    'Revert the font size
    GLCDfntDefaultSize = oldfont
    GLCDForeground = SSD1289_WHITE

    Do Forever

        GLCDPrint ( 144 , 31, longNumber)
        GLCDPrint ( 144 , 39, Pad( Str(wordnumber),5))
        GLCDPrint ( 144 , 47, Pad( Str(bytenumber),3))

        GLCDDrawChar(54, 16, CCount )
        'Draw a box around the Char below
        Box 52,15,62,26, SSD1289_WHITE

        GLCDDrawString ( 100, 16 , Pad( Str(CCount),3) )

        CCount++
        If CCount = 0 Then CCount = 31
        If CCount = 128 Then CCount = 192
        longNumber = longNumber + 7

        wordNumber = wordNumber + 3
        byteNumber++

    Loop

End Sub

Sub ShowCase2

    GLCDRotate ( Landscape_Rev )

    GLCDDrawString (2, 1, "GCB",SSD1289_WHITE)
    GLCDDrawString (56,1,"v.95",SSD1289_YELLOW)
    GLCDDrawString (2, 18, "DrawStr",SSD1289_WHITE)

    GLCDDrawString ( 2, 52, "Long:" )
    GLCDDrawString ( 2, 70, "Word:" )
    GLCDDrawString ( 2, 88, "Byte:" )

    GLCDDrawString ( 128, 18, "Asc:"+"  " )

    Box 0,0,SSD1289_GLCD_WIDTH-1, SSD1289_GLCD_HEIGHT-1, SSD1289_YELLOW
    Box SSD1289_GLCD_WIDTH-5, SSD1289_GLCD_HEIGHT-5,SSD1289_GLCD_WIDTH-1, SSD1289_GLCD_HEIGHT-1, SSD1289_WHITE

    'center
    Circle( SSD1289_GLCD_WIDTH/2, SSD1289_GLCD_HEIGHT/2, 50, SSD1289_SILVER )
    FilledCircle( SSD1289_GLCD_WIDTH/2, SSD1289_GLCD_HEIGHT/2, 25, SSD1289_D_GRAY  )

    Line 0,  SSD1289_GLCD_HEIGHT-1 , SSD1289_GLCD_WIDTH/2 +100,  (SSD1289_GLCD_HEIGHT /2) - 50, SSD1289_CYAN
    Line  0, (SSD1289_GLCD_HEIGHT /2) - 50, SSD1289_GLCD_WIDTH/2 +100, (SSD1289_GLCD_HEIGHT /2) - 50, SSD1289_CYAN

    FilledBox 2,SSD1289_GLCD_HEIGHT/2+10,42,SSD1289_GLCD_HEIGHT/2+50, SSD1289_RED

    oldfont = GLCDfntDefaultSize
    GLCDfntDefaultSize = 3
    GLCDDrawString ( 50, SSD1289_GLCD_HEIGHT - 30 , "SSD1289 Driver" , SSD1289_WHITE )

    GLCDfntDefaultSize = 1
    GLCDDrawString ( SSD1289_GLCD_WIDTH - 60, 2 , "Dec 2019" , SSD1289_WHITE )

    'Revert the font size
    GLCDfntDefaultSize = oldfont
    GLCDForeground = SSD1289_WHITE
    BigPrint_SSD1289 ( 100 , SSD1289_GLCD_HEIGHT - 60 , "Great Cow Basic" )

    Do Forever

        GLCDPrint ( 62 , 52, longNumber)

        GLCDPrint ( 62 , 70, Pad( Str(wordnumber),5 ))
        GLCDPrint ( 62 , 88, Pad( Str(bytenumber),3  ))


        GLCDDrawChar(99, 18, CCount )
        'Draw a box around the Char below
        Box 98,18,117,42, SSD1289_WHITE

        GLCDDrawString ( 180, 18 , Pad( Str(CCount),3) )

        CCount++
        If CCount = 0 Then CCount = 31
        If CCount = 128 Then CCount = 192
        longNumber = longNumber + 7
        wordNumber = wordNumber + 3
        byteNumber++

    Loop
End Sub
