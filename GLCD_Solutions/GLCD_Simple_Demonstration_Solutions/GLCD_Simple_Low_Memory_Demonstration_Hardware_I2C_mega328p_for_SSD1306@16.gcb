'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the '''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the SSD1306 GLCD capabilities in Low Memory Operations
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The SSD1306 controller a small graphical OLED, suitable for a lot of various projects.
'''The display is 38*35 mm, with an active display surface of 0.96inches , and a 128*64 pixel resolution.
'''The display is easy to interface, using an I2C type of communication.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''@author  EvanV
'''@licence GPL
'''@version 1.0
'''@date    21.8.17
'''********************************************************************************

#CHIP mega328p,16
#INCLUDE <glcd.h>

' ----- Define Hardware settings
' Define I2C settings
#DEFINE HI2C_BAUD_RATE 400
#DEFINE HI2C_DATA
HI2CMode Master

' ----- Define GLCD Hardware settings
'for 128 * 64 pixels support
#DEFINE GLCD_TYPE GLCD_TYPE_SSD1306
#DEFINE GLCD_I2C_Address 0x78
#DEFINE GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
#DEFINE GLCD_TYPE_SSD1306_CHARACTER_MODE_ONLY

Dim outString As String * 21

GLCDCLS
GLCD_Open_PageTransaction 0,7
GLCDPrint 0, 0, "Great Cow BASIC"
GLCDPrint (0, 16, "Anobium 2019")
GLCD_Close_PageTransaction
Wait 3 s
GLCDCLS

Do Forever

    For CCount = 32 To 127

        ' Prepare a string
        outString = Str( CCount )

        GLCD_Open_PageTransaction 0,7

        ' Prepare the static components of the screen
        ' Print some text
        GLCDPrint ( 0,   0, "PrintStr")
        GLCDPrint ( 64,  0, "@")
        ' Print some more text
        ' Print chip speed
        GLCDPrint ( 72,  0, ChipMHz)
        ' Print some text
        GLCDPrint ( 86, 0, "Mhz")
        ' Draw some text
        GLCDDrawString( 0,8,"DrawStr")
        ' Draw a box
        Box 0,0,GLCD_WIDTH-1, GLCD_HEIGHT-1
        ' Draw a box
        Box GLCD_WIDTH-5, GLCD_HEIGHT-5,GLCD_WIDTH-1, GLCD_HEIGHT-1
        ' Draw a circle
        Circle( 44,41,15)
        ' Draw a line
        Line 64,31,0,31

        ' Print a HEX string
        GLCDPrint ( 64 ,  36,  Hex(longNumber_E ) )
        ' Print a HEX string
        GLCDPrint ( 76 ,  36,  Hex(longNumber_U ) )
        ' Print a HEX string
        GLCDPrint ( 88 ,  36,  Hex(longNumber_H ) )
        ' Print a HEX string
        GLCDPrint ( 100 ,  36, Hex(longNumber   ) )
        ' Print a HEX string
        GLCDPrint ( 112 ,  36, "h" )

        ' Print a padded string
        GLCDPrint ( 64 ,  44, Pad(Str(wordNumber), 5 ) )
        ' Print a padded string
        GLCDPrint ( 64 ,  52, Pad(Str(byteNumber), 3 ) )

        ' Draw a Box
        Box (46,8,56,19)
        ' Draw a character
        GLCDDrawChar(48, 9, CCount )

        ' Draw a string
        GLCDDrawString(64, 9, Pad(outString,3) )

        ' Draw a filled box
        FilledBox 3,43,11,51, wordNumber

        ' Draw a filled box
        FilledCircle( 44,41,9, longNumber XOR 1)
        ' Draw a line
        Line 0,63,64,31

        GLCD_Close_PageTransaction

        ' Do some simple maths
        longNumber = longNumber + 7 : wordNumber = wordNumber + 3 : byteNumber++
    Next
Loop
End
