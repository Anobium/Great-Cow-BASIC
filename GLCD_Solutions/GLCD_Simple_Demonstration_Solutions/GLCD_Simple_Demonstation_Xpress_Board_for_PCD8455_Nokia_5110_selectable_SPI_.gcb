'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the PCD8455 GLCD capabilities.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The PCD8544 controller uses a Nokia 3310 GLCD.  It is a nice small graphical LCD, suitable for a lot of various projects.
'''The display is 38*35 mm, with an active display surface of 30*22 mm, and a 84*48 pixel resolution.
'''The display is easy to interface, using an SPI type of communication.
'''A 1-10 uF electrolytic capacitor from VOUT to GND, is the only external component needed.
'''"#DEFINE GLCD_TYPE_PCD8544_CHARACTER_MODE_ONLY" can be used to force the GLCD into text mode.  Microprocessors with limited memory will default to text mode only.
''':
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
''':
'''@author  EvanV
'''@licence GPL
'''@version 1.5
'''@date    06.05.17
'''
'''********************************************************************************
'''@author  EvanV & C.A.Roper
'''@licence GPL
'''@version 0.98.40
'''@date    09.02.19
'''********************************************************************************

'Chip Settings.
#CHIP 16f18855
#OPTION Explicit

#INCLUDE <glcd.h>

'Generated by PIC PPS Tool for Great Cow Basic
'PPS Tool version: 0.0.5.11
'PinManager data: v1.55
'
'Template comment at the start of the config file
'
'    #startup InitPPS, 85
'
Sub InitPPS
    UNLOCKPPS

    'Module: MSSP1
    'SCK1 > RB3
    RB3PPS = 0x0014
    'RB3 > SCK1 (bi-directional)
    SSP1CLKPPS = 0x000B
    'SDO1 > RB5
    RB5PPS = 0x0015

    LOCKPPS
End Sub
'Template comment at the end of the config file


'    #define PCD8544_HardwareSPI     'comment out to use Software SPI

#DEFINE GLCD_TYPE GLCD_TYPE_PCD8544
'    #DEFINE GLCD_TYPE_PCD8544_CHARACTER_MODE_ONLY


' Pin mappings for SPI for PCD8455 Device, these ports NEED to match the PPS settings
'PPS needs to match
#DEFINE GLCD_DO portb.5
'PPS needs to match
#DEFINE GLCD_SCK portb.3
#DEFINE GLCD_DC portc.2
#DEFINE GLCD_CS portb.2
#DEFINE GLCD_RESET portb.1

' write delay of 0 is works at 32mhz.
#DEFINE PCD8544ClockDelay 0
' write delay of 0 is works at 32mhz.
#DEFINE PCD8544WriteDelay 0

Dim BYTENUMBER, WIDTHOFPICTURE, HEIGHTOFPICTURE, CURRCHARVAL, ORGCHARLOCX, FIRSTPASS, CHARLOCY, CURRCHARROW, CHARLOCX, CCOUNT As Byte


GLCDCLS

CCount = 0
Dim longNumber As Long
' max value = 4294967290
longNumber = 123456
Dim wordNumber As Word
Dim outstring As String
wordNumber = 0
byteNumber = 0

Dim lengthofpicture, ram_index As Word
Repeat 4
    ' Display a BMP
    GLCDCLS


    ' Add your own case statement here to handle multiple BMPs, you just  need the variables to be defined
    ReadTable Anobium84_48, 0, lengthofpicture
    ReadTable Anobium84_48, 1, widthofpicture
    ReadTable Anobium84_48, 2, heightofpicture


    ' For BMP that fit the display simple write the data to the screen
    If widthofpicture = 0x54 Then
        ' start at third byte and finish at the end
        For  ram_index =  3 To lengthofpicture

            ' Add your own case statement here to handle multiple BMPs, you just  need set CurrCharVal to the data value
            ReadTable Anobium84_48,  ( ram_index ), CurrCharVal

            Write_Data_PCD8544(CurrCharVal)
            #IFNDEF GLCD_TYPE_PCD8544_CHARACTER_MODE_ONLY
                ' Start at index 1!
                PCD8544_BufferAlias( ram_index - 2) = CurrCharVal
            #ENDIF
        Next


    Else
        ' For BMPs that do not fit the display, slow write.... lots of calcs....


        ' specify X pos for BMP
        CharLocX = 0
        ' specify Y pos for BMP.  For buffer any valid Y, for non-buffered 0,8,16, 24 etc...
        CharLocY = 0
        ' specify X orginisal X pos
        OrgCharLocX = CharLocX
        ' specify this is the first pass
        firstpass = TRUE

        ' handle non buffered devices
        #IFDEF GLCD_TYPE_PCD8544_CHARACTER_MODE_ONLY
            ' position cursor
            Cursor_Position_PCD8544 ( CharLocX , CharLocY )
        #ENDIF

        ' start at third byte and finish at the end
        For  ram_index =  3 To lengthofpicture

            ' Add your own case statement here to handle multiple BMPs, you just  need set CurrCharVal to the data value
            ' read data
            ReadTable Anobium84_48,  ( ram_index ), CurrCharVal

            If ( ( ram_index - 3 ) % widthofpicture ) = 0  AND firstpass = FALSE Then
                ' change position for new line of data
                CharLocY = CharLocY + 8
                CharLocX = OrgCharLocX
                #IFDEF GLCD_TYPE_PCD8544_CHARACTER_MODE_ONLY
                    Cursor_Position_PCD8544 ( CharLocX , CharLocY )
                #ENDIF

            End If

            ' draw to buffer, and display using PSET
            #IFNDEF GLCD_TYPE_PCD8544_CHARACTER_MODE_ONLY
                For CurrCharRow = 0 To 7
                    If ( CharLocY + CurrCharRow < GLCD_HEIGHT ) AND ( CharLocX < GLCD_WIDTH ) Then
                        If CurrCharVal.0 = 0 Then
                            Pset CharLocX , CharLocY + CurrCharRow, GLCDBackground
                        Else
                            Pset CharLocX , CharLocY + CurrCharRow, GLCDForeground
                        End If
                    End If
                    Rotate CurrCharVal Right
                Next
            #ENDIF

            ' write to display - un-buffered
            #IFDEF GLCD_TYPE_PCD8544_CHARACTER_MODE_ONLY
                Write_Data_PCD8544(CurrCharVal)
            #ENDIF
            ' now this is NOT the first pass
            firstpass = FALSE
            ' increment the X pos
            CharLocX++
        Next
    End If
    Wait 1 s
    GLCDCLS
    GLCDPrint (0, 0, "Clear Screen")
    GLCDPrint (0, 0, "Clear Screen")
    Wait 1 s
    GLCDCLS
    Wait 1 s
    GLCDCLS
End Repeat



Do Forever
    For CCount = 32 To 127
        GLCDPrint (2, 1, "PrintStr")
        GLCDDrawString (2, 9, "DrawStr")
        GLCDPrint ( 44 ,  21, "     ")
        ' word value
        GLCDPrint ( 44 ,  29, "     ")
        ' Byte value
        GLCDPrint ( 44 ,  37, "   ")

        outstring = Hex( longNumber_U)
        GLCDPrint ( 44 , 21,outstring )
        outstring = Hex( longNumber_H)
        GLCDPrint ( 55 , 21, outstring)
        outstring = Hex( longNumber)
        GLCDPrint ( 67 , 21,  outstring )

        GLCDPrint ( 44 , 29, Mid( Str(wordNumber),1, 6))
        GLCDPrint ( 44 , 37, byteNumber)

        Box 46,9,57,19
        GLCDDrawChar(48, 10, CCount )
        outString = Str( CCount )
        ' draw a box to overwrite existing strings
        FilledBox(58,9,GLCD_WIDTH-1,17,GLCDBackground )
        #IFNDEF GLCD_TYPE_PCD8544_CHARACTER_MODE_ONLY
            GLCDfntDefaultSize = 2: GLCDFontWidth = 4
            GLCDDrawString(60, 4, "   " )
            GLCDDrawString(60, 4, outString )
            GLCDfntDefaultSize = 1: GLCDFontWidth = 5
        #ENDIF
        #IFDEF GLCD_TYPE_PCD8544_CHARACTER_MODE_ONLY
            GLCDDrawString(58, 4, outString )
        #ENDIF

        Box 0,0,GLCD_WIDTH-1, GLCD_HEIGHT-1
        Box GLCD_WIDTH-5, GLCD_HEIGHT-5,GLCD_WIDTH-1, GLCD_HEIGHT-1
        FilledBox 2,30,6,38, wordNumber
        'center
        Circle( 25,30,8,1)
        'center
        FilledCircle( 25,30,4,longNumber XOR 1)

        Line 0,  GLCD_HEIGHT-1 , GLCD_WIDTH/2,  (GLCD_HEIGHT /2) +1
        Line  GLCD_WIDTH/2, (GLCD_HEIGHT /2) +1 ,0, (GLCD_HEIGHT /2) +1


        longNumber = longNumber + 7
        wordNumber = wordNumber + 3
        byteNumber++
    Next
Loop

End





Table Anobium84_48 As Byte

    ' start data
    0x54
    0x30
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x80
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x80
    0xF0
    0x9C
    0xE7
    0x38
    0x0E
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x02
    0x06
    0x0D
    0x0B
    0x1E
    0x34
    0x68
    0xD8
    0xF0
    0x60
    0xC0
    0x80
    0x80
    0x80
    0xC0
    0xC0
    0x40
    0x40
    0x60
    0x60
    0x60
    0x20
    0x20
    0x20
    0x30
    0x30
    0x10
    0x10
    0x10
    0x18
    0x18
    0x08
    0x0E
    0x1B
    0x7E
    0xE3
    0x80
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0xC0
    0x20
    0xC0
    0x00
    0x00
    0x01
    0x7F
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0xE0
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x20
    0x00
    0x03
    0x07
    0x0C
    0x08
    0x30
    0x60
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0xC0
    0x38
    0x16
    0x11
    0x10
    0x11
    0x16
    0x38
    0xC0
    0x00
    0xFF
    0x02
    0x01
    0x01
    0x01
    0xFE
    0x00
    0x00
    0x7E
    0x81
    0x81
    0x81
    0x81
    0x7E
    0x00
    0x00
    0xFF
    0x42
    0x81
    0x81
    0x81
    0x7E
    0x00
    0x00
    0xFF
    0x00
    0x00
    0x7F
    0x80
    0x80
    0x80
    0x40
    0xFF
    0x00
    0x00
    0xFF
    0x02
    0x01
    0x01
    0x01
    0xFE
    0x02
    0x01
    0x01
    0x01
    0xFE
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x3E
    0x60
    0x40
    0xC0
    0x80
    0x80
    0x80
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x80
    0xC0
    0xE0
    0x70
    0x18
    0x0C
    0x06
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x01
    0x01
    0x01
    0x03
    0x02
    0x06
    0x06
    0x04
    0x0C
    0x08
    0x18
    0x18
    0x10
    0x30
    0x20
    0x60
    0x60
    0x40
    0x60
    0x30
    0x18
    0x0C
    0x06
    0x03
    0x01
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
    0x00
End Table
