'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the UC1601 GLCD capabilities.
'''This program updates the GLCD with a BMP then updates the GLCD with a bar graph.
'''
'''If you assume the BMP is a perfect fit for GLCD.  Use this method otherwise you will have to use a more complex method
'''Read BMP into buffer then send buffer to GLCD.
'''This uses private methods that are in the GLCD library.
'''
'''@author  EvanV
'''@licence GPL
'''@version 1.0
'''@date    27.08.2019
'''********************************************************************************

' ----- Configuration
#CHIP 16f18446, 32
#OPTION Explicit


' ----- Define GLCD Hardware settings
#INCLUDE <glcd.h>

#DEFINE GLCD_TYPE GLCD_TYPE_UC1601
'I2C address
#DEFINE GLCD_I2C_Address      0x70
'Hard Reset pin connection
#DEFINE GLCD_RESET            portc.0
#DEFINE GLCD_PROTECTOVERRUN
#DEFINE GLCD_OLED_FONT

'Generated by PIC PPS Tool for Great Cow Basic
'PPS Tool version: 0.0.5.20
'PinManager data: v1.65.2
'Generated for 16F18446
'
'Template comment at the start of the config file
'
#STARTUP InitPPS, 85
#DEFINE PPSToolPart 16F18446

Sub InitPPS

    'Module: MSSP1
    'SCL1 > RB7
    RB7PPS = 0x0013
    'RB7 > SCL1 (bi-directional)
    SSP1CLKPPS = 0x000F
    'SDA1 > RB5
    RB5PPS = 0x0014
    'RB5 > SDA1 (bi-directional)
    SSP1DATPPS = 0x000D

End Sub
'Template comment at the end of the config file

' ----- Define Hardware settings
' Define I2C settings - CHANGE PORTS if required for your specific device.
#DEFINE HI2C_BAUD_RATE 100
#DEFINE HI2C_DATA  PORTB.5
#DEFINE HI2C_CLOCK PORTB.7
'I2C pins need to be input for SSP module when used on this type of Microchip PIC device
Dir HI2C_DATA In
Dir HI2C_CLOCK In
HI2CMode Master


' ----- Main body of program commences here.  This is reusable code.

GLCDCLS

#INCLUDE "gcb.bmp"
' Table Name. This is required.  Just means you can reuse the BMP load code but referring your BMP to TableData
#DEFINE TableData GCB

' ----- Variables
' These must be WORDs as this a large table.    These are required!!
Dim TableReadPosition As Word
Dim TableLen As Word

Dim Objwidth, Objheight, Wbyte As Byte




' These must be WORDs as this a large table.
Dim TableReadPosition, TableLen As Word

' Start of code
TableReadPosition = 1
ReadTable TableData, TableReadPosition, objwidth: TableReadPosition++
ReadTable TableData, TableReadPosition, objHeight: TableReadPosition++

'   If we assume the BMP is a perfect fit for GLCD.  Use this method.
'   Read BMP into buffer then send buffer to GLCD.
'   This uses private methods that are in the GLCD library.
'   BMP file has the first piece of data at byte number 3.

GLCDCLS
'Start the communications transactions
Open_Transaction_Data_UC1601
For TableReadPosition = 3 To 399
    ' get the next byte
    ReadTable TableData, TableReadPosition, wByte
    'If you do not want the buffer to represent the GLCD... then, remove the next assignment
    'Updates the internal buffer
    UC1601_BufferAlias ( TableReadPosition - 2 ) = wByte
    'Send the datra via a transaction
    Write_Transaction_Data_UC1601( wByte )
Next
'End the communications transactions
Close_Transaction_UC1601


'Optionally, a box to confirm we have the BMP
'    box 1,1,130,20
'Optionally, a box to remove the corner pixels.
'     box 0,0,131,21,0

'We have put the BMP on the GLCD, now update the GLCD using public methods.
Dim mypos As Byte
'Fill in the BMP graph bar
FilledBox 12,14, 56, 12, 0
#DEFINE bargraph mypos, 14, mypos+10, 12

Do
    For mypos = 12 To 46
        FilledBox bargraph, 1
        Wait 120 ms
        FilledBox  bargraph, 0
        Wait 120 ms
    Next
    For mypos = 45 To 13
        FilledBox bargraph, 1
        Wait 120 ms
        FilledBox  bargraph, 0
        Wait 120 ms
    Next


Loop
End
