'Chip Settings.
#CHIP 18F45k42, 64
#OPTION Explicit
#INCLUDE <glcd.h>

'
'Generated by PIC PPS Tool for Great Cow Basic
'PPS Tool version: 0.0.5.25
'PinManager data: Not available (3)
'Generated for 18f25k42
'
'Template comment at the start of the config file
'
#STARTUP InitPPS, 85
#DEFINE PPSToolPart 18F45k42
Sub InitPPS
    #IFDEF ILI9341_hardwarespi
        'Module: SPI1
        'RC4 > SDI1
        SPI1SDIPPS = 0x0014
        'SDO1 > RC5
        RC5PPS = 0x001F
        'SCK1 > RC3
        RC3PPS = 0x001E
        'RC3 > SCK1 (bi-directional)
        SPI1SCKPPS = 0x0013
    #ENDIF
End Sub

#DEFINE GLCD_TYPE GLCD_TYPE_ILI9341


'******************************************************************************************************
'Setup the GLCD

#DEFINE ILI9341_HardwareSPI

'Pin mappings for SPI - this GLCD driver supports Hardware SPI and Software SPI
' Data command/line
#DEFINE GLCD_DC     portA.0
' Chip select line
#DEFINE GLCD_CS     portC.1
' Reset line
#DEFINE GLCD_RESET  portC.0
'GLCD MOSI connect to MCU SDO
#DEFINE GLCD_DO     portC.5
' Clock Line
#DEFINE GLCD_SCK    portC.3
Dir   GLCD_DC     Out
Dir   GLCD_CS     Out
Dir   GLCD_RESET  Out
Dir   GLCD_DO     Out
Dir   GLCD_SCK    Out

#DEFINE SPI_BAUD_RATE_REGISTER 2

'setting random generetor seed
#DEFINE    randomize_seed Timer2

GLCDBackground = ILI9341_BLUE
GLCDForeground = ILI9341_WHITE
'Clear screen
GLCDCLS(GLCDBackground)


Dim x_0, y_0, p_factor, n_Parabola  As Word
Dim n_color, n_sets, Case_Choice As Byte
Dim ModeStp, type0 As Byte
Dim Counter As Byte

Table Colors As Word
    ILI9341_BLACK
    ILI9341_RED
    ILI9341_GREEN
    ILI9341_BLUE
    ILI9341_WHITE
    ILI9341_PURPLE
    ILI9341_YELLOW
    ILI9341_CYAN
    ILI9341_D_GRAY
    ILI9341_L_GRAY
    ILI9341_SILVER
    ILI9341_MAROON
    ILI9341_OLIVE
    ILI9341_LIME
    ILI9341_AQUA
    ILI9341_TEAL
    ILI9341_NAVY
    ILI9341_FUCHSIA
End Table

'    Linecolour=ILI9341_white

n_color=18
'1 stop at first border encounter. 2 when all borders are encountered
ModeStp=2
Case_Choice=8

Do
    Select Case Case_Choice

    Case 1
        'single  x_aligned Parabola
        x_0=GLCD_WIDTH/4
        y_0=GLCD_HEIGHT/4
        p_factor=10
        type0=1
        parabola(x_0, y_0, p_factor, type0, ModeStp)

    Case 2
        'single y_aligned Parabola
        x_0=GLCD_WIDTH/2
        y_0=GLCD_HEIGHT/2
        p_factor=7
        type0=2
        parabola(x_0, y_0, p_factor, type0, ModeStp)

    Case 3
        'double x_aligned and y-aligned Parabola
        x_0=3*GLCD_WIDTH/4
        y_0=GLCD_HEIGHT/4
        p_factor=6
        type0=1
        parabola(x_0, y_0, p_factor, type0, ModeStp)
        type0=2
        parabola(x_0, y_0, p_factor, type0, ModeStp)

    Case 4
        'set of n_parabola centered, x-aligned, Parabola
        n_parabola=200
        type0=1
        x_0=GLCD_WIDTH/2
        y_0=GLCD_HEIGHT/2
        ScanParabola(x_0, y_0, n_parabola,type0, ModeStp)

    Case 5
        'set of n_Parabola centered, y-aligned, Parabola
        n_parabola=100
        type0=2
        x_0=GLCD_WIDTH/2
        y_0=GLCD_HEIGHT/2
        ScanParabola(x_0, y_0,  n_parabola, type0, ModeStp)

    Case 6
        'set of n_Parabola centered, x-aligned and y_aligned Parabola
        n_parabola=200
        type0=3
        x_0=GLCD_WIDTH/2
        y_0=GLCD_HEIGHT/2
        ScanParabola(x_0, y_0, n_parabola, type0, ModeStp)

    Case 7
        'four regularly distributed sets of n_Parabola x-aligned and y_aligned Parabola
        n_parabola=10
        n_sets=4
        type0=3
        For counter=1 To n_sets
            If counter=1 Then
                x_0=GLCD_WIDTH/4
                y_0=GLCD_HEIGHT/4
            End If
            If counter=2 Then
                x_0=3*GLCD_WIDTH/4
                y_0=GLCD_HEIGHT/4
            End If
            If counter=3 Then
                x_0=GLCD_WIDTH/4
                y_0=3*GLCD_HEIGHT/4
            End If
            If counter=4 Then
                x_0=3*GLCD_WIDTH/4
                y_0=3*GLCD_HEIGHT/4
            End If
            ScanParabola(x_0, y_0, n_parabola, type0, ModeStp)
        Next

    Case 8
        'n_sets of randomly distributed n_Parabola x-aligned and y_aligned parabola
        n_parabola=10
        n_sets=8
        type0=3
        For counter=1 To n_sets
            x_0=Random%240
            y_0=Random
            ScanParabola(x_0, y_0, n_parabola, type0, ModeStp)
        Next

    End Select

    Wait 3 s

    GLCDCLS(GLCDBackground)

Loop


Sub ScanParabola(x0,y0, n_parabola, type0, ModeStp)

    'Type=1 parabola aligned along x
    'Type=2 parabola aligned along y
    'Type=3 parabola aligned along x plus parabola aligned along y

    Dim x0,y0,p_factor, ind, n_parabola As Word
    Dim color As Word
    Dim n_color As Byte
    Dim  type0, ModeStp As Byte

    p_factor=0
    For ind=1 To n_parabola
        p_factor=p_factor+1
        ReadTable colors,ind%n_color+1,color
        If Type0=1 Then
            parabola(x0, y0, p_factor, 1, ModeStp, Color)
        Else If Type0=2 Then
            Parabola(x0, y0, p_factor, 2, ModeStp, Color)
        End If
        If type0=3 Then
            parabola(x0, y0, p_factor, 1, ModeStp, Color)
            Parabola(x0, y0, p_factor, 2, ModeStp, Color)
        End If
    Next

End Sub
