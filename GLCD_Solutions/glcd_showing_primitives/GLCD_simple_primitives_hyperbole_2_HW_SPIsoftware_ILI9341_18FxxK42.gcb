'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a GLCD demonstration to show colors and graphics primitives
'''--------------------------------------------------------------------------------------------------------------------------------
'''
'''This program shows use of hyperbole GCLD
'''
'''The program has been setup for a specific GLCD, an 18f MCU and Software SPI - but, you can use the main 'Graphics Main program' on any color GLCD.  Just change the configuration.
'''
'''@author  Giuseppe D'Elia
'''@licence GPL
'''@version 1.0
'''@date    9.5.19
'''********************************************************************************

'Chip Settings.
#CHIP 18F45k42, 64
#OPTION Explicit
#INCLUDE <glcd.h>
'
'Generated by PIC PPS Tool for Great Cow Basic
'PPS Tool version: 0.0.5.25
'PinManager data: Not available (3)
'Generated for 18f25k42
'
'Template comment at the start of the config file
'
#DEFINE GLCD_TYPE GLCD_TYPE_ILI9341


'******************************************************************************************************
'Setup the GLCD

'Pin mappings for SPI - this GLCD driver supports Hardware SPI and Software SPI
' Data command/line
#DEFINE GLCD_DC     portA.0
' Chip select line
#DEFINE GLCD_CS     portC.1
' Reset line
#DEFINE GLCD_RESET  portC.0
'GLCD MOSI connect to MCU SDO
#DEFINE GLCD_DO     portC.5
' Clock Line
#DEFINE GLCD_SCK    portC.3
Dir   GLCD_DC     Out
Dir   GLCD_CS     Out
Dir   GLCD_RESET  Out
Dir   GLCD_DO     Out
Dir   GLCD_SCK    Out

'    #define ST7735_HardwareSPI     ' Remove to enable hardware SPI, ensure you setup PPS, if required


'******************************************************************************************************

'Main program

'setting random generetor seed
#DEFINE    randomize_seed Timer2


GLCDBackground = ILI9341_BLUE
GLCDForeground = ILI9341_WHITE
'Clear screen
GLCDCLS(GLCDBackground)


Dim x_0, y_0, a_axis, b_axis, n_hyperboles  As Word
Dim n_color, ratio_ab, n_sets, Case_Choice As Byte
Dim ModeStp As Byte
Dim Counter As Byte

Table Colors As Word
    ILI9341_BLACK
    ILI9341_RED
    ILI9341_GREEN
    ILI9341_BLUE
    ILI9341_WHITE
    ILI9341_PURPLE
    ILI9341_YELLOW
    ILI9341_CYAN
    ILI9341_D_GRAY
    ILI9341_L_GRAY
    ILI9341_SILVER
    ILI9341_MAROON
    ILI9341_OLIVE
    ILI9341_LIME
    ILI9341_AQUA
    ILI9341_TEAL
    ILI9341_NAVY
    ILI9341_FUCHSIA
End Table

'    Linecolour=ILI9341_white

n_color=18
'1 stop at first border encounter. 2 when all borders are encountered
ModeStp=2
Case_Choice=8

Do
    Select Case Case_Choice

    Case 1
        'single  x_alined Hyperbole
        x_0=GLCD_WIDTH/4
        y_0=GLCD_HEIGHT/4
        a_axis=8
        b_axis=4
        hyperbole(x_0, y_0, a_axis, b_axis, 1, ModeStp)

    Case 2
        'single y_alined Hyperbole
        x_0=GLCD_WIDTH/2
        y_0=GLCD_HEIGHT/2
        a_axis=8
        b_axis=4
        hyperbole(x_0, y_0, a_axis, b_axis, 2, ModeStp)

    Case 3
        'double x_alined and y-alined Hyperboles
        x_0=3*GLCD_WIDTH/4
        y_0=GLCD_HEIGHT/4
        a_axis=8
        b_axis=4
        hyperbole(x_0, y_0, a_axis, b_axis, 1, ModeStp)
        hyperbole(x_0, y_0, a_axis, b_axis, 2, ModeStp)

    Case 4
        'set of n_Hyperboles centered, x-alined, Hyperboles
        n_hyperboles=200
        ratio_ab=1
        x_0=GLCD_WIDTH/2
        y_0=GLCD_HEIGHT/2
        ScanHyperbole(x_0, y_0,ratio_ab,n_hyperboles, 1, ModeStp)

    Case 5
        'set of n_Hyperboles centered, y-alined, Hyperboles
        n_hyperboles=100
        ratio_ab=1
        x_0=GLCD_WIDTH/2
        y_0=GLCD_HEIGHT/2
        ScanHyperbole(x_0, y_0,ratio_ab,n_hyperboles, 2, ModeStp)

    Case 6
        'set of n_Hyperboles centered x-alined and y_alined Hyperboles
        n_hyperboles=200
        ratio_ab=2
        x_0=GLCD_WIDTH/2
        y_0=GLCD_HEIGHT/2
        ScanHyperbole(x_0, y_0,ratio_ab,n_hyperboles, 3, ModeStp)

    Case 7
        'four regularly distributed sets of n_Hyperboles x-alined and y_alined Hyperboles
        n_hyperboles=10
        ratio_ab=1
        n_sets=4
        For counter=1 To n_sets
            If counter=1 Then
                x_0=GLCD_WIDTH/4
                y_0=GLCD_HEIGHT/4
            End If
            If counter=2 Then
                x_0=3*GLCD_WIDTH/4
                y_0=GLCD_HEIGHT/4
            End If
            If counter=3 Then
                x_0=GLCD_WIDTH/4
                y_0=3*GLCD_HEIGHT/4
            End If
            If counter=4 Then
                x_0=3*GLCD_WIDTH/4
                y_0=3*GLCD_HEIGHT/4
            End If
            ScanHyperbole(x_0, y_0,ratio_ab,n_hyperboles, 3, ModeStp)
        Next

    Case 8
        'n_sets of randomly distributed n_Hyperboles x-alined and y_alined Hyperboles
        n_hyperboles=10
        ratio_ab=1
        n_sets=8
        For counter=1 To n_sets
            x_0=Random%240
            y_0=Random
            ScanHyperbole(x_0, y_0, ratio_ab,n_hyperboles, 3, ModeStp)
        Next

    End Select

    Wait 3 s

    GLCDCLS(GLCDBackground)

Loop

Sub ScanHyperbole(x0,y0, ratio_ab, n_hyperboles, type0, ModeStp)

    'Type=1 hyperbola alined along x
    'Type=2 hyperbole alined along y
    'Type=3 hyperbole alined along x plus iperbole alined along y

    Dim x0,y0,a_axis, b_axis, ind, n_hyperboles As Word
    Dim color As Word
    Dim n_color As Byte
    Dim ratio_ab, type0, ModeStp As Byte

    Line(0,160,240,160,ili9341_red)
    Line(120,0,120,320,ili9341_red)

    b_axis=0
    For ind=1 To n_hyperboles
        b_axis=b_axis+1
        a_axis=ratio_ab*b_axis
        ReadTable colors,ind%n_color+1,color
        If Type0=1 Then
            hyperbole(x0, y0, a_axis, b_axis, 1, ModeStp, Color)
        Else If Type0=2 Then
            hyperbole(x0, y0, a_axis, b_axis, 2,ModeStp, Color)
        End If
        If type0=3 Then
            hyperbole(x0, y0, a_axis, b_axis, 1, ModeStp, Color)
            hyperbole(x0, y0, a_axis, b_axis, 2, ModeStp, Color)
        End If
    Next

End Sub
