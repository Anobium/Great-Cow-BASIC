'ILI9341 Arduino UNO game demo
'buttons pulled low
#CHIP mega328p, 16
#INCLUDE <uno_mega328p.h >
#OPTION Explicit
#INCLUDE <glcd.h>
'
#DEFINE GLCD_TYPE GLCD_TYPE_ILI9341
'Pin mappings for SPI - this GLCD driver supports Hardware SPI and Software SPI
' Data command line
#DEFINE GLCD_DC       DIGITAL_8
' Chip select line
#DEFINE GLCD_CS       DIGITAL_10
' Reset line
#DEFINE GLCD_RESET    DIGITAL_9
' Data in | MISO    - Not used therefore not really required
#DEFINE GLCD_DI       DIGITAL_12
' Data out | MOSI
#DEFINE GLCD_DO       DIGITAL_11
' Clock Line
#DEFINE GLCD_SCK      DIGITAL_13
'
#DEFINE ILI9341_HardwareSPI
#DEFINE GLCD_EXTENDEDFONTSET1
'
'now rename colours to make it easier to set up sprite data
#DEFINE bk ILI9341_BLACK
#DEFINE re ILI9341_RED
#DEFINE gr ILI9341_GREEN
#DEFINE bl ILI9341_BLUE
#DEFINE wh ILI9341_WHITE
#DEFINE pu ILI9341_PURPLE
#DEFINE ye ILI9341_YELLOW
#DEFINE cy ILI9341_CYAN
#DEFINE dg ILI9341_D_GRAY
#DEFINE lg ILI9341_L_GRAY
#DEFINE si ILI9341_SILVER
#DEFINE ma ILI9341_MAROON
#DEFINE ol ILI9341_OLIVE
#DEFINE li ILI9341_LIME
#DEFINE aq ILI9341_AQUA
#DEFINE te ILI9341_TEAL
#DEFINE na ILI9341_NAVY
#DEFINE fu ILI9341_FUCHSIA
'cannon buttons
'cannon buttons
#DEFINE left_button portc.0
#DEFINE right_button portc.1
#DEFINE fire_button portc.2
Dir left_button In
Dir right_button In
Dir fire_button In
Dim hits As Byte
Dim hiscore As Word
hiscore=0
'
Start:
GLCDBackground = ILI9341_BLACK
GLCDRotate Portrait_Rev
GLCDCLS ILI9341_BLACK
GLCDPrint (0,0,"SCORE 0",ILI9341_WHITE)
GLCDPrint (96,0,"HISCORE",ILI9341_WHITE)
GLCDPrint (152,0,Str(hiscore),ILI9341_YELLOW)
'
Dim rnd As Byte
'height and width of sprite in pixels
Dim sprite_height,sprite_width As Byte
Dim sprite_x,sprite_y As Word
Dim ptr ,spritedata_ptr ,pixel ,sprite_size As Word
'demo vars
Dim temp,frame,frame_count As Byte
Dim dx(8),dy(8) As Word
Dim sprite_status(8) As Byte
Dim spy(8),oldspy(8) As Word
Dim spx(8),oldspx(8) As Word
'set up start sprite positions and directions
dx(1)=2:dx(2)=4:dx(3)=6:dx(4)=8
dx(5)=65536-2:dx(6)=65536-5:dx(7)=65536-4:dx(8)=65536-2
dy(1)=65536-4:dy(2)=65536-2:dy(3)=65536-4:dy(4)=4
dy(5)=2:dy(6)=4:dy(7)=65536-5:dy(8)=65536-6
'
Dim bomb_x(8),bomb_y(8),bomb_old_y(8) As Word
Dim bomb(8) , bomb_counter(8) As Byte
For temp =1 To 8
    'activate sprites
    sprite_status(temp)=1
    'sprite start x,y position
    spx(temp)=100:spy(temp)=100
    bomb(temp)=0
    rnd=Random
    bomb_counter(temp)=(Random/2)+100
Next
'
sprite_height=16:sprite_width=16
spritedata_ptr=1
frame=0:frame_count=0
'
Dim delay As Word
Dim rocket_on,rocket_x As Byte
rocket_on=0:delay=1
Dim rocket_y,rocket_old_y As Word
Dim cannon_x,old_cannon_x As Byte
cannon_x=100
hits=0
'
'demo moving sprite
Do
    For temp=1 To 8
        If sprite_status(temp)=1 Then
            'is sprite active
            If spx(temp)> (229-sprite_width) Then
                'check right edge
                dx(temp)= 65536-dx(temp)
            End If
            If spx(temp)<8 Then
                'check left edge
                dx(temp)= 65536-dx(temp)
            End If
            If spy(temp)> (305-sprite_height) Then
                'check bottom edge
                dy(temp)= 65536-dy(temp)
            End If
            If spy(temp)<32 Then
                'check top edge
                dy(temp)= 65536-dy(temp)
            End If
            '
            'get last position for erase
            oldspx(temp)=spx(temp):oldspy(temp)=spy(temp)
            'get new position for draw
            spx(temp)+=dx(temp):spy(temp)+=dy(temp)
            '
            If sprite_status(temp)=1 Then
                'is sprite active
                If frame=0 Then
                    'which sprite to draw
                    'erase sprite at last position
                    erase_sprite (oldspx(temp),oldspy(temp),16,16,256)
                    'draw sprite1 at new position
                    sprite (spx(temp),spy(temp),16,16,1,256)
                Else
                    'erase sprite at last position
                    erase_sprite (oldspx(temp),oldspy(temp),16,16,256)
                    'draw sprite2 at new position
                    sprite (spx(temp),spy(temp),16,16,257,256)
                End If
            End If
        End If
    Next temp
    '
    'when to change spritedata_ptr
    frame_count++
    If frame_count=5 Then
        frame=!frame
        frame_count=0
    End If

    'cannon left right buttons
    old_cannon_x=cannon_x
    If left_button On Then
        'left button pressed
        cannon_x-=4
        If cannon_x<4 Then
            'left edge
            cannon_x=4
        End If
    End If
    '
    If right_button On Then
        'right button pressed
        cannon_x+=4
        If cannon_x>225 Then
            'right edge
            cannon_x=225
        End If
    End If
    '
    If old_cannon_x<>cannon_x Then
        'has cannon moved
        erase_sprite (old_cannon_x,309,12,10,120)
    End If
    sprite (cannon_x,309,12,10,513,120)
    '
    'cannon shoot button
    If (fire_button=1) AND (rocket_on=0) Then
        'fire button pressed and rocket not active
        'init rocket
        rocket_on=1 : rocket_x=cannon_x+5 : rocket_y=310
    End If
    'move rocket if active
    If rocket_on =1 Then
        'is rocket active
        rocket_old_y=rocket_y
        rocket_y-=8
        'erase old rocket
        erase_sprite (rocket_x,rocket_old_y,2,8,16)
        If rocket_y>16 Then
            'draw new rocket
            sprite (rocket_x,rocket_y,2,8,633,16)
        Else
            'rocket not active now
            rocket_on=0
        End If
        'active rocket collision with any active sprite
        For temp=1 To 8
            If sprite_status(temp)=1 Then
                'is sprite active
                If (rocket_x>=spx(temp)) AND (rocket_x<=(spx(temp)+16)) AND (rocket_y>=spy(temp)) AND (rocket_y<=(spy(temp)+16)) Then
                    sprite_status(temp)=2:rocket_on=0
                    'erase rocket
                    erase_sprite (rocket_x,rocket_y,2,8,16)
                    'erase sprite
                    erase_sprite (spx(temp),spy(temp),16,16,256)
                    hits++
                    GLCDPrint (42,0,Str(hits),ILI9341_YELLOW)
                    delay+=5
                    If hits=8 Then
                        If hits>hiscore Then
                            hiscore=hits
                        End If
                        Goto start
                    End If
                End If
            End If
        Next
    End If
    'is any sprite exploding
    For temp=1 To 8
        If sprite_status(temp)>=2 Then
            If sprite_status(temp)<14 Then
                Circle (spx(temp)+7,spy(temp)+7,sprite_status(temp),ILI9341_WHITE)
            Else
                Circle (spx(temp)+7,spy(temp)+7,sprite_status(temp)-12,ILI9341_BLACK)
            End If
            sprite_status(temp)++
            If sprite_status(temp)=29 Then
                sprite_status(temp)=0
            End If
        End If
        'has any sprite hit cannon
        If spy(temp)>288 Then
            'bottom of sprite touches cannon
            If (cannon_x<=spx(temp)+15) AND (cannon_x+11>=spx(temp)) Then
                'sprite over cannon
                Goto dead
            End If
        End If
    Next
    'time for sprite to drop bomb?
    For temp=1 To 8
        If sprite_status(temp)=1 Then
            'is sprite active
            If bomb(temp)=0 Then
                'sprite bomb not active
                bomb_counter(temp)---
                If bomb_counter(temp)=0 Then
                    'init bomb
                    'bomb now active
                    bomb(temp)=1
                    bomb_x(temp)=spx(temp)+8
                    'bomb under sprite
                    bomb_y(temp)=spy(temp)+16
                End If
            End If
        End If
    Next
    'is sprite bomb active?
    For temp=1 To 8
        If bomb(temp)=1 Then
            'is bomb active
            bomb_old_y(temp)=bomb_y(temp)
            'move sprite's bomb down
            bomb_y(temp)+=2
            'erase sprite's old bomb
            erase_sprite (bomb_x(temp),bomb_old_y(temp),2,8,16)
            If bomb_y(temp)<305 Then
                'draw sprite's new bomb
                sprite (bomb_x(temp),bomb_y(temp),2,8,633,16)
            Else
                'bomb bottom of screen
                'sprite's bomb not active now
                bomb(temp)=0
                If (bomb_x(temp)>cannon_x) AND (bomb_x(temp)<cannon_x+12) Then
                    'bomb hit cannon
                    Goto dead
                End If
                'reset sprite's bomb counter
                bomb_counter(temp)=(Random/2)+100
            End If
        End If
    Next
'
'wait 1 s
    Wait delay ms
    'end demo
Loop
'-----------------
dead:
'erase cannon
erase_sprite (cannon_x,309,12,10,120)
For frame=2 To 30
    Circle (cannon_x+5,319,frame,ILI9341_WHITE)
Next
For frame=2 To 30
    Circle (cannon_x+5,319,frame,ILI9341_BLACK)
Next
Goto start
'
'fills window with sprite data
Sub sprite (sprite_x,sprite_y,sprite_width,sprite_height,spritedata_ptr,sprite_size)
    SetAddressWindow_ILI9341 ( sprite_x,sprite_y,sprite_x +sprite_width-1,sprite_y +sprite_height-1 )
    For ptr=spritedata_ptr To spritedata_ptr + sprite_size-1
        ReadTable spritedata,ptr,pixel
        SendWord_ILI9341 pixel
    Next ptr
End Sub
'
'fills window background colour
Sub erase_sprite (sprite_x,sprite_y,sprite_width,sprite_height,sprite_size)
    SetAddressWindow_ILI9341 ( sprite_x,sprite_y,sprite_x +sprite_width-1,sprite_y +sprite_height-1 )
    Repeat sprite_size
        SendWord_ILI9341 GLCDBackground
    End Repeat
End Sub
'
'sprite 1=1
Table spritedata
    wh,bl,bl,bl,bl,bk,bk,bk,bk,bk,bk,bl,bl,bl,bl,wh
    bk,bl,re,re,re,bl,bl,bk,bk,bl,bl,re,re,re,bl,bk
    bk,bk,bl,re,re,re,bl,bk,bk,bl,re,re,re,bl,bk,bk
    bk,bk,bk,bl,re,wh,bl,bk,bk,bl,wh,re,bl,bk,bk,bk
    bk,bk,bk,bk,bl,wh,bl,bk,bk,bl,wh,bl,bk,bk,bk,bk
    bk,bk,bk,bk,bk,bl,bl,bk,bk,bl,bl,bk,bk,bk,bk,bk
    bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk
    bk,bk,bk,bk,ye,ye,ye,bk,bk,ye,ye,ye,bk,bk,bk,bk
    bk,bk,bk,ye,bk,bk,bk,bk,bk,bk,bk,bk,ye,bk,bk,bk
    bk,ye,ye,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,ye,ye,bk
    bk,ye,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,ye,bk
    ye,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bl,ye
    ye,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,ye
    ye,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,ye
    bk,ye,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,ye,bk
    bk,bk,ye,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,ye,bk,bk
'
'sprite 2=256+1
    bl,bl,bl,bl,bl,bk,bk,bk,bk,bk,bk,bl,bl,bl,bl,bl
    bk,bl,re,re,re,bl,bl,bk,bk,bl,bl,re,re,re,bl,bk
    bk,bk,bl,wh,wh,re,bl,bk,bk,bl,re,wh,wh,bl,bk,bk
    bk,bk,bk,bl,re,wh,bl,bk,bk,bl,wh,re,bl,bk,bk,bk
    bk,bk,bk,bk,bl,wh,bl,bk,bk,bl,wh,bl,bk,bk,bk,bk
    bk,bk,bk,bk,bk,bl,bl,bk,bk,bl,bl,bk,bk,bk,bk,bk
    bk,bk,bk,bk,bk,bk,bk,ye,ye,bk,bk,bk,bk,bk,bk,bk
    bk,bk,bk,bk,bk,ye,ye,bk,bk,ye,ye,bk,bk,bk,bk,bk
    bk,bk,bk,bk,ye,ye,bk,bk,bk,bk,ye,ye,bk,bk,bk,bk
    bk,bk,bk,bk,ye,bk,bk,bk,bk,bk,bk,ye,bk,bk,bk,bk
    bk,bk,bk,ye,bk,bk,bk,bk,bk,bk,bk,bk,ye,bk,bk,bk
    bk,bk,ye,bk,bk,bk,bk,bk,bk,bk,bk,bk,bk,ye,bk,bk
    bk,bk,bk,ye,ye,bk,bk,bk,bk,bk,bk,ye,ye,bk,bk,bk
    bk,bk,bk,bk,ye,ye,bk,bk,bk,bk,ye,ye,bk,bk,bk,bk
    bk,bk,bk,bk,bk,ye,bk,bk,bk,bk,ye,bk,bk,bk,bk,bk
    bk,bk,bk,bk,bk,bk,ye,bk,bk,ye,bk,bk,bk,bk,bk,bk
'
'cannon=256+256+1=513
    bk,bk,bk,bk,bk,wh,wh,bk,bk,bk,bk,bk
    bk,bk,bk,bk,ye,pu,pu,ye,bk,bk,bk,bk
    bk,bk,bk,ye,pu,wh,wh,pu,ye,bk,bk,bk
    bk,bk,bk,ye,pu,pu,pu,pu,ye,bk,bk,bk
    bk,bk,ye,ye,pu,wh,wh,pu,ye,ye,bk,bk
    bk,bk,ye,pu,pu,pu,pu,pu,pu,ye,bk,bk
    bk,ye,bl,bl,bl,re,re,bl,bl,bl,ye,bk
    ye,ye,bl,bl,bl,re,re,bl,bl,bl,ye,ye
    bk,bk,ye,re,re,re,re,re,re,ye,bk,bk
    bk,bk,bk,ye,fu,fu,fu,fu,ye,bk,bk,bk
'
'missile=256+256+120+1=633
    wh,wh
    re,re
    ye,ye
    wh,wh
    wh,wh
    ye,ye
    re,re
    wh,wh
End Table
'
'Available colors
'ILI9341_BLACK
'ILI9341_RED
'ILI9341_GREEN
'ILI9341_BLUE
'ILI9341_WHITE
'ILI9341_PURPLE
'ILI9341_YELLOW
'ILI9341_CYAN
'ILI9341_D_GRAY
'ILI9341_L_GRAY
'ILI9341_SILVER
'ILI9341_MAROON
'ILI9341_OLIVE
'ILI9341_LIME
'ILI9341_AQUA
'ILI9341_TEAL
'ILI9341_NAVY
'ILI9341_FUCHSIA
