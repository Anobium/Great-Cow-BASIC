'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a very basic simple GLCD demonstration of the SSD1306 GLCD capabilities as a very simple scope.
'''This program updates the GLCD using XOR via a
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''@author  StanC and EvanV
'''@licence GPL
'''@version 1.0a
'''@date    22.2.17
'''********************************************************************************

#CHIP mega328p,16
#OPTION Explicit
#INCLUDE <uno_mega328p.h>
#INCLUDE <glcd.h>
#DEFINE HI2C_BAUD_RATE 400
#DEFINE HI2C_DATA
HI2CMode Master
#DEFINE GLCD_TYPE GLCD_TYPE_SSD1306
#DEFINE GLCD_I2C_Address 0x78
#DEFINE ADSpeed LowSpeed

'Redirect the standard PSET routine to the XOR routine
#DEFINE PSet_SSD1306 xorPSet_SSD1306

Dim GLCDDATATEMP As Word
Dim GLCDBITNO As Byte
Dim GLCDCHANGE As Byte
'
Dir portc.0 In
Dim volt As Byte
Dim xpos As Byte
Dim buffer1 (128)
Dim buffer2 (128)


'Main code to set the screen up

'init read 128 samples 1st time
For xpos=0 To 127
    volt = ReadAD (an0)
    buffer1 (xpos)=volt/4
    buffer2 (xpos)=volt/4
Next xpos

GLCDCLS

'Draw the grid
Line 0,31,128,32
Line 63,0,63,63
'
For xpos=0 To 127
    'plot data 1st time for xor
    Pset xpos,buffer1(xpos),1
Next xpos
'

'Main loop
Do
    For xpos=0 To 127
        'erase old data
        Pset xpos,buffer1(xpos),1
        'plot new data
        Pset xpos,buffer2(xpos),1
    Next xpos
    '
    For xpos=0 To 127
        'copy new data to old data
        buffer1 (xpos)=buffer2 (xpos)
        volt = ReadAD (an0)
        Repeat 2
            Set c Off
            Rotate volt Right
        End Repeat
        'save new data
        buffer2 (xpos)=volt
    Next xpos
    '
Loop
' end of main


'
' redirected glcd library function to XOR GLCD
'''Draws a pixel on the GLCD
'''@param GLCDX X coordinate of pixel
'''@param GLCDY Y coordinate of pixel
'''@param GLCDColour State of pixel ( GLCDBackground | GLCDForeground )
Sub xorPSet_SSD1306(In GLCDX, In GLCDY, In GLCDColour As Word)
    'Set pixel at X, Y on LCD to State
    'X is 0 to 127
    'Y is 0 to 63
    'Origin in top left
    #IF GLCD_TYPE = GLCD_TYPE_SSD1306
        'SSD1306_BufferLocationCalc = ( GLCDY / 8 )* GLCD_WIDTH
        'faster than /8
        SSD1306_BufferLocationCalc = GLCDY
        Repeat 3
            Set C Off
            Rotate SSD1306_BufferLocationCalc Right
        End Repeat
        SSD1306_BufferLocationCalc = SSD1306_BufferLocationCalc * GLCD_WIDTH

        SSD1306_BufferLocationCalc = GLCDX + SSD1306_BufferLocationCalc+1
        GLCDDataTemp = SSD1306_BufferAlias(SSD1306_BufferLocationCalc)

        'Change data to set/clear pixel
        GLCDBitNo = GLCDY AND 7
        If GLCDColour.0 = 0 Then
            GLCDChange = 254
            Set C On
        Else
            GLCDChange = 1
            Set C Off
        End If
        Repeat GLCDBitNo
            Rotate GLCDChange Left
        End Repeat

        If GLCDColour.0 = 0 Then
            GLCDDataTemp = GLCDDataTemp AND GLCDChange
        Else
            GLCDDataTemp = GLCDDataTemp XOR GLCDChange
        End If

        SSD1306_BufferAlias(SSD1306_BufferLocationCalc) = GLCDDataTemp
        Cursor_Position_SSD1306 ( GLCDX, GLCDY )
        Write_Data_SSD1306 ( GLCDDataTemp )

    #ENDIF

End Sub
