'''This program is a simple GLCD demonstration of read a pixel state on the GLCD - see the function ReadPixel_SSD1306()
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the SSD1306 GLCD capabilities.
'''This program examines the GLCD memory, see https://cdn.sparkfun.com/assets/learn_tutorials/4/7/7/Font1_MicroView_5x8_FontMapping.png
'''
'''The SSD1306 controller a small graphical OLED, suitable for a lot of various projects.
'''The display is 38*35 mm, with an active display surface of 0.96inches , and a 128*64 pixel resolution.
'''The display is easy to interface, using an I2C type of communication.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''
'''The terminal is connect to the serial port of the microcontroller at 115200bps.
'''
'''@author  EvanV
'''@licence GPL
'''@version 1.4
'''@date    11.4.17
'''********************************************************************************

' ----- Configuration
#CHIP mega328p,16
#OPTION Explicit
#INCLUDE <glcd.h>

' ----- Define Hardware settings
' Define I2C settings
#DEFINE HI2C_BAUD_RATE 400
#DEFINE HI2C_DATA
HI2CMode Master

' ----- Define GLCD Hardware settings
#DEFINE GLCD_TYPE GLCD_TYPE_SSD1306
#DEFINE GLCD_I2C_Address 0x78

'USART settings
'Initializes USART port with specific baud
#DEFINE USART_BAUD_RATE 115200
' wait for tx register to be empty
#DEFINE USART_TX_BLOCKING
#DEFINE USART_DELAY 0 ms

' ----- Define variables

Dim PixelValue, xPos, yPos, ReadxPos, ReadyPos As Byte



' ----- Main program
HSerPrintCRLF 2
HSerPrint "A program to examine the state of a GLCD pixel"
HSerPrintCRLF 2


'xPos of our pixel to set
xPos = 0
'yPos of our pixel to set
yPos = 0
'xPos of our pixel to examine
ReadxPos = 0
'yPos of our pixel to examine
ReadyPos = 0


HSerPrint "State of X"
HSerPrint ReadxPos
HSerPrint ", Y"
HSerPrint ReadyPos
HSerPrint " equals "


'Set PixelValue to something that cannot be returned by the function
PixelValue = 0x55
'Let things settle
Wait 100 ms
'Set a pixel
Pset ( xPos, yPos, 1 )

'This is the read Function ReadPixel_SSD1306()
'Read the pixel state
PixelValue = ReadPixel_SSD1306( ReadxPos, ReadyPos )

'Print the result
HSerPrint PixelValue
HSerPrintCRLF


'Let things settle
Wait 100 ms
End


'''Examine a pixel on the GLCD
'''@param GLCDX X coordinate of pixel
'''@param GLCDY Y coordinate of pixel
Dim GLCDBitNo, GLCDChange, GLCDDataTemp As Byte
Function ReadPixel_SSD1306(In GLCDX, In GLCDY )
    Dim GLCDBitNo, GLCDChange, GLCDDataTemp As Byte
    'Examine pixel at X, Y on LCD to State
    'X is 0 to 127
    'Y is 0 to 63
    'Origin in top left

    #IF GLCD_TYPE = GLCD_TYPE_SSD1306


        'Select correct buffer element
        SSD1306_BufferLocationCalc = GLCDY
        'Divide by 8
        Repeat 3
            Set C Off
            Rotate SSD1306_BufferLocationCalc Right
        End Repeat
        SSD1306_BufferLocationCalc = SSD1306_BufferLocationCalc * GLCD_WIDTH
        'add 1 as we dont use element (0)
        SSD1306_BufferLocationCalc = GLCDX + SSD1306_BufferLocationCalc+1
        GLCDDataTemp = SSD1306_BufferAlias(SSD1306_BufferLocationCalc)

        'Change data to examine pixel by rotating our bit to bit zero
        GLCDBitNo = GLCDY AND 7
        Repeat GLCDBitNo
            Rotate GLCDDataTemp Right
        End Repeat


        ReadPixel_SSD1306 = GLCDDataTemp.0

    #ENDIF
End Function
