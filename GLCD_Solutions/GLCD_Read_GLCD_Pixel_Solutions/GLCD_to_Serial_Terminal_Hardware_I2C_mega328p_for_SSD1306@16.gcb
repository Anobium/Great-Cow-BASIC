'''This program is a simple GLCD demonstration of read a pixel state on the GLCD - see the function ReadPixel_SSD1306()
'''Then, the state of the GLCD is shown on an ANSI serial terminal
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the SSD1306 GLCD capabilities.
'''This program examines the GLCD memory, see https://cdn.sparkfun.com/assets/learn_tutorials/4/7/7/Font1_MicroView_5x8_FontMapping.png
'''
'''The SSD1306 controller a small graphical OLED, suitable for a lot of various projects.
'''The display is 38*35 mm, with an active display surface of 0.96inches , and a 128*64 pixel resolution.
'''The display is easy to interface, using an I2C type of communication.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''
'''The terminal is connect to the serial port of the microcontroller at 115200bps.
'''The terminal software needs to support ANSI as this uses the LCD GCB Serial redirection option.
'''
'''@author  EvanV
'''@licence GPL
'''@version 1.4
'''@date    11.4.17


' ----- Configuration
#CHIP mega328p,16
#OPTION Explicit
#INCLUDE <glcd.h>

' ----- Define Hardware settings
' Define I2C settings
#DEFINE HI2C_BAUD_RATE 400
#DEFINE HI2C_DATA
HI2CMode Master

' ----- Define GLCD Hardware settings
#DEFINE GLCD_TYPE GLCD_TYPE_SSD1306
#DEFINE GLCD_I2C_Address 0x78

#INCLUDE <lcd2serialredirect.h>

' ----- Define Hardware settings
' Required to LCD to Serial redirection
#DEFINE LCD_IO 0
#DEFINE LCD_SPEED  FAST

'USART settings
'Initializes USART port
#DEFINE USART_BAUD_RATE 115200
' wait for tx register to be empty
#DEFINE USART_TX_BLOCKING
#DEFINE USART_DELAY 0 ms

' ----- Define variables

Dim BYTENUMBER, xCount, yCount As Byte

Dim longNumber As Long
' max value = 4294967290
longNumber = 123456
Dim wordNumber As Word
Dim outstring As String
wordNumber = 0
byteNumber = 0

#DEFINE LED_GLCD_HEIGHT GLCD_HEIGHT-1

' ----- Main program
Dim BYTENUMBER, CCOUNT As Byte
GLCDfntDefaultSize = 1
CCount = 0
Dim longNumber As Long
' max value = 4294967296
longNumber = 4294967290
Dim wordNumber As Word
Dim outString As String
wordNumber = 0
byteNumber = 0

Box 0,0,GLCD_WIDTH-1, LED_GLCD_HEIGHT-1
GLCDfntDefaultSize = 2
' Print some texT
GLCDPrint ( 0,   0, "Great Cow")
' Print some text
GLCDPrint ( 0,   18, "BASIC 2019")
GLCDfntDefaultSize = 1

' Print some text
GLCDPrint ( 0,   52, "@Anobium")
' Show GCLD on Serial Terminal
ShowGLCDonTerminal
Wait 4 s
GLCDCLS

' Prepare the static components of the screen
' Print some text
GLCDPrint ( 0,   0, "PrintStr")
' Print some more text
GLCDPrint ( 64,  0, "LAT@")
' Print chip speed
GLCDPrint ( 88,  0, ChipMHz)
' Print some text
GLCDPrint ( 100, 0, "Mhz")
' Draw some text
GLCDDrawString( 0,8,"DrawStr")
' Draw a box
Box 0,0,GLCD_WIDTH-1, LED_GLCD_HEIGHT-1
' Draw a box
Box GLCD_WIDTH-5, LED_GLCD_HEIGHT-5,GLCD_WIDTH-1, LED_GLCD_HEIGHT-1
' Draw a circle
Circle( 44,41,15)
' Draw a line
Line LED_GLCD_HEIGHT,31,0,31

Do Forever
    For CCount = 32 To 127
        ' Print a HEX string
        GLCDPrint ( LED_GLCD_HEIGHT ,  36,  Hex(longNumber_E ) )
        ' Print a HEX string
        GLCDPrint ( 76 ,  36,  Hex(longNumber_U ) )
        ' Print a HEX string
        GLCDPrint ( 88 ,  36,  Hex(longNumber_H ) )
        ' Print a HEX string
        GLCDPrint ( 100 ,  36, Hex(longNumber   ) )
        ' Print a HEX string
        GLCDPrint ( 112 ,  36, "h" )


        ' Print a padded string
        GLCDPrint ( LED_GLCD_HEIGHT ,  44, Pad(Str(wordNumber), 5 ) )
        ' Print a padded string
        GLCDPrint ( LED_GLCD_HEIGHT ,  52, Pad(Str(byteNumber), 3 ) )

        ' Draw a Box
        Box (46,9,56,19)
        ' Draw a character
        GLCDDrawChar(48, 9, CCount )
        ' Prepare a string
        outString = Str( CCount )
        GLCDfntDefaultSize = 2
        ' Draw a string
        GLCDDrawString(LED_GLCD_HEIGHT, 8, Pad(outString,3) )
        GLCDfntDefaultSize = 1
        ' Draw a filled box
        FilledBox 3,43,11,51, wordNumber

        ' Draw a filled box
        FilledCircle( 44,41,9, longNumber XOR 1)
        ' Draw a line
        Line 0,LED_GLCD_HEIGHT-2,LED_GLCD_HEIGHT,31

        ' Do some simple maths
        longNumber = longNumber + 7 : wordNumber = wordNumber + 3 : byteNumber++
        ShowGLCDonTerminal
    Next
Loop



End

' Show GCLD on Serial Terminal - paints the complete buffer
Sub ShowGLCDonTerminal
    'Paints complete screen - can be optimised to show the changes only
    For yCount = 0 To 63
        For xCount = 0 To 127

            'Examine the Pixel here!!
            If ReadPixel_SSD1306( xCount, yCount, 1 ) = On Then
                'add 2 as a serial screen offset only.
                Locate yCount+2, xCount+2
                Print CHR(235)
            Else
                Print " "
            End If
        Next

        HSerPrintCRLF
    Next
End Sub

'''Draws a pixel on the GLCD
'''@param GLCDX X coordinate of pixel
'''@param GLCDY Y coordinate of pixel
'''@param GLCDColour State of pixel ( GLCDBackground | GLCDForeground )
Dim GLCDBitNo, GLCDChange, GLCDDataTemp,GLCDColour As Byte
Function ReadPixel_SSD1306(In GLCDX, In GLCDY, Optional In GLCDColour As Word = 1 )
    Dim GLCDBitNo, GLCDChange, GLCDDataTemp As Byte
    'Examine pixel at X, Y on LCD to State
    'X is 0 to 127
    'Y is 0 to 63
    'Origin in top left

    #IF GLCD_TYPE = GLCD_TYPE_SSD1306


        SSD1306_BufferLocationCalc = GLCDY
        Repeat 3
            Set C Off
            Rotate SSD1306_BufferLocationCalc Right
        End Repeat
        SSD1306_BufferLocationCalc = SSD1306_BufferLocationCalc * GLCD_WIDTH

        SSD1306_BufferLocationCalc = GLCDX + SSD1306_BufferLocationCalc+1
        GLCDDataTemp = SSD1306_BufferAlias(SSD1306_BufferLocationCalc)
        'Change data to examine pixel
        GLCDBitNo = GLCDY AND 7
        Repeat GLCDBitNo
            Rotate GLCDDataTemp Right
        End Repeat

        ReadPixel_SSD1306 = GLCDDataTemp.0

    #ENDIF
End Function
