'''A program  for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program examines the GLCD devices and shows the registers the GLCD itself
'''
'''This is a standalone program with no supporting libraries.
'''
'''This is software SPI for the ST7735 only with GLCD_TYPE_ST7735 OR GLCD_TYPE_ST7735R OR GLCD_TYPE_ST7735R_160_80
'''
'''
'''Refer to the datasheet of the specific device is the controller type is not recognised.
'''
'''@author     Evan Venn
'''@licence    GPL
'''@version    1.00
'''@date       03/11/19
'''********************************************************************************

'Chip Settings.
#CHIP 18F4550, 48
#CONFIG FOSC=HSPLL_HS, PLLDIV=5, CPUDIV=OSC1_PLL2,  MCLRE=On

#INCLUDE <glcd.h>

#DEFINE GLCD_TYPE GLCD_TYPE_ST7735R_160_80

' can be ST7735_BLACKTAB, ST7735_GREENTAB or ST7735_REDTAB.  Each tab is a different ST7735 configuration.
#DEFINE ST7735TABCOLOR ST7735_GREENTAB
' you may have to try all three - if you do not know what chipset you have.
#OPTION Explicit

'Pin mappings for SPI ST7735
'Data/Command select   Purple Wire
#DEFINE GLCD_DC         portE.2
'CS Chip select        White
#DEFINE GLCD_CS         portB.2
'                      Gray
#DEFINE GLCD_RESET      portC.6
'SPI SDO (MOSI)        Blue
#DEFINE GLCD_DO         portC.7
'SPI SDI (MISO)  assume bi-directional DO/DI
#DEFINE GLCD_DI         portC.7
'SPI SCK               Green
#DEFINE GLCD_SCK        portB.1


'*************************** GLCD Specific setup ************************************************

'    GLCDRotate ( Landscape_rev )     ' optionally you can rotate the screen.

Dim reg_result As Long
reg_result=0


GLCDReadReg32 ( ST7735_RDDID , reg_result )

GLCDfntDefaultSize = 1

GLCDPrintString Hex(reg_result_e)
GLCDPrintString Hex(reg_result_u)
GLCDPrintString Hex(reg_result_h)
GLCDPrintStringLn Hex(reg_result)
GLCDLocateString 0,2


If ( reg_result_u = 0x89 AND reg_result_h = 0xf0 ) Then
    GLCDPrintString "ST7735R"
End If
If ( reg_result_u = 0x80 AND reg_result_h = 0x66 ) Then
    GLCDPrintString "ILI916C"
End If

GLCDPrint 4,50, ChipNameStr
GLCDPrint 4,66, "@ "+ Str(ChipMHz)+"Mhz"


Line 0,0,2,2
Box 0,0,GLCDDeviceWidth, GLCDDeviceHeight, TFT_YELLOW
FilledBox GLCDDeviceWidth-40, GLCDDeviceHeight-40,GLCDDeviceWidth, GLCDDeviceHeight, TFT_YELLOW
FilledBox GLCDDeviceWidth-30, GLCDDeviceHeight-30,GLCDDeviceWidth, GLCDDeviceHeight, TFT_GREEN
FilledBox GLCDDeviceWidth-20, GLCDDeviceHeight-20,GLCDDeviceWidth, GLCDDeviceHeight, TFT_BLUE
FilledBox GLCDDeviceWidth-10, GLCDDeviceHeight-10,GLCDDeviceWidth, GLCDDeviceHeight, TFT_RED

Wait 100 ms

End

Sub  GLCDReadReg32( In SPISendByte As Byte, Out SPITempOut As Long )

    Dim SPITempOut As Long

    SPITempOut = 0x00

    '
    Set ST7735_CS Off

    '
    Set ST7735_DC Off


    Repeat 8

        If SPISendByte.7 = On  Then
            '
            Set ST7735_DO On
        Else
            '
            Set ST7735_DO Off
        End If

        '
        Set GLCD_SCK Off

        Rotate SPISendByte Left
        '
        Set GLCD_SCK On


    End Repeat

    Set GLCD_DC On
    Dir GLCD_DI In
    Dir GLCD_DO In

    Wait 5 us
    'dummy clock cycle
    Set GLCD_SCK On
    Wait 5 us



    Set GLCD_SCK Off
    Wait 5 us

    'get the data
    Dim getbits As Byte
    For getbits = 0 To 31

        Set GLCD_SCK On

        If GLCD_DI = On Then
            Set SPITempOut.0 On
        Else
            Set SPITempOut.0 Off
        End If
        Rotate SPITempOut Left
        Set GLCD_SCK Off
    Next


    Set ST7735_CS On
    Dir GLCD_DO Out

End Sub
