'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This example code implements a serial buffer ring.
'''This means the incoming serial port data is placed into a buffer that can be read at anytime.
'''This example uses an interrupt and a buffer.
'''
'''All characters recieved from the serial are returned to the serial terminal.
'''Connections are shown in the program.
'''
'''@author  EvanV
'''@licence GPL
'''@version 1.0a
'''@date    26.07.2018
'
#CHIP pic18f47k42, 64


#STARTUP InitPPS, 85

Sub InitPPS

    'Module: UART1
    'RC7 > RX1
    U1RXPPS = 0x0017
    'TX1 > RC6
    RC6PPS = 0x0013

End Sub

#DEFINE USART_BAUD_RATE 38400
#DEFINE USART_TX_BLOCKING
#DEFINE USART_BLOCKING
#DEFINE USART_DELAY Off

Dir portc.7 In
Dir portc.6 Out

'Interrupt Handlers
On Interrupt UART1ReceiveInterrupt Call readUSART

' Constants etc required for Buffer Ring
#DEFINE BUFFER_SIZE 8
#DEFINE bkbhit (next_in <> next_out)
'Variables
'we will use element 0 in the array as part of out buffer
Dim buffer( BUFFER_SIZE - 1 )
Dim next_in As Byte: next_in = 0
Dim next_out As Byte: next_out = 0


Do
    'have got data?
    Do While bkbhit
        'get data and show
        HSerPrint CHR(bgetc)
    Loop
Loop

End

Sub readUSART
    buffer(next_in) = HSerReceive
    temppnt = next_in
    next_in = ( next_in + 1 ) % BUFFER_SIZE
    If ( next_in = next_out ) Then
        ' buffer is full!!
        next_in = temppnt
    End If
End Sub

Function bgetc
    Wait While !(bkbhit)
    bgetc = buffer(next_out)
    next_out=(next_out+1) % BUFFER_SIZE
End Function
