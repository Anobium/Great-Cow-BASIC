'''A demonstration program for GCB
'''---------------------------------------------------------------------------------
'''This program uses the SoftSerial library for serial sending and receiving.
''' SoftSerial uses ASM routines for minimal overhead.
''' This samples uses the INT1 external interrupt to detect incoming data.
''' Ser1Receive normally stops programm execution until a startbit-impulse is detected;
''' "#define SERx_RXNOWAIT On" abrogates that and shortens the startbit delay.
''' This is necessary to compensate the additional time used for interrupt-handling.
''':
'''@author  Frank Steinberg
'''@licence GPL
'''@version 1.1
'''@date    29.01.2017
'''********************************************************************************

' ----- Configuration
#CHIP 18F13k50, 16
#OPTION Explicit

' ----- Include library
#INCLUDE <softserial.h>

' ----- Config Serial UART :
' baudrate must be defined
#DEFINE SER1_BAUD 115200
' databits optional (default = 8)
#DEFINE SER1_DATABITS 8
' stopbits optional (default = 1)
#DEFINE SER1_STOPBITS 1
' inverted polarity optional (default = Off)
#DEFINE SER1_INVERT Off
' Config I/O ports for transmitting:
' I/O port (without .bit) must be defined
#DEFINE SER1_TXPORT PORTC
' portbit  must be defined
#DEFINE SER1_TXPIN 0
' Config I/O ports for receiving:
' I/O port (without .bit) must be defined
#DEFINE SER1_RXPORT PORTC
' portbit  must be defined
#DEFINE SER1_RXPIN 1
' RXNOWAIT disables waiting for stopbit and reduces first delaytime
' to compensate overhead for invoking an interrupt:
' don't wait for stopbit optional (default = Off)
#DEFINE SER1_RXNOWAIT On


' ----- Variables
Dim RecByte As Byte
Dim RxIndicator As Byte

' ----- Config Interrupt
On Interrupt ExtInt1 Call ISR_StartReceive
'interrupt on falling edge
Set INTCON2.INTEDG1 Off


' ----- Main body of program commences here.
'delay to prevent garbage if sending too quick after init
Wait 1 ms
'new line in Terminal
Ser1Send 10
'
Ser1Send 13
Ser1Print "Please send a byte!"

RxIndicator = 0

Do Forever

    'we can do someting else here!

    If RxIndicator Then
        'if an interrupt occured
        'new line in Terminal
        Ser1Send 10
        Ser1Send 13
        Ser1Print "You sent: "
        Ser1Send RecByte
        'reset "flag"
        RxIndicator -= 1
    End If

Loop


'receive a byte after startbit is detected
Sub ISR_StartReceive

    'ignore interrupts while receiving
    IntOff
    'get new data
    RecByte = Ser1Receive
    'set a flag, that there is new data
    RxIndicator += 1
    IntOn

End Sub
