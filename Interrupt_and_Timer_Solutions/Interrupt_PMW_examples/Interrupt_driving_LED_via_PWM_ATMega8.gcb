'   FILE:           Interrupt driving LED via PWM - ATMmega8.gcb
'   DATE:           20.02.2015
'   VERSION:        1.0a
'   AUTHOR:         Theo Loermans based on the works of Evan R. Venn
'
'    Description.
'    A demonstration program for GCGB and GCB.
'    This adjusts the power to the LED over 2.5 seconds, then to zero power again over 2.5 seconds.
'    The LED is connected to Portd.0 via appropiate resistors.


'    This file is part of the Great Cow Basic compiler.
'
'    This demonstration code is distributed in the hope that it will be useful,
'    but WITHOUT ANY WARRANTY; without even the implied warranty of
'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'    GNU General Public License for more details.
'
' ----- Configuration

#CHIP mega8, 8
#OPTION Explicit


' ----- Define Hardware settings
Dir PortD.0 Out

' ----- Constants
#DEFINE led Portd.0

'----- Variables
Dim LEDSPEED, PWMCOUNTER, PWMCOUNTER As Byte

' ----- Main body of program commences here.

'Call the initialisation routine
InitLEDControl

Do
    'Increase LED to full over 2.5 seconds
    For LEDSpeed = 0 To 100
        Wait 25 ms
    Next
    'Hold LEDPower
    Wait 1 s
    'Decrease LED to zero over 2.5 seconds
    For LEDSpeed = 100 To 0 Step - 1
        Wait 25 ms
    Next
    'Hold LEDPower
    Wait 1 s
Loop
End

'Setup routine
Sub InitLEDControl
    Set LED Off
    'Clear variables
    LEDSpeed = 0
    PWMCounter = 0

    'Add a handler for the interrupt
    On Interrupt Timer0Overflow Call PWMHandler

    'Set up the timer
    InitTimer0 Osc, PS_1
    StartTimer 0

End Sub


'PWM sub
'This will be called when Timer 0 overflows
Sub PWMHandler
    If LEDSpeed > PWMCounter Then
        Set LED On
    Else
        Set LED Off
    End If
    PWMCounter += 1
    If PWMCounter = 100 Then PWMCounter = 0
End Sub

End

' ----- Support methods.  Subroutines and Functions
'none








