'''A program  for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''    Description. Interrupt driving LED using Timer2 match.
'''    This calls the Timer2Match1 every 10us.
'''     You can use the #define SimulatePWM to either control an LED with PWM or Toggle the LED
'''    The SimulatePWM adjusts the power to the LED over 2.5 seconds, then to zero power again over 2.5 seconds with a hold of 1 second between each ramp up/down.
'''    The LED is connected to port via appropiate resistors.
''':
'''
'''
'''

'''@author  EvanV
'''@licence GPL
'''@version 1.0a
'''@date    31.03.2017

' ----- Configuration
#CHIP mega328p,16
#OPTION Explicit

'  #define SimulatePWM 'comment this to just toggle the LED

'hardware
#DEFINE LED PORTB.5
Dir LED Out

'Call the initialisation routine
InitLEDControl

'----- Variables
Dim LEDSPEED, PWMCOUNTER, PWMCOUNTER As Byte


'Main routine
Do

    #IFDEF SimulatePWM
        'Increase LED to full over 2.5 seconds
        For LEDSpeed = 0 To 100
            Wait 25 ms
        Next
        'Hold LEDPower
        Wait 1 s
        'Decrease LED to zero over 2.5 seconds
        For LEDSpeed = 100 To 0 Step - 1
            Wait 25 ms
        Next
        'Hold LEDPower
        Wait 1 s
    #ENDIF

Loop
End



'Setup routine
Sub InitLEDControl

    Set LED Off

    'Clear variables
    LEDSpeed = 0
    PWMCounter = 0

    Dim OCR2  As Byte Alias OCR2A
    Dim TCCR2 As  Byte Alias TCCR2B
    'Timer in CTC mode - required
    WGM21 = 1

    ' Add the handler for the interrupt
    On Interrupt Timer2Match1 Call InterruptHandler
    ' Initialise the timer - this is required
    ' Set prescaler and then start the timer
    InitTimer2 Osc, PS_2_0
    ' Start the timer - this is required
    StartTimer 2
    ' Set the correct regsisters.  These registers give us the corrent timed Interrupt.
    ' Use the TimerCalculator from MikroElectronika to obtain the correct values for this four registers.
    ' When using the TimerCalculator from MikroElectronika paste the four registers ignoring the *_Bit registers

    'Timer2 Prescaler = 0; Preload = 159; Actual Interrupt Time = 10 us
    OCR2 = 159
    TCCR2 = 0x28
    TCCR2 = TCCR2 OR 0x01

End Sub


'This will be called when the Timer matches
Sub InterruptHandler

    #IFDEF SimulatePWM

        If LEDSpeed > PWMCounter Then
            Set LED On
        Else
            Set LED Off
        End If
        PWMCounter += 1
        If PWMCounter = 100 Then PWMCounter = 0
    #ENDIF

    #IFNDEF SimulatePWM
        LED = !LED
    #ENDIF

End Sub
