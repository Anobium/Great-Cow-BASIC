'''
'''  This demonstration produces a variable speed rotating LED display that is proportional to the ADC value.
'''  The ADC value and LED rotate speed are inversely proportional to each other.
'''
'''  This demonstration has two parts the Master and the Slave.  Use 16F18855_SPI_OutDemo.gcb as the Master and 16F18855_SPI_InDemo.gcb for the Slave
'''
'''  Rotate the POT counterclockwise to see the LEDs shift faster, press the switch to reverse the direction of the LEDs.
'''
'''  An attached Serial Terminal will show the state of the LEDs and the direction of the rotation.
'''
'''  The four LSbs of the ADC are mirrored onto the LEDs. Rotate the potentiometer
'''  to change the display.
'''
'''
'''  PIC: 16F18855
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: Xpress Evaluation Board
'''  Date: 19.10.2016
'''

' ----- Configuration
#CHIP 16f18855
#OPTION Explicit


'Set the PPS of the PWM and the RS232 ports.
'Set the PPS for this solution.
#STARTUP InitPPS, 85

Sub InitPPS
    UNLOCKPPS
    'RC0->EUSART:TX;
    RC0PPS = 0x0010
    'RC1->EUSART:RX;
    RXPPS  = 0x0011

    'Module: MSSP1
    'SCL1 > RB3
    RB3PPS = 0x0014
    'RB3 > SCL1 (bi-directional)
    SSP1CLKPPS = 0x000B
    'SDA1 > RB4
    RB4PPS = 0x0015
    'RB4 > SDA1 (bi-directional)
    SSP1DATPPS = 0x000C
    'SDO1 > RB5
    RB5PPS = 0x0015

    LOCKPPS
End Sub

#DEFINE USART_BAUD_RATE 19200
#DEFINE USART_TX_BLOCKING

#DEFINE SWITCH_DOWN         0
#DEFINE SWITCH_UP           1

#DEFINE LEDD1               porta.0
#DEFINE SWITCH      PORTA.5

'Potentitor is connected to RA4...set as input
Dir porta.4 In
'setup switch (SW1)
Dir SWITCH In

'Set SPI mode to slave
SPIMode Slave
'setup direction of SPI pins
'clock
Dir PORTB.3 In
'data in
Dir PORTB.4 In
'data out
Dir PORTB.5 Out

Dir LEDD1 Out


HSerPrintCRLF 2
HSerPrint "Great Cow Basic @2016": HSerPrintCRLF
HSerPrint "SPI Board": HSerPrintCRLF 2
Wait 1 s

Dim InValue As Byte

Do

    'Show BYTE read of THE remote ADC
    SPITransfer 0, InValue
    HSerPrint InValue
    HSerPrintCRLF
    LEDD1 = NOT LEDD1
Loop





