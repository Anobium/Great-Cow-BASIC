'''
'''  This demonstration show the transmission and receipt of SPI data.
'''  The ADC port value from the Master is sent to the Slave, both show the value (send and received) on the serial terminal.
'''
'''  This demonstration has two parts the Master and the Slave.  Use 16F18855_SPI_OutDemo.gcb as the Master and 16F18855_SPI_InDemo.gcb for the Slave
'''
'''
''' What do you need?  This used two Xpress Boards and four connections between the boards.
'''     Connections.  0v on board board
'''                   Master MOSI to Slave MISO
'''                   Master MISO to Slave MOSI
'''                   Master Clock to Slave Clock
'''
''' The Master reads the ADV value and send to Slave via SPI
''' The Slave reads the SPI incoming value and shows on the terminal
'''
'''
''' This program can be improved to use a control select line (CS) to tell the Slave data is coming, and,
''' this program can be improvied to use an Interrupt to detect incoming SPI data.  I will let you experiment.
'''
'''
'''  PIC: 16F18855
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: Xpress Evaluation Board
'''  Date: 19.10.2016
'''

' ----- Configuration
#CHIP 16f18855
#OPTION Explicit


'Set the PPS of the PWM and the RS232 ports.
'Set the PPS for this solution.
#STARTUP InitPPS, 85

Sub InitPPS
    UNLOCKPPS
    'RC0->EUSART:TX;
    RC0PPS = 0x0010
    'RC1->EUSART:RX;
    RXPPS  = 0x0011

    'Module: MSSP1
    'SCL1 > RB3
    RB3PPS = 0x0014
    'RB3 > SCL1 (bi-directional)
    SSP1CLKPPS = 0x000B
    'SDA1 > RB4
    RB4PPS = 0x0015
    'RB4 > SDA1 (bi-directional)
    SSP1DATPPS = 0x000C
    'SDO1 > RB5
    RB5PPS = 0x0015


    LOCKPPS
End Sub

#DEFINE USART_BAUD_RATE 19200
#DEFINE USART_TX_BLOCKING

#DEFINE SWITCH_DOWN         0
#DEFINE SWITCH_UP           1

#DEFINE LEDD1       porta.0
#DEFINE SWITCH      PORTA.5

'Potentitor is connected to RA4...set as input
Dir porta.4 In
'setup switch (SW1)
Dir SWITCH In

'Set SPI Mode to master, with fast clock
SPIMode MasterFast
'setup direction of SPI pins
'clock
Dir PORTB.3 Out
'data in
Dir PORTB.4 In
'data out
Dir PORTB.5 Out


Dir LEDD1 Out


HSerPrintCRLF 2
HSerPrint "Great Cow Basic @2016": HSerPrintCRLF
HSerPrint "SPI Board": HSerPrintCRLF 2
Wait 1 s

Dim myValue, InValue As Byte

Do

    'Show BYTE read of ADC just passing the Analog address
    myValue = ReadAD ( AN4  )
    HSerPrint "AN4: "
    HSerPrint myValue
    HSerPrintCRLF

    SPITransfer myValue, InValue
    Wait 100 ms
    LEDD1 = NOT LEDD1
Loop




