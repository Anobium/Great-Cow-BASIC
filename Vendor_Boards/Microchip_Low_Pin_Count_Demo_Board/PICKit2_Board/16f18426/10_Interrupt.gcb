'''
''' Great Cow BASIC Header block Header block
'''
'''@author  Chris Roper
'''@licence GPL
'''@version 1.00
'''@date    03/05/2018
'''********************************************************************

  #Chip 16f18426
 #config MCLRE_OFF

  #option explicit

  #define DOWN                0
  #define UP                  1

  #define SWITCH              PORTA.3

  #define LED_RIGHT           1
  #define LED_LEFT            0

  dir portc out
  portc = 0
  portc.3 = 1
  'start with LEDs rotating from right to left
  _direction = LED_RIGHT

  'setup switch (SW1)
  dir switch in

  Dim _DIRECTION as Byte

' Initialise the timer.
' Firstly tell the compiler to use a 16bit timer for this demonstration
  #define TMR0_16BIT
  TMR0IE = 1
  InitTimer0 Osc, PRE0_256 + TMR0_HFINTOSC ,  POST0_2

  ' setup Timer Interrupt
  On Interrupt Timer0Overflow Call RotateLEDsNow

  ' Start the clock
  Settimer ( 0 , 0x0bdc  )
  StartTimer 0

  'setup Push Button Interrupt
  IOCAN3 = 1
  On Interrupt PORTChange  Call DirChange

  do
    ' Empty Loop - All the action happens in the Interrupts
  loop

End

sub DirChange

 if IOCAF3 = 1 then

     IOCIE  = 0  ' Disable Port Change Interruts to Prevent renter of the same event
     IOCAF3 = 0  ' Ackowlage the Interrupt by Clearing this Flag
     _direction = !_direction ; Reverse direction
     IOCIE = 1  ' Reenable Port change interrupts
   end if

end sub

sub RotateLEDsNow

  TMR0IF = 0
  if  _direction.0 = LED_RIGHT  then
      'shift to the right by 1
      Set C off
      Rotate portc right

      ' when the last LED is lit, restart the pattern
      if C = 1 then
         portc.3 = 1
      end if

  else
      'shift to the left by 1
      Set C off
      Rotate portc left

      'when the last LED is lit, restart the pattern
      if  portC.4 = 1 then
            portC.0 = 1
            portC.4 = 0
      end if
  end if

  Settimer ( 0 , 0x0bdc  )

end sub
