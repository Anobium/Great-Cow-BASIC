'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program demonstrates the basic primatives of a Graphical LCD (GLCD)
'''
'''
'''This program uses the Full Mode GLCD - this means the microcontroller need to have a 1024 byte buffer for the GLCD.
'''There are two other demonstration programs that show how to use a lot less memory so you can use GLCD on memory contrained microcontrollers.
'''
'''This program when compiles uses about ~1139 bytes (total), including a GLCD buffer of 1024 bytes, of RAM. Compare this to the other GLCD modes of operation.
'''
''':
'''@author  EvanV
'''@licence GPL
'''@version 1.01a
'''@date    03.09.2017
'''********************************************************************************
'''  PIC: 18f25k22
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: SmartPIC 18 Board
'''  Date: 29.8.17
'''
' ----- Configuration
    'Chip Settings.
    #chip 18f25k22, 16
    #config mclre=on
    #option Explicit

    '' -------------------PORTA----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---------------------------------
    ''-----------------------------------------
    ''

    '' -------------------PORTB----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    -------| O | A |-------| O | I |-
    ''-----------------------------------------
    ''

    '' ------------------PORTC-----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---| TX|---|SDA|CLK| X |---------
    ''-----------------------------------------
    ''


    #define LEDD1 PORTB.1
    #define LEDD2 PORTB.5
    #define Potentiometer   PORTC.5
    #define LDR             PORTB.4
    #define SwitchIn        PORTB.0
    #define LCDControl      PORTC.2

    Dir     LEDD1         Out
    Dir     LEDD2         Out
    Dir     Potentiometer In   'this is the AN17 port
    Dir     LDR           In   'this is the AN11 port
    Dir     SwitchIn      In
    Dir     LCDControl    Out

    'Always set the LCD on (high) to Shut OFF the LCD-Backlight. This is required when powered from a PicKit.
    LCDControl = 1

    '*****************************************************************************************************
    'Main program commences here.. everything before this is setup for the board.

    ' Define I2C settings
    #define HI2C_BAUD_RATE 400
    #define HI2C_DATA PORTC.4
    #define HI2C_CLOCK PORTC.3
    'Initialise I2C Slave
    'I2C pins need to be input for SSP module - this is not an option
    Dir HI2C_DATA in
    Dir HI2C_CLOCK in
    'MASTER
    HI2CMode Master

    #include <glcd.h>
    #define GLCD_TYPE GLCD_TYPE_SSD1306
    #define GLCD_I2C_Address 0x78

    'These constants allow you to change the GLCD memory usage.
    #define GLCD_PROTECTOVERRUN
'*******************************************************************************************

   GLCDfntDefaultSize = 2
   GLCDFontWidth = 6
   GLCDPrint(45, 0,"OLED")
   GLCDPrint(30, 18,"SSD1306")
   GLCDPrint(36, 34,"128x64")

   GLCDfntDefaultSize = 1
   GLCDFontWidth = 5
   GLCDPrint(14, 54,"http://goo.gl/gjrxkp")

   Box (0, 0, 127 , 63 )


   Do Forever
   Loop
