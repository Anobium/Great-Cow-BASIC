'''
'''  Show I2C devices attached to the I2C port on a serial terminal.
'''

'''
'''Great Cow  BASIC Header block
'''
'''@author  Evan R. Venn
'''@licence GPL
'''@version 1.00
'''@date    27/10/2018
'''****
' ----- Configuration
    'Chip Settings.
    #chip 18F25Q10, 32

    #option Explicit

    'Generated by PIC PPS Tool for Great Cow Basic
    'PPS Tool version: 0.0.5.22
    'PinManager data: Not available (3)
    'Generated for 18F25Q10
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 18F25Q10

    Sub InitPPS

            'Module: EUSART1
            RC6PPS = 0x0009    'TX1 > RC6
            'Module: MSSP1
            RC4PPS = 0x000E    'SDA1 > RC4
            SSPDATPPS = 0x0014    'RC4 > SDA1 (bi-directional)
            RC3PPS = 0x000D    'SCL1 > RC3
            SSPCLKPPS = 0x0013    'RC3 > SCL1 (bi-directional)

    End Sub
    'Template comment at the end of the config file


    'USART settings - setup the serial port
    #define USART_BAUD_RATE 19200
    #define USART_TX_BLOCKING

    ' Define I2C settings
    #define HI2C_BAUD_RATE 400
    #define HI2C_DATA PORTC.4
    #define HI2C_CLOCK PORTC.3
    'Initialise I2C Slave
    'I2C pins need to be input for SSP module - this is not an option
    Dir HI2C_DATA in
    Dir HI2C_CLOCK in
    'MASTER
    HI2CMode Master


    '' -------------------PORTA----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    -------------------| I | A |-----
    ''-----------------------------------------
    ''

    '' -------------------PORTB----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---------------| O | O | O | O |-
    ''-----------------------------------------
    ''

    '' ------------------PORTC-----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---|TX1|---|I2C|I2C|-------------
    ''-----------------------------------------
    ''

    '' ------------------PORTE-----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    XXXXXXXXXXXXXXX| I | XXXXXXXXXXXX
    ''-----------------------------------------
    ''

    'Define constants to make things easier. We can reuse these at any time.
    #define LEDPORT PORTB
    #define LEDD1   LEDPORT.0
    #define LEDD2   LEDPORT.1
    #define LEDD3   LEDPORT.2
    #define LEDD4   LEDPORT.3


    Dir     LEDD1         Out
    Dir     LEDD2         Out
    Dir     LEDD3         Out
    Dir     LEDD4         Out

    #define SWITCHPORT    PORTA
    #define SwitchIn      SWITCHPORT.2
    Dir     SwitchIn      In

    #define RSTButton     PORTE.3

    '*****************************************************************************************************
    'Main program commences here.. everything before this is setup for the board.


    ' Now assumes Serial Terminal is operational
    dim DeviceID as byte
    Dim DISPLAYNEWLINE as Byte

     do
        HSerPrintCRLF
        HSerPrint "Hardware I2C "
        HSerPrintCRLF 2

          ' Now assumes Serial Terminal is operational
          HSerPrintCRLF
          HSerPrint "   "
          'Create a horizontal row of numbers
          for DeviceID = 0 to 15
            HSerPrint hex(deviceID)
            HSerPrint " "
          next

          'Create a vertical column of numbers
          for DeviceID = 0 to 255
            DisplayNewLine = DeviceID % 16
            if DisplayNewLine = 0 Then
              HSerPrintCRLF
              HserPrint hex(DeviceID)
              if DisplayNewLine > 0 then
                HSerPrint " "
              end if
            end if
            HSerPrint " "

            'Do an initial Start
            HI2CStart
            if HI2CWaitMSSPTimeout <> True then

              'Send to address to device
              HI2CSend ( deviceID )

              'Did device fail to respond?
              if HI2CAckPollState = false then
                HI2CSend ( 0 )
                HSerPrint   hex(deviceID)
              Else
                HSerPrint "--"
              end if

              'Do a stop.
              HI2CStop
            Else
              HSerPrint "! "
            end if

          next

          HSerPrintCRLF 2
          HSerPrint   "End of Search"
          HSerPrintCRLF 2
          wait 1 s
          wait while SwitchIn = On
      loop

    ; ----- Support methods.  Subroutines and Functions
