'''
'''******************************************************************
''' DS18B20 demonstration for the board. We have added the DS18B20  section to specift the DS18B20 port.
''' All the DS18B20 commands are standard Great Cow BASIC LCD commands.
'''
''' Set the section "DS18B20 setup section" for the specification of the setup Configuration.
'''
''' This demonstration show the tempature on the LCD as an Integer value and a Decimal Value.
'''
'''************************************************************************
'Chip Settings.
#CHIP 16F19156, 32
#OPTION Explicit

'Generated by PIC PPS Tool for Great Cow Basic
'PPS Tool version: 0.0.5.11
'PinManager data: v1.55
'
'Template comment at the start of the config file
'
#STARTUP InitPPS, 85

Sub InitPPS

    'Module: MSSP1
    'SCL1 > RC3
    RC3PPS = 0x0013
    'RC3 > SCL1 (bi-directional)
    SSP1CLKPPS = 0x0013
    'SDA1 > RC4
    RC4PPS = 0x0014
    'RC4 > SDA1 (bi-directional)
    SSP1DATPPS = 0x0014
    'Module: EUSART1
    'TX1 > RC6
    RC6PPS = 0x000D
    'RC6 > TX1 (bi-directional)
    TX1PPS = 0x0016

End Sub
'Template comment at the end of the config file


'' -------------------PORTA----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---|RS |RW | E |D7 |D6 |D5 |D4
''-----------------------------------------
''

'' -------------------PORTB----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    -------| O | A |-------| O | I |-
''-----------------------------------------
''

'' ------------------PORTC-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---| TX| A |-I---I-| X |---------
''-----------------------------------------
''


#DEFINE LEDD1 PORTB.1
#DEFINE LEDD2 PORTB.5
#DEFINE SwitchIn        PORTB.0

Dir     LEDD1         Out
Dir     LEDD2         Out
Dir     SwitchIn      In

' Define I2C settings
#DEFINE HI2C_BAUD_RATE 100
#DEFINE HI2C_DATA PORTC.4
#DEFINE HI2C_CLOCK PORTC.3

HI2CMode Master

'Initialise I2C - For the MSSP module the ports need to be set to Input
Dir HI2C_DATA In
Dir HI2C_CLOCK In

'''Set up LCD
#DEFINE LCD_IO 10
#DEFINE LCD_I2C_Address_1 0x4E

'You may need to use SLOW or MEDIUM if your LCD is a slower device.
#DEFINE LCD_SPEED SLOW
'You may need to invert these states. Dependent of LCD I2C adapter.
#DEFINE LCD_Backlight_On_State  1
#DEFINE LCD_Backlight_Off_State 0

'DS18B20 setup section
#INCLUDE <ds18b20.h>

' ----- Constants
' DS18B20 port settings
#DEFINE DQ PortA.7


'*****************************************************************************************************
'Main program commences here.. everything before this is setup for the board.

' ----- Variables
' a variabler to handle the temperature calculations
Dim TempC_100 As Word
Dim CCOUNT, SIGNBIT, WHOLE, FRACT, DIG As Byte


' ----- Main body of program commences here.

ccount = 0
CLS
Print "GCBASIC 2017"
Locate 1,0
Print "DS18B20 Demo"
Wait 2 s
CLS

Do Forever
    ' The function readtemp returns the integer value of the sensor
    DSdata = ReadTemp()

    ' Display the integer value of the sensor on the LCD
    Locate 0,0
    Print Hex(ccount)
    Print ":"
    Print DSdata
    Print CHR(223)+"C"



    ' Display the integer and decimal value of the sensor on the LCD

    ' The function readtemp12 returns the raw value of the sensor.
    ' The sensor is read as a 12 bit value therefore each unit equates to 0.0625 of a degree
    DSdata = ReadTemp12()
    SignBit = DSdata / 256 / 128
    If SignBit = 0 Then Goto Positive
    ' its negative!
    ' take twos comp
    DSdata = ( DSdata # 0xffff ) + 1

Positive:

    ' Convert value * 0.0625. Mulitple value by 6 then add result to multiplication of the value with 25 then divide result by 100.
    TempC_100 =  DSdata * 6
    DSdata = ( DSdata * 25 ) / 100
    TempC_100 = TempC_100 + DSdata

    Whole = TempC_100 / 100
    Fract = TempC_100 % 100
    If SignBit = 0 Then Goto DisplayTemp
    Print "-"

DisplayTemp:
    Locate 1,0
    Print Hex(ccount)
    Print ":"
    Print Str(Whole)
    Print "."
    ' To ensure the decimal part is two digits
    Dig = Fract / 10
    Print Dig
    Dig = Fract % 10
    Print Dig
    Print CHR(223)
    Print "C"
    Wait 2 s
    ccount++

Loop
