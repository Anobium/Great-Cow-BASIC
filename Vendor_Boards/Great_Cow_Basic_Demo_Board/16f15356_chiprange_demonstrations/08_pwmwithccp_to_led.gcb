''' Great Cow BASIC demonstration
'''
''' This demonstration simply turns the LED on and off using the PWM/CCP module within the microcontroller.  See http://gcbasic.sourceforge.net/help/_hpwm_10_bit.html
''' There are two PWM/CCP channels called CCP1, CCP2, CCP3,  and CCP4. We use CCP1 for this demonstration.  These PWM/CCP channels are 8-bit channels, so, we need to use a value between 0 and 255 to represent 0 to 100 duty.
''' When using Great Cow BASIC you use the PPSTool to set the output port for the CCP1.  We have chosen the LED0 port.
''' When using PWM/CCP you are required to use Timer2, this is mandated, is you wanted to use Timer2 in your user program then you would use the PWM module which enables you to select a wider range of timers.
'''
'''
''' Attach an LED to the MPLAB® Xpress PIC16F15356 board that can be turned ON via a suitable resistor.
''' and OFF. The LED can be activated by driving the connected I/O line.
'''

'''
'''@author  Evan R. Venn
'''@licence GPL
'''@version 1.00
'''@date    27/10/2018
'''********************************************************************

    #chip 16F15356          'Specify the Device you are compiling for - this board is the 16F15356
                            'Great Cow BASIC simplifies the configuration by setting the frequency and the configuration for you.
    #option Explicit        'This option ensures that all variables are dimensioned in the user program.  See http://gcbasic.sourceforge.net/help/__option_explicit.html

    #define LEDOn  = 1      'Set a constant.  The LED can be de-activated by driving the connected I/O line to the supply voltage via a suitable resistor.
    #define LEDOff = 0      'Set a constant.  The LED can be activated by driving the connected I/O line to GND.

    #define LED0 portc.1    'Set a constant to refer to the LED. Attach via a suitable resistor.
    dir LED0 out            'Set LED as an output
    LED0 = LEDOff           'Set the initial state

    'Generated by PIC PPS Tool for Great Cow Basic
    'PPS Tool version: 0.0.5.25
    'PinManager data: v1.75
    'Generated for 16f15356
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 16f15356

    Sub InitPPS

            'Module: CCP1
            RC1PPS = 0x0009    'CCP1 > RC1
            CCP1PPS = 0x0011    'RC1 > CCP1 (bi-directional)

    End Sub
    'Template comment at the end of the config file


''' The real program.  :-)

    dim PMWDuty as byte                 'Define a variable.

    do forever

      for PMWDuty = 0 to 255            'Raise the LED instensity
        HPWM 1, 40, PMWDuty             'Send the parameters to the PWM/CCP method. Channel 1, frequency of 40mhz, the variable duty. This method uses timer 2 you cannot change.
        wait 5 ms                       'Wait
      next
      for PMWDuty = 255 to 0 step -1    'Lower the LED instensity
        HPWM 1, 40, PMWDuty
        wait 5 ms
      next

    loop
