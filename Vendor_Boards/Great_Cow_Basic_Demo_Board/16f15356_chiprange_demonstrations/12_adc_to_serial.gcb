''' Great Cow BASIC demonstration
'''
''' This demonstration simply turns the LED on with equates to the PWM duty value of the specified ADC port.
''' This PWM is updated with the HPWMUpdate command, and, then send duty value to the PWM Channel, the LED and the Serial port.
'''
'''
'''@author  Evan R. Venn
'''@licence GPL
'''@version 1.00
'''@date    15/12/2018
'''********************************************************************





    #chip 16F15356          'Specify the Device you are compiling for - this board is the 16F15356
                            'Great Cow BASIC simplifies the configuration by setting the frequency and the configuration for you.

     FEXTOSC = OFF    ' External Oscillator mode selection bits->Oscillator not enabled - we need this to enable ANA7 - which is PortA.7

    #define LED0 portc.1    'Set a constant to refer to the LED.
    dir LED0 out            'Set LED as an output

    #define SW0 portc.0     'Set a constant to refer to the switch
    dir SW0 in              'Set the switch as an input
    WPUC0 = 1               'Enable weak pullup


    'Generated by PIC PPS Tool for Great Cow Basic
    'PPS Tool version: 0.0.5.25
    'PinManager data: v1.75
    'Generated for 16f15356
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 16f15356

    Sub InitPPS

            'Module: PWM6
            RC1PPS = 0x000E    'PWM6OUT > RC1
            'Module: EUSART1
            RC6PPS = 0x000F    'TX1 > RC6

    End Sub
    'Template comment at the end of the config file


    'USART settings
    #define USART_BAUD_RATE 9600
    #define USART_TX_BLOCKING


    HSerPrintCRLF
    HSerPrint "Welcome...."
    HSerPrintCRLF


    dim lastDutyValue, currentDutyValue as word
    lastDutyValue = 1024
    dim PMWDuty as word                   'Define a variable.
    PMWDuty = 1023

    HPWM 6, 40, PMWDuty, 2            'Use the parameters to the PWM method. Channel 4, frequency of 40mhz, the variable duty and to use timer 2.

    do forever

      PMWDuty = ReadAD10( ANA7 )
      'Set the value
      HPWMUpdate 6, PMWDuty
      currentDutyValue = scale ( PMWDuty, 0, 1023, 0, 100 )
      'Test the value - display the value if different
      if currentDutyValue <> lastDutyValue then
          lastDutyValue = currentDutyValue

          HSerPrint  currentDutyValue
          HSerPrint "% Duty"
          HSerPrintCRLF

      end if
      wait 5 ms

    loop
