
'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the ILI9341 GLCD capabilities.
'''It is a nice graphical LCD, suitable for a lot of various projects.
'''This program draws lines, boxes, Ellipses and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
''':
'''This has been tested using the hardware SPI option.
''':
''':
'''@author  EvanV
'''@licence GPL
'''@version 1.0
'''@date    09.07.2020
'''********************************************************************************

'Chip Settings
#CHIP 18F16Q41
#CONFIG MCLRE=On


'' -------------------PORTA----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---------------------------------
''-----------------------------------------
''

'' -------------------PORTB----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---------------------------------
''-----------------------------------------
''

'' ------------------PORTC-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ------------------------LED------
''-----------------------------------------
''

'Define constants to make things easier. We can reuse these at any time.
#DEFINE LEDPORT LATC

Dir     RC1         Out
Dir     RC2         Out
Dir     RC3         Out
Dir     RC4         Out

#DEFINE POTENTIOMETER PORTA.4
Dir     POTENTIOMETER In
#DEFINE SWITCHIN      PORTC.0
Dir     SWITCHIN      In

'*****************************************************************************************************
'Main program commences here.. everything before this is setup for the board.


#include <millis.h>       ' Include the Library

        #define LED RC1       ' Define the LED Pin - Digital Pin 2
        #define LEDRate 1000     ' Flash rate in mS

        Dim CurMs, LstMs as word  ' declare working variables
        ' Main                    ' This loop runs over and over forever.
        LstMs = 0
        CurMs = 0

        ' Main                    ' This loop runs over and over forever.
        Do
          CurMs = millis()

          if CurMs - LstMs >= LEDRate then  ' required Time has Elapsed

            LED = !LED                      ' So Toggle state of LED
            LstMs = CurMs                   ' And Record Toggle Time
          end if
          IntOn
        Loop

END
