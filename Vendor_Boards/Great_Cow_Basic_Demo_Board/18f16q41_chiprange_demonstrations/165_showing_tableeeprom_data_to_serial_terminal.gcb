'''
'''  This demonstration shows the use of EEProm values created from a Table..
'''
''' This will show the value of the EEPROM on the serial Terminal.
'''
'''************************************************************************
'''@author  EvanV
'''@licence GPL
'''@version 1.01
'''@date    31.12.2020
' ----- Configuration

'Chip Settings.
#CHIP 18F16Q41
#OPTION Explicit

    'Generated by PIC PPS Tool for Great Cow Basic
    'PPS Tool version: 0.0.6.1
    'PinManager data: v1.79.0
    'Generated for 18F16Q41
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 18F16Q41

    Sub InitPPS

            'Module: UART pin directions
            Dir PORTC.6 Out    ' Make TX1 pin an output
            'Module: UART1
            RC6PPS = 0x0010    'TX1 > RC6

    End Sub
    'Template comment at the end of the config file

'' -------------------PORTA----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:   ---------------------SW------ADC--
''-----------------------------------------
''

'' -------------------PORTB----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---------------------------------
''-----------------------------------------
''

'' ------------------PORTC-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---------------LED--LED-LED LED--
''-----------------------------------------

'Define constants to make things easier. We can reuse these at any time.
#DEFINE LEDPORT LATC

Dir     RC0         Out
Dir     RC1         Out
Dir     RC2         Out
Dir     RC3         Out

#DEFINE POTENTIOMETER PORTA.0
Dir     POTENTIOMETER In
#DEFINE SWITCHIN      PORTA.2
Dir     SWITCHIN      In


'*****************************************************************************************************
'Main program commences here.. everything before this is setup for the board.
' Now assumes Serial Terminal is operational


Dim DisplayNewLine, Outdata, Indata  As Byte
Dim EEPromAddress as Word
Do Forever

    HSerPrintCRLF
    HSerPrint "Table Test and Show EEProm Results"
    HSerPrintCRLF 2

    'Read table item
    'Must use ReadTable and a variable for the index, or the table will not be downloaded to EEPROM

    Dim TableLoc, SomeVar as Byte

    TableLoc = 2
    ReadTable TestDataSource, TableLoc, SomeVar

    'Write to table , this is not required
    EPWrite 2, 0x22

    'Table of values to write to EEPROM
    'EEPROM location 0 will store length of table
    'Subsequent locations will each store a value

    Table TestDataSource Store Data
        0x01
        0x02
        0x03
        0x04
        0x05
        0x06
    End Table


    HSerPrint "     "
    For EEPromAddress = 0 To 15
        HSerPrint Hex(EEPromAddress)
        HSerPrint " "
    Next

    For EEPromAddress = 0 To ChipEEProm -1
        DisplayNewLine = EEPromAddress % 16
        If DisplayNewLine = 0 Then
            HSerPrintCRLF
            HSerPrint Hex(EEPromAddress)
            HSerPrint ": "
        End If
        HSerPrint " "

        EPRead  ( EEPromAddress, Indata )
        HSerPrint  Hex(Indata)

    Next

    HSerPrintCRLF 2
    HSerPrint   "End of Table Write and EEProm Read"

    HSerPrintCRLF 2
    Set RC2 On
    Set RC1 On

    Wait While SwitchIn = Off
Loop
End
