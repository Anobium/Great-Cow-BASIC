'''A demonstration program for GCB
'''---------------------------------------------------------------------------------
''' This program shows logic test in the AVRrc chips - change the constant CURRENTTEST to change the program
'''
'''
'''@author  Evan Venn
'''@licence GPL
'''@version 1.0
'''@date    11/06/2020
'''********************************************************************************

; ----- Configuration
#chip tiny9,  1
#option Explicit

; ----- Include library
#include <softserial.h>

; ----- Constants

  #Define Switch PORTB.2

'  #DEFINE RedLED PORTB.2
  #DEFINE GreenLED PORTB.1
  #DEFINE YellowLED PORTB.0

  Dir Switch in
'  Dir RedLED Out
  Dir GreenLEd   out
  Dir YellowLED  out

  #Define CURRENTTEST 1


; ----- Variables
  'See inline

; ----- Main body of program commences here.

  #IFDEF  CURRENTTEST 1
    'Test 1 - should toggle when switch is pushed
    do
        if Switch then
            GreenLED = On
            YellowLED = Off
        else
            GreenLED = Off
            YellowLED = On
        end if
    loop
  #ENDIF


  #IFDEF  CURRENTTEST 2
    'Test2 - should toggle when switch is pushed
    dim SwitchState as Byte
    do
        SwitchState = Switch
        if SwitchState then
            GreenLED = On
            YellowLED = Off
        else
            GreenLED = Off
            YellowLED = On
        end if
    loop
  #ENDIF


  #IFDEF  CURRENTTEST 3
    'Test3 - Should toggle every 500ms
    dim SwitchState as Byte
    SwitchState = 0
    do
        if SwitchState then
            GreenLED = On
            YellowLED = Off
            SwitchState = 0
        else
            GreenLED = Off
            YellowLED = On
            SwitchState = 1
        end if
        WAIT 500 MS
    loop
  #ENDIF


End






; ----- Config Serial UART :
#define SER1_BAUD 9600    ; baudrate must be defined
#define SER1_DATABITS 8    ; databits optional (default = 8)
#define SER1_STOPBITS 1    ; stopbits optional (default = 1)
#define SER1_INVERT Off    ; inverted polarity optional (default = Off)
; Config I/O ports for transmitting:
#define SER1_TXPORT PORTB  ; I/O port (without .bit) must be defined
#define SER1_TXPIN 1       ; portbit  must be defined
; Config I/O ports for receiving:
#define SER1_RXPORT PORTB  ; I/O port (without .bit) must be defined
#define SER1_RXPIN 2       ; portbit  must be defined
#define SER1_RXNOWAIT Off  ; don't wait for stopbit optional (default = Off)


' ----- Subs



'Script to resolve oscillator


    #IFNDEF ChipMHz 1
      'As Great Cow BASIC does not set the AVR frequency per chipfamily - set here.
      'Unlock the  frequency register where 0xD8 is the correct signature for the AVRrc chips
      CCP = 0xD8
      #IFDEF ChipMHz 8
        CLKPSR = 0
      #ENDIF
      #IFDEF ChipMHz 4
        CLKPSR = 1
      #ENDIF
      #IFDEF ChipMHz 2
        CLKPSR = 2
      #ENDIF
      #IFDEF ChipMHz 0.5
        CLKPSR = 4
      #ENDIF
      #IFDEF ChipMHz 0.25
        CLKPSR = 5
      #ENDIF
      #IFDEF ChipMHz 0.125
        CLKPSR = 6
      #ENDIF
      #IFDEF ChipMHz 0.0625
        CLKPSR = 7
      #ENDIF
      #IFDEF ChipMHz 0.03125
        CLKPSR = 8
      #ENDIF
    #ENDIF
