'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program shows the real time clock on a serial terminal emulating a LCD.
'''The DS1337 is attached to the I2C ports with appropiate resistors to the supply voltage.  Typically a 5k or 2.2k resistor 'pulling up' to the supply voltage can be used.
''':
''':    There are two pushbuttons: Mode and Set equates to Key1 and Key2. Connected to portb.0 and portb.1 resepectively.
''':
''':    During normal operation, the Mode button will toggle
''':    between 12- and 24-hours modes.
''':
''':    This has two modes US date and UK date style.
''':    Change ''':clocktype''': to 0 for US and 1 for UK
''':
''':    To set a new date and time, press the Set button
''':    which will take you consecutively to Month, Day, Year,
''':    Day of the Week, Hour, Minute and Second. Within each of
''':    these, press Mode to cycle through the possible values.
''':    You may hold the Mode button to increment automatically,
''':    or press momentarily for a single increment. Time is
''':    always set in 24-hour clock format.
''':
''':    Based on the Thomas Henry works of 5/26/2014
''':    Evan R Venn/Anobium  ---  4/1/2015
''':    Evan R Venn/Anobium  ---  10/1/2015 - Minor improvements to cater for Oscicallor stopping
''':    Evan R Venn/Anobium  ---  11/1/2015 - added Hardware i2c support
''':
'''@author          EvanV
'''@licence GPL
'''@version 1.1a
'''@date    23.02.15
'''********************************************************************************

' ----- Configuration
#CHIP 16F1789, 32
#OPTION Explicit

#INCLUDE <ds1337.h>
#INCLUDE <lcd2serialredirect.h>


' ----- Define Hardware settings
Dir setBut In
Dir modeBut In

' Define Hardware I2C settings for SSP module
'        #define HI2C_BAUD_RATE 400
'        #define HI2C_DATA PORTC.4
'        #define HI2C_CLOCK PORTC.3
'        ;I2C pins need to be input for SSP module
'        Dir HI2C_DATA in
'        Dir HI2C_CLOCK in
'       ;MASTER I2C Device for SSP module
'        HI2CMode Master


'       Define I2C settings - CHANGE PORTS
#DEFINE I2C_MODE Master
#DEFINE I2C_DATA PORTC.4
#DEFINE I2C_CLOCK PORTC.3
#DEFINE I2C_DISABLE_INTERRUPTS On
'   #define I2C_BIT_DELAY   20 us      width of data bit on SDA
'   #define I2C_CLOCK_DELAY 10 us      width of clock pulse on SCL

' THIS CONFIG OF THE SERIAL PORT WORKS WITH max232 THEN TO PC
' USART settings
#DEFINE USART_BAUD_RATE 9600
Dir PORTc.6 Out
Dir PORTc.7 In
#DEFINE USART_DELAY 10 ms
#DEFINE USART_BLOCKING
Wait 500 ms
HSerSend 7

'0 is US or 1 is UK style
#DEFINE clocktype   1
'settling time for switches
#DEFINE debounce    50 ms
'delay time for pushbutton
#DEFINE delay       150 ms
'flag for pressed pushbutton
#DEFINE pressed     1
'Set pushbutton
#DEFINE setBut      portb.0
'Mode pushbutton
#DEFINE modeBut     portb.1

'----- Variables

Dim CENTURY_FLAG, POWERLOSS, DAYSMAX, DAYSMAX, Alarm1track, Alarm2track As Byte
Dim changed As BIT
Dim hour, min, sec, am_pm As Byte
Dim oldsec As Byte
Dim date, month, year, DOW, century As Byte
Dim mode, Oldmode, dayMax As Byte
' init value
oldsec = 255
' will be updated by Century calculation... if a century roll ever occurs!! Required in this example code.
century = 20
'----- Tables

'# of days in months. Required in this example code.
Table monthDays
    31
    'leap years only
    29
    31
    30
    31
    30
    31
    31
    30
    31
    30
    31
End Table



'----- Program
CLS

#IFDEF HI2C_DATA
    Locate 0, 12
    Print "i2cHW"
    ' is DS1337 present?
    HI2CReStart
    HI2CSend(DS_AddrWrite)
    HI2CStop

    If HI2CAckpollState = TRUE  Then
        ' is DS1337 present?
        ' user message
        Print "No DS1337"
        Locate 1,0
        ' user message
        Print "Stopped"
    End
End If
#ENDIF

#IFDEF I2C_DATA
    Locate 0, 12
    Print "i2cSW"
    ' is DS1337 present?
    I2CStart
    I2CSend(DS_AddrWrite)
    I2CStop

    If I2CSendState = FALSE  Then
        ' is DS1337 present?
        ' user message
        Print "No DS1337"
        Locate 1,0
        ' user message
        Print "Stopped"
    End
End If
#ENDIF

Locate 0,0
Print "DS1337"
Locate 1,0
Print "Great Cow Basic"
Wait 2 s
CLS

' Quick Command Reference:

' DS1337_EnableOscillator(flag [true|false])
' DS1337_OscillatorStopFlagStatus
' DS1337_ClearOscillatorStopFlag
' DS1337_ResetClock
' DS1337_SetClock(hour, minute, second, DOW, date, month, year)
' DS1337_SetTime(hour, minute, second)
' DS1337_SetDate(DOW, date, month, year)
' DS1337_ReadClock(hour, minute, second, a.m.|p.m., DOW, date, month, year)
' DS1337_ReadTime(hour, minute, second, a.m.|p.m.)
' DS1337_ReadDate(DOW, date, month, year)
' DS1337_SetHourMode(12|24)
' DS1337_ReadHourMode(12|24)
' DS1337_SetSQW(rate)
' DS1337_EnableSQW
' DS1337_DisableSQW

' DS1337_SetControl(value)
' DS1337_ReadControl. A function return currrent value
' DS1337_SetControlStatus(value)
' DS1337_ReadControlStatus. A function return currrent value

' DS1337_SetAlarm1 ( hour, minute, second, DOW, date )
' DS1337_SetAlarmMask1 ( alarmAssertionMatch )
' DS1337_ReadAlarm1 ( hour, minute, second, DOW, date ). Return values
' DS1337_ClearAlarm1
' DS1337_EnableAlarm1Interrupt
' DS1337_DisableAlarm1Interrupt
' DS1337_Alarm1Status
' DS1337_DisableAlarm1

' DS1337_SetAlarm2 ( hour, minute, DOW, date )
' DS1337_SetAlarmMask2 ( alarmAssertionMatch )
' DS1337_ReadAlarm2 ( hour, minute, DOW, date ). Return values
' DS1337_ClearAlarm2
' DS1337_EnableAlarm2Interrupt
' DS1337_DisableAlarm2Interrupt
' DS1337_Alarm2Status
' DS1337_DisableAlarm2

' DS1337_ReadRegister. A function
' DS1337_WriteRegister


' example uses of the DS1337 functions
'
' Example of setting the clock
'   DS1337_SetClock( 15, 33 , 0 , 1 , 4 , 1 , 15 )  ;h ours, minutes, seconds, day of week, date, month, year
'get initial date
DS1337_ReadDate(DOW, date, month, year, century_flag )
If century_flag = 1 Then
    DS1337_HandleCentury ( century_flag, Century )
End If

'and the current mode
DS1337_ReadHourMode(mode)
'update hour mode from RTC
DS1337_SetHourMode(mode)
'and, ensure the clock is running
DS1337_EnableOscillator( TRUE )

'
' Example of configuration of the 1hz output
'
'  DS1337_EnableSQW
'  DS1337_SetSQW 0
'  DS1337_DisableSQW


' Examples of how to set the Alarms
' You MUST do the following:
'1. DS1337_SetAlarm1 (  hour, minute, second, DOW, date ) or DS1337_SetAlarm2 (  hour, minute, DOW, date )
'2. DS1337_SetAlarmMask1 ( DS1337_Alarm1Assertion_Seconds ) to set the mask, see below for the options.
'3. DS1337_ClearAlarm1 or DS1337_ClearAlarm2
'4. DS1337_EnableAlarm1Interrupt if you want to raise the SQW as external interrupt
'5. DS1337_Alarm1InterruptEnable

' You can test the status of the alarm by raising an interrupt in your PIC but you can also test DS1337_Alarm[1|2]Status.  DS1337_Alarm[1|2]Status. will return true | false.
' After the alarm event has occured you MUST clear the alarm, using DS1337_ClearAlarm1 or DS1337_ClearAlarm2


' DS1337_DisableAlarm1Interrupt                           ;turn off the SQW interrupt
' DS1337_DisableAlarm2Interrupt                           ;turn off the SQW  interrupt


' set Alarm1 - alert every time the Seconds is each 30th second
'DS1337_SetAlarm ( [0 |  1] , hour, minute, second, DOW, date )
DS1337_SetAlarm1 ( 11, 45, 30, 0, 1 )

' These are defined for usage
' DS1337_Alarm1Assertion_EverySecond                    = 0x0F
' DS1337_Alarm1Assertion_Seconds                        = 0x0E
' DS1337_Alarm1Assertion_MinutesSeconds                 = 0x0C
' DS1337_Alarm1Assertion_HoursMinutesSeconds            = 0x08
' DS1337_Alarm1Assertion_DateHoursMinutesSeconds        = 0x00
' DS1337_Alarm1Assertion_DayHoursMinutesSeconds         = 0x00

'DS1337_SetAlarmMask1 ( alarmAssertionMatch )
DS1337_SetAlarmMask1 ( DS1337_Alarm1Assertion_Seconds )
DS1337_ClearAlarm1
DS1337_EnableAlarm1Interrupt
DS1337_ReadAlarm1( hour, min, sec, DOW, date )

' set Alarm2 - alert every Minute
'DS1337_SetAlarm2 ( hour, minute, DOW, date )
DS1337_SetAlarm2 ( 10, 1, 0, 1 )

' These are defined for usage
' DS1337_Alarm2Assertion_EveryMinute                    = 0x07
' DS1337_Alarm2Assertion_Minutes                        = 0x06
' DS1337_Alarm2Assertion_HoursMinutes                   = 0x04
' DS1337_Alarm2Assertion_DateHoursMinutes               = 0x00
' DS1337_Alarm2Assertion_DayHoursMinutesSeconds         = 0x00

DS1337_SetAlarmMask2 ( DS1337_Alarm2Assertion_EveryMinute )
DS1337_ClearAlarm2
DS1337_EnableAlarm2Interrupt
' just an example....
DS1337_ReadAlarm2( hour, min, DOW, date )

' DS1337_DisableAlarm1            ; if you want to turn the alarm off
' DS1337_DisableAlarm2            ; if you want to turn the alarm off

' End of example Alarm setup commands

' Main body of program commences here.
'get initial date. This is required for main routine.
DS1337_ReadDate(DOW, date, month, year, century_flag )
If century_flag = 1 Then
    DS1337_HandleCentury ( century_flag, Century )
End If
'and the current mode
DS1337_ReadHourMode(mode)

' initialise a tracking varaible
powerloss = FALSE

' display all registers in realtime display - you will need a big display!!
'    DS1337_ClearOscillatorStopFlag
'    DS1337_EnableAlarm1Interrupt
'    DS1337_EnableAlarm2Interrupt
'    oldsec = 61
'    do forever
'      do
'            DS1337_ReadTime(hour, min, sec, am_pm)
'      loop while oldsec = sec
'      oldsec = sec
'      for xloop = 0X00 to 0X0F
'        locate xloop, 0
'        LCDHex( xloop, LeadingZeroActive )
'        print "H "
'        print ByteToBin( DS1337_ReadRegister ( xloop ) )
'      next
'      if DS1337_Alarm1Status = 1 then    ; display message
'       oldsec = sec
'       DS1337_ClearAlarm1
'       locate 0,0
'       print sec
'      end if
'
'      if DS1337_Alarm2Status = 1 then    ; display message
'        wait 10 us
'        DS1337_ClearAlarm2
'      end if
'
'    loop


Do

    'show time and date
    updateDisp

    If DS1337_OscillatorStopFlagStatus = TRUE Then
        ' has a power loss occurred? and the oscillator has stopped?
        powerloss = TRUE
        DS1337_ClearOscillatorStopFlag
    End If
    If powerloss = TRUE Then
        changeSetting
        powerloss = FALSE
        DS1337_ClearOscillatorStopFlag
    End If

    If setBut = pressed Then
        'change time and date
        changeSetting
    End If

    If modeBut = pressed Then
        '12 or 24 hour mode
        changeMode
    End If

    'Alarm Handling code. Simply tests the status and displays a message on the LCD

    If DS1337_Alarm1Status = 1 Then
        ' display message
        Locate 0,15
        Print "*1"
        DS1337_ClearAlarm1
        Alarm1track = sec
    End If


    If DS1337_Alarm2Status = 1 Then
        ' display message
        Locate 1,15
        Print "*2"
        DS1337_ClearAlarm2
        Alarm2track = sec
    End If

    If ((Alarm1track + 4) % 60 ) < sec Then
        ' clear the line after time delay of 4 secs
        Locate 0,15
        Print "  "
    End If

    If ((Alarm2track + 4) % 60 ) < sec Then
        ' clear the line after time delay of 4 secs
        Locate 1,15
        Print "  "
    End If
    'End of Alarm Handling code.

Loop
End
'----- Subroutines

Sub printTime
    If mode = 24 Then
        If hour < 10 Then
            'left pad with zero
            Print "0"
        End If
    End If
    Print hour

    Print ":"
    If min < 10 Then
        'left pad with zero
        Print "0"
    End If
    Print min

    Print ":"
    If sec < 10 Then
        'left pad with zero
        Print "0"
    End If
    Print sec

    If mode = 12 Then
        'Print a.m or p.m
        If am_pm Then
            'only in 12-hour mode
            Print " p.m. "
        Else
            Print " a.m. "
        End If
    Else
        'wipe out garbage
        Print "     "
    End If
End Sub

'-----

Sub printDate
    'day of the week
    Select Case DOW
    Case 1:
        Print "Sun:"
    Case 2:
        Print "Mon:"
    Case 3:
        Print "Tue:"
    Case 4:
        Print "Wed:"
    Case 5:
        Print "Thu:"
    Case 6:
        Print "Fri:"
    Case 7:
        Print "Sat:"
    Case Else
        Print "Err:"
    End Select

    If clocktype = 0 Then
        Print month
        Print "/"
        Print date
        'make four-digit year
        Print "/"
        Print century
        If year < 10 Then
            Print "0"
        End If

    Else
        Print date
        Print "/"
        Print month
        'make four-digit year
        Print "/"
        Print century
        If year < 10 Then
            Print "0"
        End If
    End If
    Print year
    'blank any garbage
    Print " "
End Sub

'-----

Sub updateDisp
    'for best efficiency, date is only updated once a day
    DS1337_ReadTime(hour, min, sec, am_pm)
    If oldsec <> sec Then
        If !(hour | min | sec) Then
            'time to update
            DS1337_ReadDate(DOW, date, month, year, century_flag )
            If century_flag = 1 Then
                DS1337_HandleCentury ( century_flag, Century )
                CLS
            End If
        End If

        'home the cursor
        Locate 0,0
        'show time
        printTime

        'show the date
        Locate 1,0
        printDate
        oldsec =  sec
    End If
End Sub

'-----

Sub changeSetting
    'assume no change will be made
    changed = FALSE
    'and the current mode
    DS1337_ReadHourMode(Oldmode)
    'ensure the display is correct
    mode = 24
    'change settings in 24-hour mode
    DS1337_SetHourMode(24)

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    Wait While ( setBut = pressed ) OR ( modeBut = pressed )

    If clocktype = 0 Then
        ' handle US and UK clock type
        SetMonth
        SetDate
    Else
        SetDate
        SetMonth
    End If
    SetYear

    '***** Day of the Week

    CLS
    Print "Set Weekday:"
    Locate 1,0
    printDate

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            DOW++
            If DOW > 7 Then
                '1 = Sunday, etc.
                DOW = 1
            End If

            'Print updated display
            Locate 1,0
            printDate
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
        Loop
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    '***** Hour

    CLS
    Print "Set Hours:"
    Locate 1,0
    If OldMode = 12 AND am_pm Then
        ' make correction of AM_PM mode by adding 12 hours to handle mode changes
        hour = hour + 12
    End If

    printTime

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            hour++
            If hour > 23 Then
                'remember, set in 24-hour mode
                hour = 0
            End If

            'Print updated display
            Locate 1,0
            printTime
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
        Loop
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    '***** Minutes

    CLS
    Print "Set Minutes:"
    Locate 1,0
    printTime

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            min++
            If min > 59 Then
                '0 to 59 minutes
                min = 0
            End If

            'Print updated display
            Locate 1,0
            printTime
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
        Loop
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    '***** Second

    CLS
    Print "Set Seconds:"
    Locate 1,0
    printTime

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            sec++
            If sec > 59 Then
                '0 to 59 seconds
                sec = 0
            End If

            'Print updated display
            Locate 1,0
            printTime
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
        Loop
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    '***** Execute the new settings

    If changed Then
        CLS
        Print "Press Set, or"
        Locate 1,0
        Print "Mode to revert"

        'wait for the Set button
        Do While (setBut <> pressed)
            Wait debounce
            If ModeBut = pressed Then
                'clear last message
                CLS
                'restore current mode
                DS1337_SetHourMode(Oldmode)
                'do not set, exit set routine
                Exit Sub
            End If
        Loop

        'change settings in 24-hour mode
        DS1337_SetHourMode(24)
        DS1337_SetClock(hour, min, sec, DOW, date, month, year)
        ' reset tracker variable
        powerloss  = FALSE
        DS1337_ClearOscillatorStopFlag
    End If

    'wait for Set release
    Do While (setBut = pressed)
    Loop

    'let it settle
    Wait debounce
    'clear last message
    CLS
    'restore current mode
    DS1337_SetHourMode(Oldmode)
    'restore mode
    mode = Oldmode
End Sub

'-----

Sub changeMode
    'change settings in 24-hour mode
    DS1337_SetHourMode(24)

    If mode = 12 Then
        'toggle between 12 and 24
        mode = 24
    Else
        mode = 12
    End If

    'change to new mode
    DS1337_SetHourMode(mode)

    'wait for a release
    Do While modeBut = pressed
        Wait debounce
    Loop
End Sub

Sub setMonth
    '***** Month
    CLS
    Print "Set Month:"
    Locate 1,0
    printDate

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            month++
            If month > 12 Then
                month = 1
            End If

            'Print updated display
            Locate 1,0
            printDate
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
        Loop
        Wait debounce
        'Set moves you on
    Loop While setBut <> pressed

    ReadTable monthDays, month, daysMax

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop
End Sub



Sub SetDate
    '***** Date

    CLS
    Print "Set Date:"
    Locate 1,0
    printDate
    ReadTable monthDays, month, daysMax
    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            date++
            If date > daysMax Then
                'stay within legal days
                date = 1
            End If

            'Print updated display
            Locate 1,0
            printDate
            'wait for repeatt
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
        Loop
        Wait debounce
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop
End Sub


Sub SetYear
    '***** Year

    CLS
    Print "Set Year:"
    Locate 1,0
    printDate

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            year++
            If year > 99 Then
                'this millennium only
                year = 0
            End If

            'Print updated display
            Locate 1,0
            printDate
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
        Loop
        Wait debounce
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop


End Sub


'#define locate ANSI_rev
'#define CLS ANSIERASECREEN
'#define print hserprint
'#define lcdhex hserprintlcdhex
'
'' Position cursor on Terminal
'Sub ANSI ( IN xpos, IN ypos )
'    HSerSend 27
'    HSerPrint "["
'    HSerPrint ypos
'    HSerSend 59
'    HSerPrint xpos
'    HSerPrint "H"
'End Sub
'
'' Position cursor on Terminal
'Sub ANSI_rev ( IN ypos, IN xpos )
'    ypos++
'    HSerSend 27
'    HSerPrint "["
'    HSerPrint ypos
'    HSerSend 59
'    HSerPrint xpos
'    HSerPrint "H"
'End Sub
'
'
'' Eraase Terminal
'Sub ANSIERASECREEN
'    HSerSend 27
'    HSerPrint "["
'    HSerPrint "2"
'    HSerPrint "J"
'    Ansi ( 0, 0 )
'
'    HSerSend 27
'    HSerPrint "["
'    HSerPrint "?"
'    HSerPrint "25"
'    HSerPrint "l"
'
'
'
'end Sub
'
'
'sub hserprintlcdhex
'
'
'end Sub
