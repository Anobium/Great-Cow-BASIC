'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
''': This program shows the real time clock on a LCD. The LCD is driven by a LCD I2C adapter.
''': Two types of LCD are supported using this method, as shown below:
''':        Set LCD_10 to 10 for the YwRobot LCD1602 IIC V1 or the Sainsmart LCD_PIC I2C adapter
''':        Set LCD_10 to 12 for the Ywmjkdz I2C adapter with pot bent over top of chip
''': The PCF85x3 is attached to the I2C ports with appropiate resistors to the supply voltage.  Typically a 5k or 2.2k resistor 'pulling up' to the supply voltage can be used.
''':
''':    There are two pushbuttons: Mode and Set equates to Key1 and Key2. Connected to portb.0 and portb.1 resepectively.
''':
''':    During normal operation, the Mode button will toggle the Alarm
''':
''':    This has two modes US date and UK date style.
''':    Change ''':clocktype''': to 0 for US and 1 for UK
''':
''':    To set a new date and time, press the Set button
''':    which will take you consecutively to Month, Day, Year,
''':    Day of the Week, Hour, Minute and Second. Within each of
''':    these, press Mode to cycle through the possible values.
''':    You may hold the Mode button to increment automatically,
''':    or press momentarily for a single increment. Time is
''':    always set in 24-hour clock format.

'''@author  EvanV
'''@licence GPL
'''@version 1.0a
'''@date    29.1.2019
'''********************************************************************************

' ----- Configuration
#CHIP 16f15376, 32
#OPTION Explicit

'Generated by PIC PPS Tool for Great Cow Basic
'PPS Tool version: 0.0.5.22
'PinManager data: Not available (3)
'Generated for 16F15376
'
'Template comment at the start of the config file
'
#STARTUP InitPPS, 85
#DEFINE PPSToolPart 16F15376

Sub InitPPS

    'Module: MSSP1
    'SDA1 > RB5
    RB5PPS = 0x0016
    'RB5 > SDA1 (bi-directional)
    SSP1DATPPS = 0x000D
    'SCL1 > RB7
    RB7PPS = 0x0015
    'RB7 > SCL1 (bi-directional)
    SSP1CLKPPS = 0x000F

End Sub
'Template comment at the end of the config file

' ----- Set up LCD - not specific to the clock solution. Change to meet your needs
#DEFINE LCD_IO 10
' default to 0x4E
#DEFINE LCD_I2C_Address_1 0x4C
'You may need to use SLOW or MEDIUM if your LCD is a slower device.
#DEFINE LCD_SPEED FAST
'You may need to invert these states. Dependent of LCD I2C adapter.
#DEFINE LCD_Backlight_On_State  1
#DEFINE LCD_Backlight_Off_State 0



' ----- Define Hardware settings for hwi2c - I2c is specific to the clock solution. Software and hardware i2C is supported.
' Define I2C settings - CHANGE PORTS if required for your specific device.
#DEFINE hi2c_BAUD_RATE 100
#DEFINE hi2c_DATA PORTb.5
#DEFINE hi2c_CLOCK PORTb.7
'Initialise I2C Master
'I2C pins need to be input for SSP2 module
Dir hi2c_DATA In
Dir hi2c_CLOCK In



' ----- Commence the Clock specific solution
' ----- Define Clock include, clock addres and the input switch hardware settings

#INCLUDE <PCF85X3.h>
#DEFINE DS_AddrWrite 0xA2
#DEFINE DS_AddrRead  0xA3

'Set pushbutton
#DEFINE setBut      portb.0
'Mode pushbutton
#DEFINE modeBut     portb.1

Dir setBut In
Dir modeBut In

'0 is US or 1 is UK style
#DEFINE clocktype   1
'settling time for switches
#DEFINE debounce    150 ms
'delay time for pushbutton
#DEFINE delay       150 ms
'flag for pressed pushbutton
#DEFINE pressed     1

'a reference to the alarm 0
#DEFINE Alarm0 0x00
'a reference to the alarm 1
#DEFINE Alarm1 0x01



'----- Variables

Dim DAYSMAX, DAYSMAX As Byte
Dim changed As BIT
Dim hour, min, sec As Byte
Dim oldsec As Byte
Dim date, month, year, DOW As Byte
Dim dayMax As Byte
'      init value
oldsec = 255

'----- Tables

'# of days in months
Table monthDays
    31
    'leap years only
    29
    31
    30
    31
    30
    31
    31
    30
    31
    30
    31
End Table



'----- The user program

'Create some custom characters
CreateCustomCharacters

LCDCursor CURSOROFF
Locate 0,0
Print "PCF85x3 Clock"
Locate 1,0
Print "Great Cow Basic 2019"
Wait 2 s
CLS

'Constants when calling PCF85x3_ResetClock that can/could be set.

#DEFINE  PCF85x3_DEFAULT_HOUR        8
#DEFINE  PCF85x3_DEFAULT_MIN         16
#DEFINE  PCF85x3_DEFAULT_SEC         0
#DEFINE  PCF85x3_DEFAULT_DAY         1
#DEFINE  PCF85x3_DEFAULT_WEEKDAY     5
#DEFINE  PCF85x3_DEFAULT_MONTH       2
#DEFINE  PCF85x3_DEFAULT_YEAR        19
'The constants above are used as the defaults when you reset the clock
PCF85x3_ResetClock
PCF85x3_Enable

'or, set the clock this way
'  PCF85x3_SetClock(        8,         16,       55 ,         29,          5,        2,          19)

'set the ClockOut by enabling like this
PCF85x3_SetClockout ( TRUE )

'set the ClockOut frequency like this, using the following Constants
'PCF85x3_CLKOUT_CTRL_REG_32_768_kHz
'PCF85x3_CLKOUT_CTRL_REG_1_024_kHz
'PCF85x3_CLKOUT_CTRL_REG_32_Hz
'PCF85x3_CLKOUT_CTRL_REG_1_Hz
PCF85x3_SetClockoutFrequency ( PCF85x3_CLKOUT_CTRL_REG_1_Hz )

'set the alarm like this...
'      PCF85x3_SetAlarm( hour, mins )
'or
'      PCF85x3_SetAlarm( hour, mins, day of the month [1-31], day of the week[0-6] )

'set the alarm for 07:00 hrs
PCF85x3_SetAlarm( 7, 0 )
PCF85x3_ClearAlarm

'Set the Alarm for each minute, each hour and minute (therefore daily) by using these assertions.  You can create you own assertions, simple OR the constants.
'PCF85x3_Alarm_Off                                     0x00
'PCF85x3_AlarmAssertion_Minute                         0x01
'PCF85x3_AlarmAssertion_Hour                           0x02
'PCF85x3_AlarmAssertion_Date                           0x04
'PCF85x3_AlarmAssertion_DoW                            0x08

'PCF85x3_AlarmAssertion_MinuteHour                     0x03       'at a specfic hour and every minute

'Set by passing correct data
PCF85x3_EnableAlarm ( PCF85x3_AlarmAssertion_MinuteHour )


'----- Main body of program commences here.

'get initial date
PCF85x3_ReadDate(date, DOW, month, year)

Do

    'show time and date
    updateDisp
    If setBut = pressed Then
        'change time and date
        changeSetting
    End If

    If modeBut = pressed Then
        ShowAlarm
    End If

Loop

End

'----- Support User Subroutines

Sub printTime

    If hour < 10 Then
        'left pad with zero
        Print "0"
    End If
    Print hour

    Print ":"
    If min < 10 Then
        'left pad with zero
        Print "0"
    End If
    Print min

    Print ":"
    If sec < 10 Then
        'left pad with zero
        Print "0"
    End If
    Print sec

    'wipe out any garbage
    Print "     "

End Sub

'-----

Sub printDate

    'day of the week
    Select Case DOW
    Case 0:
        Print "Sun."
    Case 1:
        Print "Mon."
    Case 2:
        Print "Tue."
    Case 3:
        Print "Wed."
    Case 4:
        Print "Thu."
    Case 5:
        Print "Fri."
    Case 6:
        Print "Sat."
    Case Else
        Print Str(DOW)+":"
    End Select

    If clocktype = 0 Then
        Print month
        Print "/"
        Print date
        'make four-digit year
        Print "/20"
        If year < 10 Then
            Print "0"
        End If
    Else
        Print date
        Print "/"
        Print month
        'make four-digit year
        Print "/20"
        If year < 10 Then
            Print "0"
        End If
    End If
    Print year
    'blank any garbage
    Print " "
End Sub

'-----

Sub updateDisp
    'for best efficiency, date should be updated once a day
    PCF85x3_ReadTime(hour, min, sec)


    If oldsec <> sec Then

        If sec = 0 Then
            'time to update
            PCF85x3_ReadDate( date, DOW, month, year)

            Locate 0, 19

            'Show clock integrity or the alarm

            '' If PCF85x3_ReadVL is 0 then the clock integrity is good... show a happy face
            'if PCF85x3_ReadVL = 0 then
            'LCDWriteChar 0
            'else
            'LCDWriteChar 1
            'end if

            'has the Alarm gone off? this clears the alarms automatically
            ' If PCF85x3_Alarm_bit ... show a happy face
            If PCF85x3_ReadAlarmState = 1 Then
                LCDWriteChar 1
            Else
                LCDWriteChar 0
            End If

        End If

        'home the cursor
        Locate 0,0
        'show time
        printTime

        'show the date
        Locate 1,0
        printDate
        oldsec =  sec

    End If

End Sub

'-----

Sub changeSetting
    'assume no change will be made
    changed = FALSE

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    Wait While ( setBut = pressed ) OR ( modeBut = pressed )

    If clocktype = 0 Then
        ' handle US and UK clock type
        SetMonth
        SetDate
    Else
        SetDate
        SetMonth
    End If
    SetYear

    '***** Day of the Week

    CLS
    Print "Set Weekday:"
    Locate 1,0
    printDate

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            DOW++
            If DOW > 6 Then
                '0 = Sunday, etc.
                DOW = 0
            End If

            'Print updated display
            Locate 1,0
            printDate
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
            'wait for repeat
            Wait While modeBut <> pressed
        Loop
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    '***** Hour

    CLS
    Print "Set Hours:"
    Locate 1,0
    printTime

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            hour++
            If hour > 23 Then
                'remember, set in 24-hour mode
                hour = 0
            End If

            'Print updated display
            Locate 1,0
            printTime
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
        Loop
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    '***** Minutes

    CLS
    Print "Set Minutes:"
    Locate 1,0
    printTime

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            min++
            If min > 59 Then
                '0 to 59 minutes
                min = 0
            End If

            'Print updated display
            Locate 1,0
            printTime
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
        Loop
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    '***** Second

    CLS
    Print "Set Seconds:"
    Locate 1,0
    printTime

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            sec++
            If sec > 59 Then
                '0 to 59 seconds
                sec = 0
            End If

            'Print updated display
            Locate 1,0
            printTime
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
        Loop
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    '***** Execute the new settings

    If changed Then
        CLS
        Print "Press Set, or"
        Locate 1,0
        Print "Mode to revert"

        'wait for the Set button
        Do While (setBut <> pressed)
            Wait debounce
            If ModeBut = pressed Then
                'clear last message
                CLS
                'do nothing - you could add setting the clock
                'exit set routine
                Exit Sub
            End If
        Loop

        PCF85x3_SetClock(hour, min, sec, DOW, date, month, year)
    End If

    'wait for Set release
    Do While (setBut = pressed)
    Loop

    'let it settle
    Wait debounce
    'clear last message
    CLS
    'ensure the clock is running
    PCF85x3_Enable
End Sub

'-----

Sub changeMode
    'Does nothing

    'wait for a release
    Do While modeBut = pressed
        Wait debounce
    Loop
End Sub

Sub setMonth
    '***** Month
    CLS
    Print "Set Month:"
    Locate 1,0
    printDate

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            month++
            If month > 12 Then
                month = 1
            End If

            'Print updated display
            Locate 1,0
            printDate
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
        Loop
        Wait debounce
        'Set moves you on
    Loop While setBut <> pressed

    ReadTable monthDays, month, daysMax

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop
End Sub



Sub SetDate
    '***** Date

    CLS
    Print "Set Date:"
    Locate 1,0
    printDate
    ReadTable monthDays, month, daysMax
    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            date++
            If date > daysMax Then
                'stay within legal days
                date = 1
            End If

            'Print updated display
            Locate 1,0
            printDate
            'wait for repeatt
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
        Loop
        Wait debounce
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop
End Sub


Sub SetYear
    '***** Year

    CLS
    Print "Set Year:"
    Locate 1,0
    printDate

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            year++
            If year > 99 Then
                'this millennium only
                year = 0
            End If

            'Print updated display
            Locate 1,0
            printDate
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
        Loop
        Wait debounce
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop


End Sub


Sub ShowAlarm

    CLS
    Dim myreg As Byte
    Print "Alarm "
    PCF85x3_ReadRegister ( PCF85x3_HOURS_ALARM_REG, myreg )
    Print LeftPad( Str(BcdToDec( myreg  & 0x7f )),2, "0" )
    Print ":"
    PCF85x3_ReadRegister ( PCF85x3_MINS_ALARM_REG, myreg )
    Print LeftPad( Str(BcdToDec( myreg  & 0x7f )),2, "0" )
    Wait 5 s

End Sub


Sub CreateCustomCharacters

    'Create an array to store the character until it is copied
    Dim CharArray(8)

    'Set the array to hold the character
    'Binary has been used to improve the readability of the code, but is not essential
    CharArray(1) = b'00011011'
    CharArray(2) = b'00011011'
    CharArray(3) = b'00000000'
    CharArray(4) = b'00000100'
    CharArray(5) = b'00000000'
    CharArray(6) = b'00010001'
    CharArray(7) = b'00010001'
    CharArray(8) = b'00001110'

    'Copy the character from the array to the LCD
    LCDCreateChar 0, CharArray()

    'Set the array to hold the character
    'Binary has been used to improve the readability of the code, but is not essential
    CharArray(1) = b'00011011'
    CharArray(2) = b'00011011'
    CharArray(3) = b'00000000'
    CharArray(4) = b'00000100'
    CharArray(5) = b'00000000'
    CharArray(6) = b'00001110'
    CharArray(7) = b'00010001'
    CharArray(8) = b'00010001'

    'Copy the character from the array to the LCD
    LCDCreateChar 1, CharArray()

End Sub
