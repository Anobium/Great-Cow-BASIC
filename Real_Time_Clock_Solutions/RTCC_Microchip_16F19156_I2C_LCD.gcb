'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program shows the real time clock on a LCD. The LCD is driven by a LCD I2C adapter.
'''Two types of LCD are supported using this method, as shown below:
''':        Set LCD_10 to 10 for the YwRobot LCD1602 IIC V1 or the Sainsmart LCD_PIC I2C adapter
''':        Set LCD_10 to 12 for the Ywmjkdz I2C adapter with pot bent over top of chip
''':
''':    There are two pushbuttons: Mode and Set equates to Key1 and Key2. Connected to portb.0 and portb.1 resepectively.
''':
''':    This has two modes US date and UK date style.
''':    Change ''':clocktype''': to 0 for US and 1 for UK
''':
''':    To set a new date and time, press the Set button
''':    which will take you consecutively to Month, Day, Year,
''':    Day of the Week, Hour, Minute and Second. Within each of
''':    these, press Mode to cycle through the possible values.
''':    You may hold the Mode button to increment automatically,
''':    or press momentarily for a single increment. Time is
''':    always set in 24-hour clock format.

'''@author  EvanV
'''@licence GPL
'''@version 1.0
'''@date    15.12.17
'''********************************************************************************


'Chip Settings.
#CHIP 16F19156, 32
#OPTION Explicit

'to ensure FEXOSC is not specified
#CONFIG FEXTOSC=Off
'to show clock on PortA.6 this is a hardcoded port. PPS cannot change.  You may loose SOSC clarity on your scope if you enable.
#CONFIG CLKOUTEN=Off
'to enable master clear reset
#CONFIG MCLR = On



#INCLUDE <microchiprtcc.h>
'Generated by PIC PPS Tool for Great Cow Basic
'PPS Tool version: 0.0.5.11
'PinManager data: v1.55
'
'Template comment at the start of the config file
'
#STARTUP InitPPS, 85

Sub InitPPS

    'Module: MSSP1
    'SCL1 > RC3
    RC3PPS = 0x0013
    'RC3 > SCL1 (bi-directional)
    SSP1CLKPPS = 0x0013
    'SDA1 > RC4
    RC4PPS = 0x0014
    'RC4 > SDA1 (bi-directional)
    SSP1DATPPS = 0x0014
    'Module: RTCC - clock output
    'RTCC > RA1
    RA1PPS = 0x0018

End Sub
'Template comment at the end of the config file

#DEFINE LEDD1 PORTB.1
#DEFINE LEDD2 PORTB.5
#DEFINE SwitchIn        PORTB.0

Dir     LEDD1         Out
Dir     LEDD2         Out
Dir     SwitchIn      In

' Define I2C settings
#DEFINE HI2C_BAUD_RATE 100
#DEFINE HI2C_DATA PORTC.4
#DEFINE HI2C_CLOCK PORTC.3

HI2CMode Master

'Initialise I2C - For the MSSP module the ports need to be set to Input
Dir HI2C_DATA In
Dir HI2C_CLOCK In

'''Set up LCD
#DEFINE LCD_IO 10
#DEFINE LCD_I2C_Address_1 0x4C

'You may need to use SLOW or MEDIUM if your LCD is a slower device.
#DEFINE LCD_SPEED SLOW
'You may need to invert these states. Dependent of LCD I2C adapter.
#DEFINE LCD_Backlight_On_State  1
#DEFINE LCD_Backlight_Off_State 0


'RTCC specific setup
#DEFINE  rttc_AlarmPulse porta.1
#DEFINE  rttc_AlarmPort porta.0

'*****************************************************************************************************
'Main program commences here.. everything before this is setup for the board.

'SETUP THE RTCC
'    rtcc_setClock( 7, 55, 0, 5, 15, 12, 17)
'    rtcc_SetAlarm( 0 , 0 , 4 , 0, 0, 0 )   ' every 4th second
'    rtcc_SetAlarmMark ( rtcc_AlarmAssertion_EverySecond )
'    on Interrupt RTCAlarmTrigger call rttc_Interrupt

' ----- Define Hardware settings
Dir setBut In
Dir modeBut In

'0 is US or 1 is UK style
#DEFINE clocktype   1
'settling time for switches
#DEFINE debounce    100 ms
'delay time for pushbutton
#DEFINE delay       150 ms
'flag for pressed pushbutton
#DEFINE pressed     1
'Set pushbutton
#DEFINE setBut      portb.0
'Mode pushbutton
#DEFINE modeBut     portb.1


'----- Variables

Dim DAYSMAX, DAYSMAX As Byte
Dim changed As BIT
Dim oldsec As Byte
Dim mode, Oldmode, dayMax As Byte
'      init value
oldsec = 255


'----- Adjust the clock, if required.   See section 24.1.7 CALIBRATION of the datasheet for usage
#DEFINE rtcc_Calibration_Offset 0

'----- Program

CLS

Locate 0,0
Print "MicroChip RTCC"
Locate 1,0
Print "No VBATEN support"
Wait 2 s
CLS

Locate 0,0
Print "Great Cow BASIC"
Locate 1,0
Print "@2018"
Wait 2 s
CLS


'Main body of program commences here.
'get initial date
rtcc_ReadDate( tm_wday, tm_mday, tm_mon, tm_year )

'Hold down these two buttons to init the clock
If setBut = pressed AND modeBut = pressed  Then
    Locate 0,0
    Print "Init Clock"
    rtcc_SetClock( 1 , 1, 1 , 1, 1 , 1, 17 )
    'get initial date
    rtcc_ReadDate( tm_wday, tm_mday, tm_mon, tm_year )
End If

Do

    'show time and date
    updateDisp
    If setBut = pressed Then
        'change time and date
        changeSetting
    End If

Loop

End

'----- Subroutines

Sub printTime
    If tm_hour < 10 Then
        'left pad with zero
        Print "0"
    End If
    Print tm_hour

    Print ":"
    If tm_min < 10 Then
        'left pad with zero
        Print "0"
    End If
    Print tm_min

    Print ":"
    If tm_sec < 10 Then
        'left pad with zero
        Print "0"
    End If
    Print tm_sec

    'wipe out garbage
    Print "     "
End Sub

'-----

Sub printDate
    'day of the week
    Select Case tm_wday
    Case 0:
        Print "Sun."
    Case 1:
        Print "Mon."
    Case 2:
        Print "Tue."
    Case 3:
        Print "Wed."
    Case 4:
        Print "Thu."
    Case 5:
        Print "Fri."
    Case 6:
        Print "Sat."
    Case Else
        Print "Err."
    End Select

    If clocktype = 0 Then
        Print tm_mon
        Print "/"
        Print tm_mday
    Else
        Print tm_mday
        Print "/"
        Print tm_mon
    End If
    Print "/"
    Print tm_year
    'blank any garbage
    Print "    "
End Sub

'-----

Sub updateDisp
    'for best efficiency, date is only updated once a day
    rtcc_ReadClock( tm_hour, tm_min, tm_sec, tm_wday, tm_mday, tm_mon, tm_year)

    If oldsec <> tm_sec Then

        'home the cursor
        Locate 0,0
        'show time
        printTime

        'show the date
        Locate 1,0
        printDate
        oldsec =  tm_sec
    End If
End Sub

'-----

Sub changeSetting
    'assume no change will be made
    changed = FALSE
    'ensure the display is correct
    mode = 24

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    Wait While ( setBut = pressed ) OR ( modeBut = pressed )

    If clocktype = 0 Then
        ' handle US and UK clock type
        SetMonth
        SetDate
    Else
        SetDate
        SetMonth
    End If
    SetYear

    '***** Day of the Week

    CLS
    Print "Set Weekday:"
    Locate 1,0
    printDate

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            tm_wday++
            If tm_wday > 6 Then
                '1 = Sunday, etc.
                tm_wday = 0
            End If

            'Print updated display
            Locate 1,0
            printDate
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
            Wait debounce
        Loop
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    '***** Hour

    CLS
    Print "Set Hours:"
    Locate 1,0
    printTime

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            tm_hour++
            If tm_hour > 23 Then
                'remember, set in 24-hour mode
                tm_hour = 0
            End If

            'Print updated display
            Locate 1,0
            printTime
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
            Wait debounce
        Loop
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    '***** Minutes

    CLS
    Print "Set Minutes:"
    Locate 1,0
    printTime

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            tm_min++
            If tm_min > 59 Then
                '0 to 59 minutes
                tm_min = 0
            End If

            'Print updated display
            Locate 1,0
            printTime
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
            Wait debounce
        Loop
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    '***** Second

    CLS
    Print "Set Seconds:"
    Locate 1,0
    printTime

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            tm_sec++
            If tm_sec > 59 Then
                '0 to 59 seconds
                tm_sec = 0
            End If

            'Print updated display
            Locate 1,0
            printTime
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
            Wait debounce
        Loop
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    '***** Execute the new settings

    If changed Then
        CLS
        Print "Press Set, or"
        Locate 1,0
        Print "Mode to revert"

        'wait for the Set button
        Do While (setBut <> pressed)
            Wait debounce
            If ModeBut = pressed Then
                'clear last message
                CLS
                'do not set, exit set routine
                Exit Sub
            End If
        Loop

        Dim tm_temp_year Alias DAYSMAX
        tm_temp_year = tm_year mod 2000
        rtcc_SetClock( tm_hour , tm_min, tm_sec, tm_wday, tm_mday, tm_mon, tm_temp_year )
        rtcc_ReadDate( tm_wday, tm_mday, tm_mon, tm_year )
        rtcc_ReadTime(tm_hour, tm_min, tm_sec)
    End If

    'wait for Set release
    Do While (setBut = pressed)
    Loop

    'let it settle
    Wait debounce
    'clear last message
    CLS
    'restore mode
    mode = Oldmode
End Sub


Sub setMonth
    '***** Month
    CLS
    Print "Set Month:"
    Locate 1,0
    printDate

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            tm_mon++
            If tm_mon > 12 Then
                tm_mon = 1
            End If

            'Print updated display
            Locate 1,0
            printDate
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
            Wait debounce
        Loop
        Wait debounce
        'Set moves you on
    Loop While setBut <> pressed

    ReadTable monthDays, tm_mon, daysMax

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop
End Sub

Sub SetDate
    '***** Date

    CLS
    Print "Set Date:"
    Locate 1,0
    printDate
    ReadTable monthDays, tm_mon, daysMax
    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            tm_mday++
            If tm_mday> daysMax Then
                'stay within legal days
                tm_mday = 1
            End If

            'Print updated display
            Locate 1,0
            printDate
            'wait for repeatt
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
            Wait debounce
        Loop
        Wait debounce
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop
End Sub


Sub SetYear
    '***** Year

    CLS
    Print "Set Year:"
    Locate 1,0
    printDate

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            tm_year++
            If tm_year > 2099 Then
                'this millennium only
                tm_year = 2000
            End If

            'Print updated display
            Locate 1,0
            printDate
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
            Wait debounce
        Loop
        Wait debounce
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop



End Sub



'Handle the interrupt
Sub rttc_Interrupt
    'Clear the Interrupt
    RTCCIF = 0
    rttc_AlarmPort = !rttc_AlarmPort
    rtcc_ReStartAlarm
End Sub


'----- Tables

'# of days in months
Table monthDays
    31
    'leap years only
    29
    31
    30
    31
    30
    31
    31
    30
    31
    30
    31
End Table
