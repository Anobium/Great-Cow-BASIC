'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program shows the real time clock on an ASCII terminal at 19200bps. Putty.exe is recommended terminal.
''':
''':    There are two pushbuttons: Mode and Set equates to Set and the Mode button.  Set the setBut and modeBut port assignment in the program below.
''':
''':    The RTCC 1/2 second clock signal can be
''':    brought out to a pin via PPS called RCC. See
''':    Section 15.0 “Peripheral Pin Select
''':    (PPS) Module” and Table 15-3 in the datasheet
''':
''':    Clock support battery is connected to Pin 7 (porta.5).  No port assignment is required to support standby batter operation.
''':
''':    This has two modes US date and UK date style.
''':    Change 'clocktype' to 0 for US and 1 for UK
''':
''':    To set a new date and time, press the Set button
''':    which will take you consecutively to Month, Day, Year,
''':    Day of the Week, Hour, Minute and Second. Within each of
''':    these, press Mode to cycle through the possible values.
''':    You may hold the Mode button to increment automatically,
''':    or press momentarily for a single increment. Time is
''':    always set in 24-hour clock format.

'''@author  EvanV based on the works of Thomas Henry
'''@licence GPL
'''@version 1.1
'''@date    29.09.18
'''********************************************************************************


'Chip Settings.
#CHIP 16F19156, 32

#OPTION Explicit
'for the battery support. Enable battery support for the RTCC.
#CONFIG VBATEN=On
'for the 32.768hz clock support.  This value is the Reset-default value for COSC and selects the oscillator first used by user software
#CONFIG RSTOSC = SOSC
'INITSYS will handle the correct setting of the internal oscillator for frequency specified on the #chip directive.
'for the battery support
#CONFIG BOREN = On, LPBOREN=On
'to ensure FEXOSC is not specified
#CONFIG FEXTOSC=Off
'to show clock on PortA.6 this is a hardcoded port. PPS cannot change.  You may loose SOSC clarity on your scope if you enable.
#CONFIG CLKOUTEN=Off
'to enable master clear reset
#CONFIG MCLR = On


'to enable the 16f19156 clock support
#INCLUDE <microchiprtcc.h>
'to enable ansi terminal rather that the lcd
#INCLUDE <lcd2serialredirect.h>

'Generated by PIC PPS Tool for Great Cow Basic
'PPS Tool version: 0.0.5.11
'PinManager data: v1.55
'
'Template comment at the start of the config file
'
#STARTUP InitPPS, 85

Sub InitPPS

    'Module: EUSART1
    'TX1 > RC4
    RC4PPS = 0x000D

    'Setup Serial port
    #DEFINE USART_BAUD_RATE 19200
    #DEFINE USART_TX_BLOCKING

    'RTCC > RA1
    RA1PPS = 0x0018

End Sub

'*****************************************************************************************************
'Main program commences here.. everything before this is setup for the board.

'RTCC specific setup
#DEFINE  rttc_AlarmPulse    porta.1
#DEFINE  rttc_AlarmPort     porta.0
#DEFINE  rttc_OSCout        porta.6

Dir rttc_AlarmPulse Out
Dir rttc_AlarmPort  Out
Dir rttc_OSCout     Out

' ----- Define clock parameter/settings for the user interface
'0 is US or 1 is UK style
#DEFINE clocktype   1
'settling time for switches
#DEFINE debounce    250 ms
'flag for pressed pushbutton. You could set to 0 if you are using pull down switches.
#DEFINE pressed     1
'Set pushbutton
#DEFINE setBut      portb.0
'Mode pushbutton
#DEFINE modeBut     portb.1

Dir setBut In
Dir modeBut In

'----- Variables used in the program

Dim DAYSMAX, DAYSMAX As Byte
Dim changed As BIT
Dim oldsec As Byte
Dim mode, Oldmode, dayMax As Byte
'      init value
oldsec = 255


'    SETUP THE RTCC
'    rtcc_SetAlarm( 0 , 0 , 4 , 0, 0, 0 )   ' every 4th second
'    rtcc_SetAlarmMark ( rtcc_AlarmAssertion_EverySecond )
'    on Interrupt RTCAlarmTrigger call rttc_Interrupt

'----- Adjust the clock, if required.   See section 24.1.7 CALIBRATION of the datasheet for usage
#DEFINE rtcc_Calibration_Offset 0


'----- Program

CLS
HSerPrintStringCRLF "MicroChip RTCC"
HSerPrintStringCRLF "Demonstration v1.1"
HSerPrintStringCRLF ""
HSerPrintStringCRLF "VBATEN support"
HSerPrintStringCRLF "Great Cow BASIC"
HSerPrintStringCRLF "December 2019"

Wait 2 s
CLS

'
'  Locate 10,0
'  Print "VBATBOR = "
'  Print VBATBOR
'  Print " : BOR = "
'  print NOT_BOR

'Main body of program commences here.

'get initial date
rtcc_ReadDate( tm_wday, tm_mday, tm_mon, tm_year )

'Hold down these two buttons to init the clock
If setBut = pressed AND modeBut = pressed  Then

    CLS
    HSerPrintStringCRLF "Init Clock"
    'format rtcc_SetClock(hour ,minute ,second ,DOW ,date ,month ,year)
    rtcc_SetClock(19   ,42      ,0      ,1   ,26   ,9     ,18 )

    'get initial date
    rtcc_ReadDate( tm_wday, tm_mday, tm_mon, tm_year )
End If


'main loop
Do

    'show time and date
    updateDisp
    If setBut = pressed Then
        'change time and date
        changeSetting
    End If

Loop

End

'----- Subroutines

Sub printTime
    If tm_hour < 10 Then
        'left pad with zero
        Print "0"
    End If
    Print tm_hour

    Print ":"
    If tm_min < 10 Then
        'left pad with zero
        Print "0"
    End If
    Print tm_min

    Print ":"
    If tm_sec < 10 Then
        'left pad with zero
        Print "0"
    End If
    Print tm_sec

    'wipe out garbage
    Print "     "
End Sub

'-----

Sub printDate
    'day of the week
    Select Case tm_wday
    Case 0:
        Print "Sun."
    Case 1:
        Print "Mon."
    Case 2:
        Print "Tue."
    Case 3:
        Print "Wed."
    Case 4:
        Print "Thu."
    Case 5:
        Print "Fri."
    Case 6:
        Print "Sat."
    Case Else
        Print "Err."
    End Select

    If clocktype = 0 Then
        Print tm_mon
        Print "/"
        Printtm_mday
    Else
        Print tm_mday
        Print  "/"
        Print tm_mon
    End If
    Print "/"
    Print tm_year
    'blank any garbage
    Print "    "
End Sub

'-----

Sub updateDisp
    'for best efficiency update the time only when the second changes
    rtcc_ReadClock( tm_hour, tm_min, tm_sec, tm_wday, tm_mday, tm_mon, tm_year)

    If oldsec <> tm_sec AND tm_wday < 7 Then

        'Support RTCC - clear the flags
        If VBATBOR = 1 Then
            VBATBOR = 1
            NOT_BOR = 1
        End If

        Locate 0, 0

        'show time
        printTime

        printDate

        oldsec =  tm_sec
    End If
End Sub

'-----

Sub changeSetting
    'assume no change will be made
    changed = FALSE
    'ensure the display is correct
    mode = 24

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    Wait While ( setBut = pressed ) OR ( modeBut = pressed )

    If clocktype = 0 Then
        ' handle US and UK clock type
        SetMonth
        SetDate
    Else
        SetDate
        SetMonth
    End If
    SetYear

    '***** Day of the Week

    CLS
    Print "Set Weekday:"
    Locate 1,0
    printDate

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            tm_wday++
            If tm_wday > 6 Then
                '1 = Sunday, etc.
                tm_wday = 0
            End If

            'Print updated display
            Locate 1,0
            printDate
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
            Wait debounce
        Loop
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    '***** Hour

    CLS
    Print "Set Hours:"
    Locate 1,0
    printTime

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            tm_hour++
            If tm_hour > 23 Then
                'remember, set in 24-hour mode
                tm_hour = 0
            End If

            'Print updated display
            Locate 1,0
            printTime
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
            Wait debounce
        Loop
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    '***** Minutes

    CLS
    Print "Set Minutes:"
    Locate 1,0
    printTime

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            tm_min++
            If tm_min > 59 Then
                '0 to 59 minutes
                tm_min = 0
            End If

            'Print updated display
            Locate 1,0
            printTime
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
            Wait debounce
        Loop
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    '***** Second

    CLS
    Print "Set Seconds:"
    Locate 1,0
    printTime

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            tm_sec++
            If tm_sec > 59 Then
                '0 to 59 seconds
                tm_sec = 0
            End If

            'Print updated display
            Locate 1,0
            printTime
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
            Wait debounce
        Loop
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop

    '***** Execute the new settings

    If changed Then
        CLS
        Print "Press Set, or"
        Locate 1,0
        Print "Mode to revert"

        'wait for the Set button
        Do While (setBut <> pressed)
            Wait debounce
            If ModeBut = pressed Then
                'clear last message
                CLS
                'do not set, exit set routine
                Exit Sub
            End If
        Loop

        Dim tm_temp_year Alias DAYSMAX
        tm_temp_year = tm_year mod 2000
        rtcc_SetClock( tm_hour , tm_min, tm_sec, tm_wday, tm_mday, tm_mon, tm_temp_year )
        rtcc_ReadDate( tm_wday, tm_mday, tm_mon, tm_year )
        rtcc_ReadTime(tm_hour, tm_min, tm_sec)
    End If

    'wait for Set release
    Do While (setBut = pressed)
    Loop

    'let it settle
    Wait debounce
    'clear last message
    CLS
    'restore mode
    mode = Oldmode
End Sub


Sub setMonth
    '***** Month
    CLS
    Print "Set Month:"
    Locate 1,0
    printDate

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            tm_mon++
            If tm_mon > 12 Then
                tm_mon = 1
            End If

            'Print updated display
            Locate 1,0
            printDate
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
        Loop
        Wait debounce
        'Set moves you on
    Loop While setBut <> pressed

    ReadTable monthDays, tm_mon, daysMax

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop
End Sub

Sub SetDate
    '***** Date

    CLS
    Print "Set Date:"
    Locate 1,0
    printDate
    ReadTable monthDays, tm_mon, daysMax
    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            tm_mday++
            If tm_mday> daysMax Then
                'stay within legal days
                tm_mday = 1
            End If

            'Print updated display
            Locate 1,0
            printDate
            'wait for repeatt
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
        Loop
        Wait debounce
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop
End Sub


Sub SetYear
    '***** Year

    CLS
    Print "Set Year:"
    Locate 1,0
    printDate

    Do
        'Mode button held
        Do While modeBut = pressed
            'increment while pressed
            tm_year++
            If tm_year > 2099 Then
                'this millennium only
                tm_year = 2000
            End If

            'Print updated display
            Locate 1,0
            printDate
            'wait for repeat
            Wait While modeBut = pressed
            'a change was made
            changed = TRUE
        Loop
        Wait debounce
    Loop While setBut <> pressed

    'wait for Set release
    Do While setBut = pressed
        Wait debounce
    Loop



End Sub



'Handle the interrupt
Sub rttc_Interrupt
    'Clear the Interrupt
    RTCCIF = 0
    rttc_AlarmPort = !rttc_AlarmPort
    rtcc_ReStartAlarm
End Sub




'----- Tables

'# of days in months
Table monthDays
    31
    'leap years only
    29
    31
    30
    31
    30
    31
    31
    30
    31
    30
    31
End Table
