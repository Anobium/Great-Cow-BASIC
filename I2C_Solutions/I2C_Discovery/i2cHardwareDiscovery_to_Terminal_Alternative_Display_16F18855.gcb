'''
'''******************************************************************
'''
'''
'''
'''  PIC: 16F18855
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Date: 13.3.2016
'''


' ----- Configuration
'Chip Settings.
#CHIP 16f18855,32
#OPTION Explicit


#INCLUDE <lowlevel\hwi2c.h>


'Set the PPS of the PWM and the RS232 ports.
'Set the PPS for this solution.
#STARTUP InitPPS, 85

Sub InitPPS
    UNLOCKPPS
    'RC0->EUSART:TX;
    RC0PPS = 0x0010
    'RC1->EUSART:RX;
    RXPPS  = 0x0011

    'RC3->MSSP1:SCL1;
    SSP1CLKPPS = 0x14
    'RC4->MSSP1:SDA1;
    SSP1DATPPS = 0x13
    'RC3->MSSP1:SCL1;
    RC3PPS = 0x15
    'RC4->MSSP1:SDA1;
    RC4PPS = 0x14

    LOCKPPS
End Sub

#DEFINE SWITCH_DOWN         0
#DEFINE SWITCH_UP           1

#DEFINE SWITCH      PORTA.5

#DEFINE USART_BAUD_RATE 19200
#DEFINE USART_TX_BLOCKING
#DEFINE sync SYNC_TX1STA

' ----- Define Hardware settings for hwi2c
' Define I2C settings - CHANGE PORTS if required for your specific device.
#DEFINE hi2c_BAUD_RATE 400
#DEFINE hi2c_DATA PORTC.3
#DEFINE hi2c_CLOCK PORTC.4
'Initialise I2C Master
'I2C pins need to be input for SSP2 module
Dir hi2c_DATA In
Dir hi2c_CLOCK In

HI2CMode Master

' ----- Main body of program commences here.
' Now assumes Serial Terminal is operational
Dim DeviceID As Byte
Dim DISPLAYNEWLINE As Byte

Do
    HSerPrintCRLF
    HSerPrint "Hardware I2C "
    HSerPrintCRLF 2

    ' Now assumes Serial Terminal is operational
    HSerPrintCRLF
    HSerPrint "   "
    'Create a horizontal row of numbers
    For DeviceID = 0 To 15
        HSerPrint Hex(deviceID)
        HSerPrint " "
    Next

    'Create a vertical column of numbers
    For DeviceID = 0 To 255
        DisplayNewLine = DeviceID % 16
        If DisplayNewLine = 0 Then
            HSerPrintCRLF
            HSerPrint Hex(DeviceID)
            If DisplayNewLine > 0 Then
                HSerPrint " "
            End If
        End If
        HSerPrint " "

        'Do an initial Start
        HI2CStart
        If HI2CWaitMSSPTimeout <> TRUE Then

            'Send to address to device
            HI2CSend ( deviceID )

            'Did device fail to respond?
            If HI2CAckpollState = FALSE Then
                HI2CSend ( 0 )
                HSerPrint   Hex(deviceID)
            Else
                HSerPrint "--"
            End If

            'Do a stop.
            HI2CStop
        Else
            HSerPrint "! "
        End If

    Next

    HSerPrintCRLF 2
    HSerPrint   "End of Search"
    HSerPrintCRLF 2
    Wait 1 s
    Wait While switch = On
Loop

' ----- Support methods.  Subroutines and Functions
