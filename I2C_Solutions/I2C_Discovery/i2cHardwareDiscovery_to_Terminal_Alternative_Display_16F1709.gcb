'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program searches for I2C devices and display their adresses to the attached PC terminal.
'''This program uses the hardware implementation of I2C and TWI for the Microchip and ATMEL microprocessors.  The microprocessor must have a suitable I2C or TWI module.
'''The hardware serial connections are shown in the program.
'''
'''YOU MUST HAVE PULLS on THE CLOCK AND DATA LINES
'''
'''@author  EvanV
'''@licence GPL
'''@version 1.2a
'''@date    6.9.2016
'''********************************************************************************

' ----- Configuration
#CHIP 16F1709, 16
#OPTION Explicit

'Set the PPS for this solution.
#STARTUP InitPPS, 85

Sub InitPPS
    UNLOCKPPS

    'Pin RB5 source is an input for RX
    RXPPS=0x0D
    'Pin RB7 source is TX/CK
    RB7PPS=0x14

    'RB4->MSSP:SDA
    RB4PPS = 0x11
    'RB6->MSSP:SCL
    RB6PPS = 0x10
    'RB4->MSSP:SDA
    SSPDATPPS = 0x0C
    'RB6->MSSP:SCL
    SSPCLKPPS = 0x0E

    LOCKPPS
End Sub

' ----- Define Hardware settings
' Define I2C settings - CHANGE PORTS if required
#DEFINE HI2C_BAUD_RATE 400
#DEFINE HI2C_DATA PORTC.1
#DEFINE HI2C_CLOCK PORTC.0
'Initialise I2C Slave
'I2C pins need to be input for SSP module
Dir HI2C_DATA In
Dir HI2C_CLOCK In
'MASTER
HI2CMode Master

' THIS CONFIG OF THE SERIAL PORT WORKS WITH A  MAX232 (or equiv) THEN TO PC
' USART settings - CHANGE PORTS if required
#DEFINE USART_BAUD_RATE 9600
Dir PORTb.7 Out
Dir PORTb.5 In
#DEFINE USART_TX_BLOCKING
Wait 500 ms


Dim DISPLAYNEWLINE As Byte


' ----- Main body of program commences here.
' Now assumes Serial Terminal is operational
Dim DeviceID As Byte

HSerPrintCRLF
HSerPrint "Hardware I2C "
HSerPrintCRLF 2

' Now assumes Serial Terminal is operational
HSerPrintCRLF
HSerPrint "   "
'Create a horizontal row of numbers
For DeviceID = 0 To 15
    HSerPrint Hex(deviceID)
    HSerPrint " "
Next

'Create a vertical column of numbers
For DeviceID = 0 To 255
    DisplayNewLine = DeviceID % 16
    If DisplayNewLine = 0 Then
        HSerPrintCRLF
        HSerPrint Hex(DeviceID)
        If DisplayNewLine > 0 Then
            HSerPrint " "
        End If
    End If
    HSerPrint " "

    'Do an initial Start
    HI2CStart
    If HI2CWaitMSSPTimeout <> TRUE Then

        'Send to address to device
        HI2CSend ( deviceID )

        'Did device fail to respond?
        If HI2CAckpollState = FALSE Then
            HI2CSend ( 0 )
            HSerPrint   Hex(deviceID)
        Else
            HSerPrint "--"
        End If

        'Do a stop.
        HI2CStop

    End If

Next

HSerPrintCRLF 2
HSerPrint   "End of Search"
HSerPrintCRLF 2
Wait 1 s
End


' ----- Support methods.  Subroutines and Functions
