'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program reads the value of a DS18B20 connected to Portc.3.  The DS18B20 must be setup to correctly.
'''This program shows an LCD being driven using an LCD I2C adapter.
'''Two types are supported as shown below:
''':    Set LCD_10 to 10 for the YwRobot LCD1602 IIC V1 or the Sainsmart LCD_PIC I2C adapter
''':    Set LCD_10 to 12 for the Ywmjkdz I2C adapter with pot bent over top of chip
'''@author 	EvanV
'''@licence	GPL
'''@version	1.0a
'''@date   	20.02.15
'''********************************************************************************

' ----- Configuration
#CHIP mega328p, 16
#OPTION Explicit
#INCLUDE <ds18b20.h>

' ----- Define Hardware settings
' Define I2C settings - CHANGE PORTS
#DEFINE I2C_MODE Master
#DEFINE I2C_DATA PORTC.4
#DEFINE I2C_CLOCK PORTC.5
#DEFINE I2C_DISABLE_INTERRUPTS On

'''Set up LCD
#DEFINE LCD_IO 10

' ----- Constants
' DS18B20 port settings - this is required
#DEFINE DQ PortC.3

' ----- Quick Command Reference:

'''Set LCD_10 to 10 for the YwRobot LCD1602 IIC V1 or the Sainsmart LCD_PIC I2C adapter
'''Set LCD_10 to 12 for the Ywmjkdz I2C adapter with pot bent over top of chip

' ----- Variables
' a variabler to handle the temperature calculations
Dim TempC_100 As Word
Dim CCOUNT, SIGNBIT, WHOLE, FRACT, DIG As Byte


' ----- Main body of program commences here.

ccount = 0
CLS
Print "GCBasic 2019"
Locate 1,0
Print "DS18B20 Demo"
Wait 2 s
CLS

Do Forever
    ' The function readtemp returns the integer value of the sensor
    DSdata = ReadTemp

    ' Display the integer value of the sensor on the LCD
    Locate 0,0
    Print Hex(ccount)
    Print " Ceil"
    Locate 0,8
    Print DSdata
    Print CHR(223)+"C"



    ' Display the integer and decimal value of the sensor on the LCD

    ' The function readtemp12 returns the raw value of the sensor.
    ' The sensor is read as a 12 bit value therefore each unit equates to 0.0625 of a degree
    DSdata = ReadTemp12
    SignBit = DSdata / 256 / 128
    If SignBit = 0 Then Goto Positive
    ' its negative!
    ' take twos comp
    DSdata = ( DSdata # 0xffff ) + 1

Positive:

    ' Convert value * 0.0625. Mulitple value by 6 then add result to multiplication of the value with 25 then divide result by 100.
    TempC_100 =  DSdata * 6
    DSdata = ( DSdata * 25 ) / 100
    TempC_100 = TempC_100 + DSdata

    Whole = TempC_100 / 100
    Fract = TempC_100 % 100
    If SignBit = 0 Then Goto DisplayTemp
    Print "-"

DisplayTemp:
    Locate 1,0
    Print Hex(ccount)
    Print " Real"
    Locate 1,8
    Print Str(Whole)
    Print "."
    ' To ensure the decimal part is two digits
    Dig = Fract / 10
    Print Dig
    Dig = Fract % 10
    Print Dig
    Print CHR(223)
    Print "C"
    Wait 2 s
    ccount++

Loop
