'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program reads the value of a DS18B20 connected to a port.
'''The DS18B20 must be setup to correctly.
'''The serial connection must be to the hardware RX port and to a common ground.
'''The receiving serial terminal must be set to 9600 bps.n.
'''@author  EvanV plus works of others
'''@licence GPL
'''@version 1.0a
'''@date    04.02.2018
'''********************************************************************************

' ----- Configuration
#CHIP 16f690, 16
#OPTION Explicit
#INCLUDE <ds18b20mulltiport.h>

' ----- Define Hardware settings
'Config UART
#DEFINE USART_BLOCKING
#DEFINE USART_BAUD_RATE 9600

' ----- Constants
' DS18B20 port settings
#DEFINE DQ1 PortA.1
#DEFINE DQ2 PortA.0

' ----- Variables
'TempC_100 required to support temp sensor
Dim TempC_100 As Word
Dim CCOUNT, SIGNBIT, WHOLE, FRACT, DIG As Byte

' ----- Main body of program commences here.
ccount = 1

'Serial print a start message
HSerPrintCRLF 2
HSerPrint "Temperature Sensor"
HSerPrintCRLF 2

Dim dqErrorCheck As Byte

Do Forever

' The readtempfromPort method returns the integer value of the sensor in readTemp and raw data is readTemp
    #DEFINE DS18B20MaxReads 3
    dqErrorCheck=0
    Do
        'readTemp and readTemp12 is now set.. or, should be set.
        readtempfromPort ( DQ1 )
        If DS18B20DeviceReadBusy = TRUE Then
            dqErrorCheck++
        Else
            Exit Do
        End If
        'to ensure this IS NOT BLOCKING
    Loop While dqErrorCheck <> DS18B20MaxReads

    If DS18B20DeviceReadBusy = TRUE  Then
        HSerPrint "Error Reading DS18B20"
        HSerSend 9
    End If

    'Serial print the event count
    HSerPrint Hex(ccount)
    HSerPrint "> Port1: "
    'Serial print a tab
    HSerSend 9
    ' Serial print the integer value of the sensor
    HSerPrint ReadTemp
    'Serial print a special character
    HSerPrint CHR(0xB0)+"C"
    HSerSend 9

    ' The readtempfromPort method returns the integer value of the sensor in readTemp
    dqErrorCheck=0
    Do
        'readTemp and readTemp12 is now set.. or, should be set.
        readtempfromPort ( DQ2 )
        If DS18B20DeviceReadBusy = TRUE Then
            dqErrorCheck++
        Else
            Exit Do
        End If
        'to ensure this IS NOT BLOCKING
    Loop While dqErrorCheck <> DS18B20MaxReads

    If DS18B20DeviceReadBusy = TRUE  Then
        HSerPrint "Error Reading DS18B20"
        HSerSend 9
    End If

    'Serial print the event count
    HSerPrint Hex(ccount)
    HSerPrint "> Port2: "
    'Serial print a tab
    HSerSend 9
    ' Serial print the integer value of the sensor
    HSerPrint ReadTemp
    'Serial print a special character
    HSerPrint CHR(0xB0)+"C"

    HSerSend 9

' Now display the decimal value of the last sensor read using readTemp12 variable

    ' The method readtempfromPort returns the raw value of the sensor as readTemp12.
    ' The sensor is read as a 12 bit value therefore each unit equates to 0.0625 of a degree
    DSdata = ReadTemp12
    SignBit = DSdata / 256 / 128
    If SignBit = 0 Then Goto Positive
    ' its negative!
    ' take twos comp
    DSdata = ( DSdata # 0xffff ) + 1

Positive:

    ' Convert value * 0.0625. Mulitple value by 6 then add result to multiplication of the value with 25 then divide result by 100.
    TempC_100 =  DSdata * 6
    DSdata = ( DSdata * 25 ) / 100
    TempC_100 = TempC_100 + DSdata

    Whole = TempC_100 / 100
    Fract = TempC_100 % 100
    If SignBit = 0 Then Goto DisplayTemp
    HSerPrint "-"

DisplayTemp:
    HSerPrint Str(Whole)
    HSerPrint "."
    ' To ensure the decimal part is two digits
    Dig = Fract / 10
    HSerPrint Dig
    Dig = Fract % 10
    HSerPrint Dig
    HSerPrint CHR(0xB0)
    HSerPrint "C"
    HSerPrintCRLF

    Wait 2 s

    ccount++
Loop
