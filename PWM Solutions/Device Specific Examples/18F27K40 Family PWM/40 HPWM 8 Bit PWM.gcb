'''A demonstration program for GCGB and GCB.
'''The program shows PWM options for this device
''':
'''This demonstration how use the PWM Module in 8-bit mode but with this method you can change the parameters.
'''To use in 8-bit mode simply pass a byte variable.
''':
'''You can make the ASM smaller, adapt the PWM Optimisation!!
'''
'''@author  EvanV
'''@licence GPL
'''@version 1.0a
'''@date    23.08.2018
'''*************************************************************************

    'Chip Settings
    #chip 18F27K40, 64

    'Generated by PIC PPS Tool for Great Cow Basic
    'PPS Tool version: 0.0.5.20
    'PinManager data: v1.65.2
    'Generated for 18F27K40
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 18F27K40

    Sub InitPPS

            'Module: PWM3
            RC5PPS = 0x0007    'PWM3 > RC5
'            'Module: PWM4
'            RC3PPS = 0x0008    'PWM4 > RC3

    End Sub
    'Template comment at the end of the config file

  #define DisableCCPFixedModePWM
    'Set the direction all the ports out - just for ease.
    DIR porta Out
    DIR portc Out

    do
        'use for-loop to show the duty changing a 8bit value
        dim dutyvalue as byte
        for dutyvalue = 0 to 255
            HPWM 3, 28, dutyvalue, 2
            wait 10 ms
        next

    loop

end

''' GCB Optimisation file

'Optmise PWM.h
    #define USE_HPWMCCP1 true
    #define USE_HPWMCCP2 true
    #define USE_HPWMCCP3 false
    #define USE_HPWMCCP4 false
    #define USE_HPWMCCP5 false

    #define USE_HPWM5 false
    #define USE_HPWM6 false
    #define USE_HPWM7 false

    #define USE_HPWM_TIMER2 true
    #define USE_HPWM_TIMER4 true
    #define USE_HPWM_TIMER6 true
    #define USE_HPWM_TIMER7 false

'Optimise A-d.h
    'Standard family chips
    #define USE_AD0 false
    #define USE_AD1 false
    #define USE_AD2 false
    #define USE_AD2 false
    #define USE_AD3 false
    #define USE_AD4 false
    #define USE_AD5 false
    #define USE_AD6 false
    #define USE_AD7 false
    #define USE_AD8 false
    #define USE_AD9 false
    #define USE_AD10 false
    #define USE_AD11 false
    #define USE_AD12 false
    #define USE_AD13 false
    #define USE_AD14 false
    #define USE_AD15 false
    #define USE_AD16 false
    #define USE_AD17 false
    #define USE_AD18 false
    #define USE_AD19 false
    #define USE_AD20 false
    #define USE_AD21 false
    #define USE_AD22 false
    #define USE_AD23 false
    #define USE_AD24 false
    #define USE_AD25 false
    #define USE_AD26 false
    #define USE_AD27 false
    #define USE_AD28 false
    #define USE_AD29 false
    #define USE_AD30 false
    #define USE_AD31 false
    #define USE_AD32 false
    #define USE_AD33 false
    #define USE_AD34 false

    'Family of chips based on 16f1688x with ADCON3 register
    #define USE_ADA0 false
    #define USE_ADA1 false
    #define USE_ADA2 false
    #define USE_ADA3 false
    #define USE_ADA4 false
    #define USE_ADA5 false
    #define USE_ADA6 false
    #define USE_ADA7 false
    #define USE_ADB0 false
    #define USE_ADB1 false
    #define USE_ADB2 false
    #define USE_ADB3 false
    #define USE_ADB4 false
    #define USE_ADB5 false
    #define USE_ADB6 false
    #define USE_ADB7 false
    #define USE_ADC0 false
    #define USE_ADC1 false
    #define USE_ADC2 false
    #define USE_ADC3 false
    #define USE_ADC4 false
    #define USE_ADC5 false
    #define USE_ADC6 false
    #define USE_ADC7 false
    #define USE_ADD0 false
    #define USE_ADD1 false
    #define USE_ADD2 false
    #define USE_ADD3 false
    #define USE_ADD4 false
    #define USE_ADD5 false
    #define USE_ADD6 false
    #define USE_ADD7 false
    #define USE_ADE0 false
    #define USE_ADE1 false
    #define USE_ADE2 false
