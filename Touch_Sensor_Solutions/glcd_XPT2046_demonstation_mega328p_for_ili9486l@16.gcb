'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a GLCD demonstration maps the #1 character for the OLED font 1
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''@author  EvanV
'''@licence GPL
'''@version 1.0
'''@date    05.01.17
'''********************************************************************************
'Chip Settings.
#CHIP mega328p, 16
#OPTION Explicit

#INCLUDE <glcd.h>
#INCLUDE <uno_mega328p.h >
#INCLUDE <xpt2046.h>

#DEFINE GLCD_TYPE GLCD_TYPE_ILI9486L


'Pin mappings for SPI - this GLCD driver supports Hardware SPI and Software SPI
' Data command line
#DEFINE GLCD_DC       DIGITAL_8
' Chip select line
#DEFINE GLCD_CS       DIGITAL_10
' Reset line
#DEFINE GLCD_RST      DIGITAL_9

' Data in | MISO
#DEFINE GLCD_DI       DIGITAL_12
' Data out | MOSI
#DEFINE GLCD_DO       DIGITAL_11
' Clock Line
#DEFINE GLCD_SCK      DIGITAL_13

' remove/comment out if you want to use software SPI.
#DEFINE ILI9486L_HardwareSPI
'Optionally, you can define the HWSPIMode by using #define HWSPIMode masterfast where #define HWSPIMode is masterslow|master|masterfast
'This will overwrite the default in the GLCD library.  This is so users do not have to change the library.
'the default is "masterfast"
'The following example is commented out intentionally
'#define HWSPIMode masterfast

'End of GLCD specific setup
'*****************************************************************************************
'Setup the XPT2046

'Typical calibration range for Hardware SPI when using XPT2046
'for 320 * 240 screeen... may be different for others
#DEFINE XPT2046XMIN   12
#DEFINE XPT2046YMIN   12
#DEFINE XPT2046XMAX   108
#DEFINE XPT2046YMAX   117
#DEFINE XPT2046_ReadSamples 100

'Typical Calibration range for Software SPI when using XPT2046
'    #define XPT2046XMIN   30
'    #define XPT2046YMIN   25
'    #define XPT2046XMAX   210
'    #define XPT2046YMAX   225


' Data in | MISO
#DEFINE XPT2046_DI       DIGITAL_12
' Data out | MOSI
#DEFINE XPT2046_DO       DIGITAL_11
' Clock Line
#DEFINE XPT2046_SCK      DIGITAL_13
' Chip select line
#DEFINE XPT2046_CS       DIGITAL_2
#DEFINE XPT2046_IRQ      ANALOG_5
' remove/comment out if you want to use software SPI - must use same method as GLCD
#DEFINE XPT2046_HardwareSPI
'Optionally, you can define the HWSPIMode by using #define HWSPIMode masterfast where #define HWSPIMode is masterslow|master|masterfast
'This will overwrite the default in the XPT2046 library.  This is so users do not have to change the library.
'the default is "masterfast"
'The following example is commented out intentionally
'#define HWSPIMode masterfast



'Set the initial calibration - shown here to show the method
SetCalibation_XPT2046 ( XPT2046XMIN, XPT2046XMAX, XPT2046YMIN, XPT2046YMAX, GLCD_WIDTH, GLCD_HEIGHT )


'******************************************************************************************************
'Main program
GLCDCLS TFT_NAVY
ScreenLayout

Dim Xconverge, Yconverge As Integer
Dim convergeCounter As Byte
Do

    Xconverge = 0
    Yconverge = 0
    convergeCounter = 1

    FilledBox Current_GLCD_WIDTH, 0, Current_GLCD_WIDTH-10, 10, TFT_RED
    'always wait for touch event
    Wait While isTouched_XPT2046
    FilledBox Current_GLCD_WIDTH, 0, Current_GLCD_WIDTH-10, 10, TFT_YELLOW
    Do
        Repeat 5
            'get the values -
            GetXY_XPT2046( XTouchPoint_XPT2046, YTouchPoint_XPT2046 )
        End Repeat
        'test for settling by testing for convergance
        If ABS( ( Xconverge - XTouchPoint_XPT2046 ) ) > 1  OR  ABS( ( Yconverge - YTouchPoint_XPT2046 ) ) > 1  Then
            Xconverge = XTouchPoint_XPT2046
            Yconverge = YTouchPoint_XPT2046
            convergeCounter++
        Else
            'converged
            Exit Do
        End If
    Loop
    'Flip the data to handle for the screen rotation
    YTouchPoint_XPT2046 = Current_GLCD_HEIGHT - YTouchPoint_XPT2046
    FilledBox Current_GLCD_WIDTH, 0, Current_GLCD_WIDTH-10, 10, TFT_GREEN
    If XTouchPoint_XPT2046 > Current_GLCD_WIDTH-59 AND YTouchPoint_XPT2046 > Current_GLCD_HEIGHT-20  Then
        If XTouchPoint_XPT2046 < Current_GLCD_WIDTH AND  YTouchPoint_XPT2046 < Current_GLCD_HEIGHT Then
            'clear
            ScreenLayout
        End If
    Else

        FilledCircle XTouchPoint_XPT2046, YTouchPoint_XPT2046, 3, TFT_LIGHTGREY

        'Show the raw data
        GLCDPrint ( 24, 56, Pad(Str(XTouchPoint_XPT2046raw),3 ) )
        GLCDPrint ( 24, 72, Pad(Str(YTouchPoint_XPT2046raw),3 ) )
        GLCDPrint ( 24, 90, Pad(Str(convergeCounter ) ,3 ) )

        'Automatically adjust the values to min and max
        'Not needed in a real program use SetCalibation_XPT2046( XPT2046_Xmin, XPT2046_Xmax, XPT2046_Ymin, XPT2046_Ymax )
        If XTouchPoint_XPT2046raw < XPT2046_Xmin Then XPT2046_Xmin = XTouchPoint_XPT2046raw
        If YTouchPoint_XPT2046raw < XPT2046_Ymin Then XPT2046_Ymin = YTouchPoint_XPT2046raw
        If XTouchPoint_XPT2046raw > XPT2046_Xmax Then XPT2046_Xmax = XTouchPoint_XPT2046raw
        If YTouchPoint_XPT2046raw  > XPT2046_Ymax Then XPT2046_Ymax = YTouchPoint_XPT2046raw

        'show the values
        GLCDPrint ( 102, 56, Pad(Str(XPT2046_Xmin),3 ) )
        GLCDPrint ( 102, 72, Pad(Str(XPT2046_Ymin),3 ) )
        GLCDPrint ( 162, 56, Pad(Str(XPT2046_Xmax),3 ) )
        GLCDPrint ( 162, 72, Pad(Str(XPT2046_Ymax),3 ) )

        GLCDPrint ( 24, 230, Pad(Str(XTouchPoint_XPT2046),5 ))
        GLCDPrint ( 24, 246, Pad(Str(YTouchPoint_XPT2046),5 ))

        'do not hammer the touch
        Wait 20 ms

    End If

Loop



Sub ScreenLayout

    #DEFINE GLCD_OLED_FONT
    GLCDfntDefaultSize = 2
    GLCDFontWidth = 5
    'Layout the screen
    GLCDCLS
    GLCDPrint ( 2, 3, "XPT2046 demonstration 2019")
    Line 0, 34, Current_GLCD_WIDTH, 34
    Line 0, 128, Current_GLCD_WIDTH, 128
    Line 0, 220, Current_GLCD_WIDTH, 220
    GLCDPrint ( 2, 25, "Dynamic Calibration")
    GLCDPrint ( 22, 40, "Raw    Min   Max")
    GLCDPrint ( 2, 56, "X:")
    GLCDPrint ( 2, 72, "Y:")
    GLCDPrint ( 2, 122, "Current Calibration")
    GLCDPrint ( 2, 146, "X:")
    GLCDPrint ( 2, 162, "Y:")
    GLCDPrint ( 102, 146, Pad(Str(XPT2046_Xmin),3 ) )
    GLCDPrint ( 102, 162, Pad(Str(XPT2046_Ymin),3 ) )
    GLCDPrint ( 162, 146, Pad(Str(XPT2046_Xmax),3 ) )
    GLCDPrint ( 162, 162, Pad(Str(XPT2046_Ymax),3 ) )
    GLCDPrint ( 2, 214, "Scaled")
    GLCDPrint ( 2, 230, "X:")
    GLCDPrint ( 2, 246, "Y:")
    GLCDPrint ( 2, 90, "C:")

    GLCDPrint ( 120, 214, "GLCD Size")
    GLCDPrint ( 120, 230, "X:" + Str( Current_GLCD_WIDTH ) )
    GLCDPrint ( 120, 246, "Y:" + Str( Current_GLCD_HEIGHT ) )


    GLCDfntDefaultSize = 1
    GLCDPrint ( 2, Current_GLCD_HEIGHT-17, "v0.9c")
    GLCDfntDefaultSize = 2

    FilledBox Current_GLCD_WIDTH, 0, Current_GLCD_WIDTH-10, 10, TFT_RED

    Dim oldGLCDBackground As Word
    oldGLCDBackground = GLCDBackground
    GLCDBackground = TFT_WHITE
    GLCDPrint ( Current_GLCD_WIDTH-58, Current_GLCD_HEIGHT-18, "Clear", TFT_BLACK )
    GLCDBackground = oldGLCDBackground

    ' ------ Version Control - optional
    #INCLUDE "GCBVersionNumber.cnt"
    'Include the GCBVersionNumber.cnt to increment versionString and create the build time string called GCBBuildTimeStr.
    ' versionString a string is created automatically.
    ' GCBBuildTimeStr is a string that is also created automatically.
    ' use "GCBVersionNumber.cnt" as this will create a local copy of the versionString tracker.
    ' if you use <GCBVersionNumber.cnt> this is a system wide versionString tracker.

    Dim versionString As String * 40
    versionString = "Build: "+GCBBuildStr
    versionString = versionString + "@"+GCBBuildTimeStr
    GLCDfntDefaultSize = 1
    GLCDPrint ( 2, Current_GLCD_HEIGHT-10, versionString)
    GLCDfntDefaultSize = 2
    ' ------ End of Version Control - optional
End Sub
