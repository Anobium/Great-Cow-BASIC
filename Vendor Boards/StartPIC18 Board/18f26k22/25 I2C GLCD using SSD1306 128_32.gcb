'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the SSD1306 GLCD capabilities.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The SSD1306 controller a small graphical OLED, suitable for a lot of various projects.
'''The display is 38*17 mm, with an active display surface of 0.96inches , and a 128*32 pixel resolution.
'''The display is easy to interface, using an I2C type of communication.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''
'''This version is compatible will all version of Great Cow BASIC but only version greater than v0.98.00 support low memory GLCD modes.
'''
'''@author  EvanV
'''@licence GPL
'''@version 2.1
'''@date    27.8.17
'''************************************************************************
'''
'''  PIC: 18f26k22
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: SmartPIC 18 Board
'''  Date: 29.8.17
'''
' ----- Configuration
    'Chip Settings.
    #chip 18f26k22, 16
    #config mclre=on
    #option Explicit

    '' -------------------PORTA----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---------------------------------
    ''-----------------------------------------
    ''

    '' -------------------PORTB----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    -------| O | A |-------| O | I |-
    ''-----------------------------------------
    ''

    '' ------------------PORTC-----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---| TX|---|SDA|CLK| X |---------
    ''-----------------------------------------
    ''

    #define LEDD1 PORTB.1
    #define LEDD2 PORTB.5
    #define Potentiometer   PORTC.5
    #define LDR             PORTB.4
    #define SwitchIn        PORTB.0
    #define LCDControl      PORTC.2

    Dir     LEDD1         Out
    Dir     LEDD2         Out
    Dir     Potentiometer In   'this is the AN17 port
    Dir     LDR           In   'this is the AN11 port
    Dir     SwitchIn      In
    Dir     LCDControl    Out

    'Always set the LCD on (high) to Shut OFF the LCD-Backlight. This is required when powered from a PicKit.
    LCDControl = 1

    '*****************************************************************************************************
    'Main program commences here.. everything before this is setup for the board.

    ' Define I2C settings
    #define HI2C_BAUD_RATE 400
    #define HI2C_DATA PORTC.4
    #define HI2C_CLOCK PORTC.3
    'Initialise I2C Slave
    'I2C pins need to be input for SSP module - this is not an option
    Dir HI2C_DATA in
    Dir HI2C_CLOCK in
    'MASTER
    HI2CMode Master


    #include <glcd.h>
    #define GLCD_TYPE GLCD_TYPE_SSD1306_32
    #define GLCD_I2C_Address 0x78

; ----- Define variables

    'These constants allow you to change the GLCD memory usage.
    'We have set this demonstration to use only 128bytes of RAM for GLCD operations.
    #define GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
    #define GLCD_TYPE_SSD1306_CHARACTER_MODE_ONLY
    #define GLCD_PROTECTOVERRUN

    Dim BYTENUMBER, CCOUNT as Byte

    CCount = 0
    dim longNumber as long
    longNumber = 0 ' max value = 4294967290
    dim wordNumber, adcval, ldrval as Word
    dim outstring as string
    wordNumber = 0
    byteNumber = 0

    Dir PORTB.1 Out
    Dir PORTB.5 Out
    DIR PORTB.0 In

  ; ----- Main program

      #ifdef GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
        GLCD_Open_PageTransaction 0,3
      #endif

          GLCDPrint 0, 0,   "Great Cow BASIC"
          GLCDPrint (0, 16, "Anobium 2017")
          GLCDPrint (76, 16, GLCD_WIDTH )
          GLCDPrint (96, 16, "*" )
          GLCDPrint (104, 16, GLCD_HEIGHT )

      #ifdef GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
        GLCD_Close_PageTransaction
      #endif

    wait 3 s
    GLCDCLS

      #ifdef GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
        GLCD_Open_PageTransaction 0, 3
      #endif

          GLCDPrint 0, 0,   "Version 0.98.00"


          #ifdef GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
              GLCDPrint (0, 16, "LM GLCD MODE")
          #endif

          #ifndef GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
              GLCDPrint (0, 16, "FULL GLCD MODE")
          #endif


      #ifdef GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
        GLCD_Close_PageTransaction
      #endif

    wait 3 s
    GLCDCLS


    DO forever

       for CCount = 31 to 127

            outString = str( CCount )                                  ; Prepare a string
            adcval = readad ( an17 )
            ldrval = readad ( an11 )

            SetContrast ( ldrval )
            ' Prepare the static components of the screen
            #ifdef GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
              GLCD_Open_PageTransaction 0,3
            #endif

              GLCDPrint ( 1,   1, "PrintStr")                                ; Print some text
              GLCDPrint ( 64,  1, "@")                                    ; Print some more text
              GLCDPrint ( 72,  1, ChipMhz)                                   ; Print chip speed
              GLCDPrint ( 86, 1, "Mhz")                                     ; Print some text
              GLCDDrawString( 1,11,"DrawStr")                                 ; Draw some text
              box 0,0,GLCD_WIDTH-1, GLCD_HEIGHT-1                            ; Draw a box
              box GLCD_WIDTH-5, GLCD_HEIGHT-5,GLCD_WIDTH-1, GLCD_HEIGHT-1    ; Draw a box
              Circle( 44,24,5)                                              ; Draw a circle
              line 0,GLCD_HEIGHT-1,44,19                                    ; Draw a line

              GLCDPrint ( 75 ,  20,  "ADC:"+pad(str(adcval),4 ) )
              GLCDPrint ( 75 ,  11,  "LDR:"+pad(str(ldrval),4 ) )

              box (3,24,6,27)                                           ; Draw a Box

              GLCDDrawString(44, 11, chr(CCount)+"="+pad(outString,3) )                   ; Draw a string

              Ellipse 118, 6, 7, 4
              if ldrval > adcval then
                FilledEllipse 118, 6, 5, 2
              else
                FilledEllipse 118, 6, 5, 2, GLCDBackground
              end if

          #ifdef GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
            GLCD_Close_PageTransaction
          #endif

          longNumber = longNumber + 7


        NEXT
    LOOP
    end
