'''
'''******************************************************************
'''
'''  Timer0 is a counter implemented in the processor. It may be used to count instruction
'''  cycles or external events, that occur at or below the instruction cycle rate.
'''  In the PIC18, Timer0 can be used as either an 8-bit or 16-bit counter, or timer. The
'''  enhanced mid-range core implements only an 8-bit counter.
'''
'''  This lesson configures Timer0 to count instruction cycles and to set a flag when it rolls
'''  over. This frees up the processor to do meaningful work rather than wasting instruction
'''  cycles in a timing loop.
'''  Using a counter provides a convenient method of measuring time or delay loops as it
'''  allows the processor to work on other tasks rather than counting instruction cycles.
'''
'''
'''************************************************************************
'''
'''  PIC: 18f25k22
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: SmartPIC 18 Board
'''  Date: 29.8.17
'''
' ----- Configuration
    'Chip Settings.
    #chip 18f25k22, 16
    #option Explicit


    '' -------------------PORTA----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---|RS |RW | E |D7 |D6 |D5 |D4
    ''-----------------------------------------
    ''

    '' -------------------PORTB----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    -------| O | A |-------| O | I |-
    ''-----------------------------------------
    ''

    '' ------------------PORTC-----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---| TX| A |-------| X |---------
    ''-----------------------------------------
    ''


    #define LEDD1 PORTB.1
    #define LEDD2 PORTB.5
    #define Potentiometer   PORTC.5
    #define SwitchIn        PORTB.0
    #define LCDControl      PORTC.2

    Dir     LEDD1         Out
    Dir     LEDD2         Out
    Dir     Potentiometer In   'this is the AN17 port
    Dir     SwitchIn      In
    Dir     LCDControl    Out

    'Always set the LCD on (high) to Shut OFF the LCD-Backlight. This is required when powered from a PicKit.
    LCDControl = 1

    '*****************************************************************************************************
    'Main program commences here.. everything before this is setup for the board.



    'Setup the timer.
    'params    Source, Prescaler
    InitTimer0 Osc, PS0_256

    ' Start the Timer by writing to TMR0ON bit
    StartTimer 0

    ' Set the Timer start value
    SetTimer ( 0, 0x64 )

    'Set the LED states
    LEDD1 = 0
    LEDD2 = 1

    dim TimerCounter as byte 'we will use this to count the number of times the event happens
    TimerCounter = 0

    do
            'wait for the event
            wait while TMR0IF = 0
            ' Clearing Timer flag will reset event
            TMR0IF = 0

            TimerCounter = TimerCounter + 1

            'when at 100 we are at 1 s
            if TimerCounter = 100 then

              'Set the LED states
              LEDD1 = !LEDD1
              LEDD2 = !LEDD2

              'restart our event counter
              TimerCounter = 0

             end if

            ' Set the Timer start value
            SetTimer ( 0, 0x64 )

        loop
