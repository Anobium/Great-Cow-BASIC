'''
''' This demonstration uses a simple software routine to avoid the initial noise on the switch
''' pin. The code will inspect the switch status, but should overcome most of the noise from a switch.
'''  Some switches are worse than others.
'''
''' When the switch is held down, one LED will be lit. When the switch is not held down, the other will be lit.
'''
'''
'''************************************************************************
'''
'''  PIC: 18f25k22
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: SmartPIC 18 Board
'''  Date: 29.8.17
'''
' ----- Configuration
    'Chip Settings.
    #chip 18f25k22, 16
    #option Explicit

    '' -------------------PORTA----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---------------------------------
    ''-----------------------------------------
    ''

    '' -------------------PORTB----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    -------| O | ----------| O | I |-
    ''-----------------------------------------
    ''

    '' ------------------PORTC-----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    -------------------| X |---------
    ''-----------------------------------------
    ''


    #define LEDD1 PORTB.1
    #define LEDD2 PORTB.5
    #define Potentiometer   PORTC.5
    #define SwitchIn        PORTB.0
    #define LCDControl      PORTC.2

    Dir     LEDD1         Out
    Dir     LEDD2         Out
    Dir     Potentiometer In   'this is the AN17 port
    Dir     SwitchIn      In
    Dir     LCDControl    Out

    'Always set the LCD on (high) to Shut OFF the LCD-Backlight. This is required when powered from a PicKit.
    LCDControl = 1

    '*****************************************************************************************************
    'Main program commences here.. everything before this is setup for the board.

     dim lastKeyDown as Byte

    'Debouncing a switch

      Do forever
                wait 10 ms

                if  keyPressed( lastKeyDown ) = true then

                    'push button pressed
                    LEDD1 = !LEDD1

                end if

      loop


  function  keyPressed ( in lastKeyDown )

      dim actKeyDown as byte

        if ( !SwitchIn ) then

            actKeyDown = true

        else

            actKeyDown = false

        end if

        if (actKeyDown <> lastKeyDown) then
            lastKeyDown = actKeyDown
            keyPressed =  actKeyDown
        else
            keyPressed = false
        end if



  end function
