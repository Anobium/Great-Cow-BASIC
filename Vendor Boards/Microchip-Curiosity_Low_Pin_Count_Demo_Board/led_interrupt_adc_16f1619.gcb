'''Program    led_interrupt_adc_16f1619
'''Compiler   gcbasic v0.98.02 2018-05-16 (UNIX)
'''
'''Microchip Curiosity 8/14/20 pin 8 bit demo board
'''o PIC16F1619 (http://microchip.com/pic16f1619)
'''o LEDs D4-D7 on RA5, RA1/PGEC, RA2, RC5
'''o Switch S1 on RC4
'''o Switch S2 on RA3/MCLRE
'''o Potentiometer POT1 on RC0/AN4
'''
'''On startup LEDs D4-D7 light up and extinguish
'''LED D4 flashes
'''Changing POT1 varies speed at which LED D4 flashes
'''Pressing and releasing S1 toggles LED D1 on/off
'''
'''@author  Trevor B Roydhouse
'''@licence Public Domain Unlicense (see https://unlicense.org/)
'''@version 1.0
'''@date    24 August 2018 
'''***************************************************************************************

; ---- Configuration

'Microcontroller @ 32MHz
#chip 16F1619, 32

'Use the internal oscillator
#config OSC = INTOSC

'MCLRE set on so that switch S2 can reset microcontroller
#config MCLRE_ON

'Ensure LVP is enabled to allow use of onboard programmer
#config LVP_ON

'Ensure all variables are explicitly defined
#option explicit

; ---- Define hardware settings

#define S1 PORTC.4
Dir S1 In

#define Led1 PORTA.5
DIR PORTA.5 OUT

#define Led2 PORTA.1
DIR PORTA.1 OUT

#define Led3 PORTA.2
DIR PORTA.2 OUT

#define Led4 PORTC.5
DIR PORTC.5 OUT

#define POT1 AN4
DIR PORTC.0 IN

'Enable interrupt for S1 pin (RC4) with positive going edge
'- generates interrupt on S1 release, not S1 press
Set IOCCP4 ON

; ---- Constants

'minimum delay in ms
#define minMsDelay 80

'startup wait in seconds
#define waitSecs 1

; ---- Variables

Dim ADCvalueWord as Word

; ---- Main body of program

'On S1 pin RC4 interrupt, call PortChanged subroutine
On Interrupt PortChange Call PortChanged

'Enable interrupts
INTON

'LED init on program startup
WAIT waitSecs S
Set LED1 = 1
Set LED2 = 1
Set LED3 = 1
Set LED4 = 1
WAIT waitSecs S
Set LED1 = 0
Set LED2 = 0
Set LED3 = 0
Set LED4 = 0

'Program loop
DO FOREVER
   'Read ADC
   ADCvalueWord = ReadAD12(POT1)
   'preserve minMsDelay delay
   if ADCvalueWord < minMsDelay then ADCvalueWord = minMsDelay

   'Flash LED
   Set LED1 = 1
   Wait ADCvalueWord MS
   Set LED1 = 0
   Wait ADCvalueWord MS
LOOP

; ---- Subroutines

'Interrupt subroutine called when pin RC4 changes
' - note: you would normally need to check which
'   port pin caused this subroutine to be entered
'   but in this program we have only enabled an
'   interrupt for one pin, so we can omit the check
Sub PortChanged
    'Disable interrupts
    INTOFF

    'Clear RC4 Interrupt Flag
    SET IOCCF4 = 0

    'Debounce Switch S1 which is high until pressed
    wait while S1 = 0

    if LED4 = 0 then
       set LED4 = 1
    else
       set LED4 = 0
    end if

    'Re-enable interrupts
    INTON
End Sub
