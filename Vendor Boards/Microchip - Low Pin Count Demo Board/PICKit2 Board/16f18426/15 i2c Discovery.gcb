'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program searches for I2C devices and display their adresses to the attached PC terminal.
'''This program uses the hardware implementation of I2C for the Microchip microprocessors.
'''The microprocessor must have a suitable I2C module.
'''The hardware serial connections are shown in the program.
'''
''' Great Cow BASIC Header block Header block
'''
'''@author  Chris Roper
'''@licence GPL
'''@version 1.00
'''@date    03/05/2018
'''********************************************************************

; ----- Configuration
  #chip 16F18426, 32
  #option explicit

    'Generated by PIC PPS Tool for Great Cow Basic
    'PPS Tool version: 0.0.5.19
    'PinManager data: v1.65.2
    '
    #startup InitPPS, 85

    Sub InitPPS

            'Module: EUSART1
            RC2PPS = 0x000F    'TX1 > RC2
            'Module: MSSP1
            RC0PPS = 0x0013    'SCL1 > RC0
            SSP1CLKPPS = 0x0010    'RC0 > SCL1 (bi-directional)
            RC1PPS = 0x0014    'SDA1 > RC1
            SSP1DATPPS = 0x0011    'RC1 > SDA1 (bi-directional)

    End Sub



  'Config UART
  #define USART_BLOCKING
  #define USART_BAUD_RATE 19200
  wait 500 ms

  ' Define I2C settings - CHANGE PORTS TO MATCH PPS
  #define HI2C_BAUD_RATE 400
  #define HI2C_DATA PORTC.1
  #define HI2C_CLOCK PORTC.0
  'Initialise I2C Slave
  'I2C pins need to be input for SSP module
  Dir HI2C_DATA in
  Dir HI2C_CLOCK in
  'MASTER
  HI2CMode Master

  #define SWITCH_DOWN         0
  #define SWITCH_UP           1

  #define SWITCH      PORTA.3

; ----- Main body of program commences here.
  ' Now assumes Serial Terminal is operational
  dim DeviceID as byte
  Dim DISPLAYNEWLINE as Byte

 do
     HSerPrintCRLF 2
     HSerPrint "Hardware I2C "
     HSerPrint ChipNameStr
     HSerPrintCRLF

      ' Now assumes Serial Terminal is operational
      HSerPrintCRLF
      HSerPrint "   "
      'Create a horizontal row of numbers
      for DeviceID = 0 to 15
        HSerPrint hex(deviceID)
        HSerPrint " "
      next

      'Create a vertical column of numbers
      for DeviceID = 0 to 255
        DisplayNewLine = DeviceID % 16
        if DisplayNewLine = 0 Then
          HSerPrintCRLF
          HserPrint hex(DeviceID)
          if DisplayNewLine > 0 then
            HSerPrint " "
          end if
        end if
        HSerPrint " "

        'Do an initial Start
        HI2CStart
        if HI2CWaitMSSPTimeout <> True then

          'Send to address to device
          HI2CSend ( deviceID )

          'Did device fail to respond?
          if HI2CAckPollState = false then
            HI2CSend ( 0 )
            HSerPrint   hex(deviceID)
          Else
            HSerPrint "--"
          end if

          'Do a stop.
          HI2CStop
        Else
          'Some thing is not correct.... Clock or Data line disconnect?
          HSerPrint "! "
        end if

      next

      HSerPrintCRLF 2
      HSerPrint   "End of Search"
      HSerPrintCRLF 2
      wait 1 s
      wait while switch = On
  loop

; ----- Support methods.  Subroutines and Functions
