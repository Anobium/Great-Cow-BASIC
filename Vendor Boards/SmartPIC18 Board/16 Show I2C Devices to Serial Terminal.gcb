'''
'''************************************************************************
'''
'''  PIC: 18f26k22
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: Xpress Evaluation Board
'''  Date: 29.8.17
'''
' ----- Configuration
    'Chip Settings.
    #chip 18f26k22, 16

    '' -------------------LATB-----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' LED:   -------| X | ----------| X |-----
    ''-----------------------------------------
    ''

    '' ------------------PORTB-----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' SWITCH:---------------------------| X |-
    ''-----------------------------------------
    ''



    #define SWITCH_DOWN         0
    #define SWITCH_UP           1

    #define SWITCH      PORTB.0

    #define USART_BAUD_RATE 19200
    #define USART_TX_BLOCKING
    SCKP = 1

; ----- Define Hardware settings for hwi2c
    ' Define I2C settings
    #define HI2C_BAUD_RATE 400
    #define HI2C_DATA PORTC.4
    #define HI2C_CLOCK PORTC.3
    'Initialise I2C Slave
    'I2C pins need to be input for SSP module
    Dir HI2C_DATA in
    Dir HI2C_CLOCK in
    'MASTER
    HI2CMode Master

; ----- Main body of program commences here.
  ' Now assumes Serial Terminal is operational
  dim DeviceID as byte
  Dim DISPLAYNEWLINE as Byte

 do
    HSerPrintCRLF
    HSerPrint "Hardware I2C "
    HSerPrintCRLF 2

      ' Now assumes Serial Terminal is operational
      HSerPrintCRLF
      HSerPrint "   "
      'Create a horizontal row of numbers
      for DeviceID = 0 to 15
        HSerPrint hex(deviceID)
        HSerPrint " "
      next

      'Create a vertical column of numbers
      for DeviceID = 0 to 255
        DisplayNewLine = DeviceID % 16
        if DisplayNewLine = 0 Then
          HSerPrintCRLF
          HserPrint hex(DeviceID)
          if DisplayNewLine > 0 then
            HSerPrint " "
          end if
        end if
        HSerPrint " "

        'Do an initial Start
        HI2CStart
        if HI2CWaitMSSPTimeout <> True then

          'Send to address to device
          HI2CSend ( deviceID )

          'Did device fail to respond?
          if HI2CAckPollState = false then
            HI2CSend ( 0 )
            HSerPrint   hex(deviceID)
          Else
            HSerPrint "--"
          end if

          'Do a stop.
          HI2CStop
        Else
          HSerPrint "! "
        end if

      next

      HSerPrintCRLF 2
      HSerPrint   "End of Search"
      HSerPrintCRLF 2
      wait 1 s
      wait while switch = On
  loop

; ----- Support methods.  Subroutines and Functions
