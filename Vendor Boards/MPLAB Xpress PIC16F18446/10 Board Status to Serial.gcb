''' Great Cow BASIC demonstration
'''
''' This demonstration simply turns the LED on using the status of the switch AND sends the status to the USB CDC serial port!
'''
''' There is one yellow LED available on the MPLAB® Xpress PIC16F18446 board that can be turned ON
''' and OFF. The LED can be activated by driving the connected I/O line to GND.
'''
''' MPLAB® Xpress PIC16F18446 contains one mechanical button. This is a generic user configurable
''' button and when a button is pressed it will drive the I/O line to GND.
''' There is no pull-up resistor connected to the generic user button. So we enable
''' the internal pull-up in the PIC16F18446 to use the mechanical button.
'''
'''@author  Evan R. Venn
'''@licence GPL
'''@version 1.00
'''@date    30/06/2018
'''********************************************************************

    #chip 16F18446                   'Specify the Device you are compiling for - this board is the 16F18446
                                     'Great Cow BASIC simplifies the configuration by setting the frequency and the configuration for you.
    #option Explicit                 'This option ensures that all variables are dimensioned in the user program.  See http://gcbasic.sourceforge.net/help/__option_explicit.html

    #define LEDOn  = 0               'Set a constant.  The LED can be activated by driving the connected I/O line to GND, see section 3.3.2 of the MPLAB-Xpress-PIC16F18446-Evaluation-Board.pdf
    #define LEDOff = 1               'Set a constant.  The LED can be de-activated by driving the connected I/O line to the supply voltage, see section 3.3.2 of the MPLAB-Xpress-PIC16F18446-Evaluation-Board.pdf

    #define LED0 porta.2             'Set a constant to refer to the LED.  RA2 is a Yellow LED called LED0 Edge connector, see section 3.3.1 of the MPLAB-Xpress-PIC16F18446-Evaluation-Board.pdf
    dir LED0 out                     'Set LED as an output


    #define SW0 portc.2              'Set a constant to refer to the switch
    dir SW0 in                       'Set the switch as an input
    WPUC2 = 1                        'Enable weak pullup, see section 3.3.2 of the MPLAB-Xpress-PIC16F18446-Evaluation-Board.pdf

    #define USART_BAUD_RATE 19200    'Setup the communication EUSART settings - do not need to do much with Great Cow BASIC
    #define USART_TX_BLOCKING


    'Generated by PIC PPS Tool for Great Cow Basic
    'PPS Tool version: 0.0.5.19
    'PinManager data: v1.65.2
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85

    Sub InitPPS

            'Module: EUSART1
            RX1DTPPS = 0x000E    'RB6 > RX1
            RB4PPS = 0x000F      'TX1 > RB4

    End Sub
    'Template comment at the end of the config file



''' Start of the main Program

    Dim switchState as bit      'A tracker to control serial output, only needed to ensure we do not constantly send data
    switchState = LEDOn         'Set the initial state
    do forever
    HSerPrintCRLF
    HSerPrint "Great Cow BASIC Demonstration for the MPLAB® Xpress PIC16F18446 Evaluation Board"
    HSerPrintCRLF
    loop
    do forever
        'the switch has change state
        if SW0 <> switchState then

          switchState = SW0
          if switchState = LEDOn then
            LED0 = LEDOn
            HSerPrint "LED is On"
          else
            LED0 = LEDOff
            HSerPrint "LED is Off"
          end if
          HSerPrintCRLF

        end if
    loop

    end
