'''
'''  This lesson will introduce shifting instructions as well as bit-oriented operations to
'''  toggle the LEDs.
'''
'''  LEDs change at a rate of 1.0s to complete the sequence, the bit are set ON or equal to 1 when the LED is turned on!
'''
'''
'''
'''Great Cow  BASIC Header block
'''
'''@author  Evan R. Venn
'''@licence GPL
'''@version 1.00
'''@date    03/05/2018
'''****
' ----- Configuration

    'Chip Settings.
    #chip 18F27K40, 32

    #option Explicit

    '' -------------------PORTA----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---------------------------------
    ''-----------------------------------------
    ''

    '' -------------------PORTB----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---------------| O | O | O | O |-
    ''-----------------------------------------
    ''

    '' ------------------PORTC-----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---------------------------------
    ''-----------------------------------------
    ''

    'Define constants to make things easier. We can reuse these at any time.
    #define LEDPORT PORTB
    #define LEDD1   LEDPORT.0
    #define LEDD2   LEDPORT.1
    #define LEDD3   LEDPORT.2
    #define LEDD4   LEDPORT.3


    Dir     LEDD1         Out
    Dir     LEDD2         Out
    Dir     LEDD3         Out
    Dir     LEDD4         Out

    '*****************************************************************************************************
    'Main program commences here.. everything before this is setup for the board.


   'Set the initial LED states
    LEDD1 = 0
    LEDD2 = 0
    LEDD3 = 0
    LEDD4 = 1

    wait 1 s

    Dim     LEDState as Byte
    'We are only interested in the lower four bits, so, use a mask to extract the state of these bits.
    LEDState = LEDPORT AND 0B00001111

    do

        'Wait for milliseconds
        Wait 250 ms

        'Rotate the LEDs.  We are only interested in the four LEDs so we mask the other bits.
        'Clear the C register bit, rotate the LEDState variable, check if the C register bit is set and set the LEDState variable.
        Set C off                 ' Clear the carry flag
        Rotate LEDState right        ' and shift the contents of LEDState
        ' If the Carry is equal to 1 then the sequence has completed, then set the initial state again, the same operation as the starting LED.
        If C = 1 then
           'Set the initial LED states
            LEDD1 = 0
            LEDD2 = 0
            LEDD3 = 0
            LEDD4 = 1
            LEDState = LEDPORT AND 0B00001111
        else
            'Set the port
            LEDPORT = LEDState
        end if



    loop
