'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program uses the Wii Nunchuck I2C devices and display the values to the attached PC terminal.
'''This program uses the hardware implementation of I2C and TWI for the Microchip and ATMEL microprocessors.  The microprocessor must have a suitable I2C or TWI module.
'''The hardware serial connections are shown in the program.
''':
'''The program has two display methods 1) A scrolling screen and 2) A hexview of the registers.
'''Change the GOTO's to select which option.
''':
''':
'''The NunChuck.h supports the following:
''':
'''Nunchuck_init alternatively you may have to use Nunchuck_Init_Alternate
'''Nunchuck_Send_Zero which simply set the joystick for the next read
'''Nunchuck_Read_Sensors which set the variables are follows:
'''		JoyX							a byte
'''		JoyY							a byte
'''		Nunchuck_AccelX		a word
'''		Nunchuck_AccelY		a word
'''		Nunchuck_AccelZ		a word
'''		Nunchuck_SwitchState where this is 0,1,2 or 3 dependent on switches C and Z
'''		NunChuck_Decode 	a function to decode the data. Not normally reqired.
''':
''':
''':

'''@author 	EvanV
'''@licence	GPL
'''@version	1.2a
'''@date   	01.11.15
'''********************************************************************************

' ----- Configuration
#CHIP mega328p,16
#OPTION Explicit
#OPTION Explicit
#INCLUDE	<nunchuck.h>


#DEFINE UseSerial


'Nunchuck uses I2C!

#DEFINE NunChuck_Address 0xA4
#DEFINE Nunchuck_Read_DelayMs 2
' ----- Define Hardware settings
' Define I2C settings
#DEFINE HI2C_BAUD_RATE 100
#DEFINE HI2C_DATA PORTC.4
#DEFINE HI2C_CLOCK PORTC.5
'I2C pins need to be input for SSP module when used on Microchip device
'  Dir HI2C_DATA in
'  Dir HI2C_CLOCK in
HI2CMode Master

''; ----- Define Hardware settings
'  ' Define I2C settings - CHANGE PORTS
'  #define I2C_MODE Master
'  #define I2C_DATA PORTC.4
'  #define I2C_CLOCK PORTC.5
'  #define I2C_DISABLE_INTERRUPTS ON
'  ' These are very important - get these correct!!
'  #define I2C_BIT_DELAY 20 us
'  #define I2C_CLOCK_DELAY 10 us
'  #define I2C_END_DELAY 10 us


#IFDEF UseSerial
    ' THIS CONFIG OF THE SERIAL PORT WORKS WITH A  MAX232 (or equiv) THEN TO PC
    ' USART settings - CHANGE PORTS if required
    #DEFINE USART_BAUD_RATE 115200
    Dir PORTc.6 Out
    Dir PORTc.7 In
    #DEFINE USART_TX_BLOCKING
    #DEFINE USART_DELAY 1 ms
    Wait 2500 ms
#ENDIF
Dir portb.5 Out

' ----- Variables
Dim Nunchuck_AccelX As Integer
Dim Nunchuck_AccelY As Integer
Dim Nunchuck_AccelZ As Integer

Dim TenthSeconds As Byte
Dim OLDJOYX, JOYY As Byte
Dim Pnt, AA, AAA, BBB, XX, JOYX, OLDJOYY, NUNCHUCK_STATUS, OLDNUNCHUCK_STATUS, NUNCHUCK_SWITCHSTATE As Byte

' ----- Main body of program commences here.


#IFDEF UseSerial
    ' Now assumes Serial Terminal is operational

    'Clear Screen
    HSerSend 27
    Wait 1 ms
    HSerPrint "["
    Wait 1 ms
    HSerPrint "2"
    Wait 1 ms
    HSerPrint "J"
    Wait 10 ms
    HSerSend 27
    HSerPrint "["
    HSerPrint 1
    HSerSend 59
    HSerPrint 1
    HSerPrint "H"
    HSerPrint "Nunchuck Hardware I2C "
    HSerPrint ChipNameStr
    HSerPrintCRLF
#ENDIF

Dim xvector, yvector As Integer


Nunchuck_Init


Goto ScrollDisplay
'        Goto HexDisplay

End




HexDisplay:
#IFDEF UseSerial
    'Clear Screen
    Wait 1 s
    HSerSend 27
    Wait 1 ms
    HSerPrint "["
    Wait 1 ms
    HSerPrint "2"
    Wait 1 ms
    HSerPrint "J"
    Wait 10 ms
#ENDIF

pnt=1
Dim mem(64)
Dim new(64)

For aa =  1 To 64
    mem(aa) = 0xff
    new(aa)= 0xff
Next

#IFDEF UseSerial
    'Set Screen position
    HSerSend 27
    HSerPrint "["
    HSerPrint 1
    HSerSend 59
    HSerPrint 1
    HSerPrint "H"


    Repeat 4
        HSerPrint "FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF"
        HSerPrintCRLF
    End Repeat
#ENDIF


Do Forever
    HI2CStart
    HI2CSend ( NunChuck_address | 1 )
    For aaa = 1 To 64
        HI2CReceive ( new(aaa)  , ACK)
    Next
    HI2CReceive ( new(255)  , NACK)
    HI2CStop
    Wait 10 ms
    Nunchuck_Send_Zero
    pnt=1
    For aaa = 0 To 3

        For bbb = 0 To 15


            If mem(pnt) <> new(pnt) Then

                #IFDEF UseSerial
                    'Set Screen position
                    xx = (bbb * 3)+1
                    HSerSend 27
                    HSerPrint "["
                    HSerPrint aaa+1
                    HSerSend 59
                    HSerPrint xx
                    HSerPrint "H"
                    HSerPrint Hex(new(pnt)) +" "
                #ENDIF
                mem(pnt) = new(pnt)

            End If
            pnt++

        Next

    Next aaa

Loop



ScrollDisplay:
Dim Outstring As String * 48
Dim OutNum As Word
OutNum = 1


Do Forever

    Nunchuck_Read_Sensors


    If ( JoyX <> OldJoyX ) OR ( JoyY <> OldJoyY ) OR ( NunChuck_Status <> OldNunChuck_Status ) Then

        #IFDEF UseSerial
            OutNum++
            'Create a nice string
            Outstring = Pad ( Str( OutNum ), 8)
            Outstring = Outstring + Str( JoyX )
            Outstring = Outstring + ","
            Outstring = Outstring + Str( JoyY )
            Outstring = Pad( Outstring, 19 )
            Outstring = Outstring + "     acc:"
            Outstring = Outstring + Pad ( Str( Nunchuck_AccelX ), 3) + ","
            Outstring = Outstring + Pad ( Str( Nunchuck_AccelY ), 3) + ","
            Outstring = Outstring + Pad ( Str( Nunchuck_AccelZ ), 3)
            Outstring = Outstring + " but:"
            If ( Nunchuck_SwitchState AND 1 ) = 1 Then
                Outstring = Outstring + "0,"
            Else
                Outstring = Outstring + "1,"
            End If
            If ( Nunchuck_SwitchState AND 2 ) = 2 Then
                Outstring = Outstring + "0"
            Else
                Outstring = Outstring + "1"
            End If

            HSerPrint Outstring
            HSerPrintCRLF
        #ENDIF
        'turn on/off LED
        If Nunchuck_SwitchState = 0 Then
            portb.5 =1
        Else
            portb.5 =0
        End If

        OldNunChuck_Status = NunChuck_Status
        OldJoyX = JoyX
        OldJoyY = JoyY

    End If
Loop


End


' ----- Support methods.  Subroutines and Functions

