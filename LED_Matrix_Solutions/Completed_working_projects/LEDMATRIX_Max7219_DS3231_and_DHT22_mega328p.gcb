'''A demonstration program for Great Cow Basic.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program shows Time, Date, Temperature and Humidity on MAX7219 Dot Matrix Display using Arduino Nano, DS3231 and DHT22.
'''Credit goes to Great Cow Basic Team
'''@author  Owais Najam
'''@licence GPL
'''@version 1.0
'''@date 6th Dec 2019
''' There is always room for improvement.
'''********************************************************************************

' ----- Configuration
#CHIP mega328p, 16
#CONFIG MCLRE=On
#INCLUDE <max7219_ledmatrix_driver.h>
#INCLUDE <dht.h>
#INCLUDE <ds3231.h>
' memory chips: at24c32 (storage capacity 32k)
#INCLUDE <i2ceeprom.h>
#OPTION Explicit

'Eeprom address
#DEFINE    AT24C32  0xAE

' Define Hardware I2C settings
#DEFINE HI2C_BAUD_RATE 100
#DEFINE HI2C_DATA PORTC.4
#DEFINE HI2C_CLOCK PORTC.5
HI2CMode Master


' ----- Constants
#DEFINE DHT_type    22
#DEFINE DHT_PIN PORTD.2

'update period
#DEFINE period      2 s

'0 is US or 1 is UK style
#DEFINE clocktype   1


' ----- Constants
'Set SPI pins for the Max7219
'pin12
#DEFINE Max7219_DI    portb.4
'pin11
#DEFINE Max7219_DO    portb.3
'pin13
#DEFINE Max7219_SCK   portb.5
'pin10
#DEFINE Max7219_CS    portb.2

'Specifics for device configuration
#DEFINE MAX7219_X_Devices 8

Dim ALARM1TRACK, ALARM2TRACK As Byte
Dim CENTURY_FLAG, POWERLOSS, EEPROMVAL, DAYSMAX, DAYSMAX As Byte
Dim changed As BIT
Dim hour, min, sec, am_pm As Byte
Dim oldsec As Byte
Dim date, month, year, DOW, century As Byte
Dim mode, Oldmode, dayMax As Byte
' init value
oldsec = 255
' will be updated by Century calculation... if a century roll ever occurs!! Required in this example code.
century = 20

Dim myString As String * 50
Max7219_LEDMatrix_Brightness ( 0 )

'----- Tables

'# of days in months. Required in this example code.
Table monthDays
    31
    'leap years only
    29
    31
    30
    31
    30
    31
    31
    30
    31
    30
    31
End Table


'; ----- Main body of program commences here.




' ----- Define Hardware settings


' ----- Variables

'required for DHT
Dim msg, whole, tenths As Byte
Dim rh, cels, fahr As Integer

' ----- Quick Command Reference:
'       The humidity and temperatures are signed integers, the error
'       indicator a byte. For the DHT11, the numerical results are
'       simply whole numbers. For the DHT22 numerical results
'       are fixed pointed numbers, with the decimal point assumed one
'       digit from the right. In other words, the values are scaled up
'       by 10. For example, a return value of 657 for the relative
'       humidity would be interpreted as 65.7%.

' ----- Main body of program commences here.

GLCDCLS
GLCDPrint (1, 0, "Wait...")
Max7219_LEDMatrix_Update
'let sensor stabilize
Wait period

#IFDEF HI2C_DATA
    ' GLCDCLS
    ' GLCDPrint (1, 0, "i2cHW" )
    ' Max7219_LEDMatrix_Update
    ' wait period
    ' is DS3231 present?
    HI2CReStart
    HI2CSend(DS_AddrWrite)
    HI2CStop

    If HI2CAckpollState = TRUE  Then
        ' is DS3231 present?
        GLCDCLS
        GLCDPrint (1, 0, "No DS3231.." )
        Max7219_LEDMatrix_Update
        Wait period
    End
End If
#ENDIF

#IFDEF I2C_DATA
    ' GLCDCLS
    ' GLCDPrint (1, 0, "i2cSW" )
    ' Max7219_LEDMatrix_Update
    ' wait period
    ' is DS3231 present?
    I2CStart
    I2CSend(DS_AddrWrite)
    I2CStop

    If I2CSendState = FALSE  Then
        ' is DS3231 present?
        GLCDCLS
        GLCDPrint (1, 0, "No DS3231.." )
        Max7219_LEDMatrix_Update
        Wait period
    End
End If
#ENDIF


'get initial date
DS3231_ReadDate(DOW, date, month, year, century_flag )
If century_flag = 1 Then
    DS3231_HandleCentury ( century_flag, Century )
End If

'and the current mode
DS3231_ReadHourMode(mode)
'update hour mode from RTC
DS3231_SetHourMode(12)
'and, ensure the clock is running
DS3231_EnableOscillator( TRUE )

'
'Example of configuration of the 32K output and the SQW
'
'and, enable the 32kHz Output (EN32kHz).
DS3231_Set32kHz ( TRUE )
DS3231_EnableSQW
'and, turn ON output as we will use as the alarm port!
DS3231_SetSQW 0
DS3231_DisableSQW




Do

    'get initial date. This is required for main routine.
    DS3231_ReadDate(DOW, date, month, year, century_flag )
    If century_flag = 1 Then
        DS3231_HandleCentury ( century_flag, Century )
    End If

    'and the current mode
    DS3231_ReadHourMode(mode)

    ' initialise a tracking varaible
    powerloss = FALSE
    Dim EEpromAddress As Word
    EEpromAddress = 0

    GLCDCLS
    'show time and date
    updateDisp

    Wait period

    'get current values
    readDHT(rh, cels, fahr, msg)
    GLCDCLS
    Select Case msg
        'all okay, so proceed
    Case 0:
        rh = rh / 10
        cels = cels / 10
        fahr = fahr / 10
        myString = Str(cels) + "/"
        myString = myString + Str(fahr) + " "
        myString = myString + Str(rh) + "%"
        GLCDPrint (5, 0, myString )
        Max7219_LEDMatrix_Update
        'unit not responding
    Case 1:
        GLCDPrint (1, 0, "No reply...")
        Max7219_LEDMatrix_Update
        'checksum error
    Case 2:
        GLCDPrint (1, 0, "Bad CS...")
        Max7219_LEDMatrix_Update
    End Select

    Wait period
Loop
End

Sub printTime
    myString = ""
    'if mode = 24 then
    If hour < 10 Then
        'left pad with zero
        myString = "0"
    End If
    'end if
    myString = myString + Str(hour)
    myString = myString + ":"

    If min < 10 Then
        'left pad with zero
        myString = myString + "0"
    End If
    myString = myString + Str(min)
    myString = myString + ":"

    If sec < 10 Then
        'left pad with zero
        myString = myString + "0"
    End If
    myString = myString + Str(sec)

    If mode = 12 Then
        'Print a.m or p.m
        If am_pm Then
            'only in 12-hour mode
            myString = myString + "pm"
            GLCDPrint (2, 0, myString )
            Max7219_LEDMatrix_Update
        Else
            myString = myString + "am"
            GLCDPrint (2, 0, myString )
            Max7219_LEDMatrix_Update
        End If
    End If
End Sub


Sub printDate
    myString = ""
    'day of the week
    Select Case DOW
    Case 1:
        myString = "Sun"
    Case 2:
        myString = "Mon"
    Case 3:
        myString = "Tue"
    Case 4:
        myString = "Wed"
    Case 5:
        myString = "Thu"
    Case 6:
        myString = "Fri"
    Case 7:
        myString = "Sat"
    Case Else
        myString = "Err"
    End Select

    myString = ""
    If clocktype = 0 Then
        myString = myString + Str(month)
        myString = myString + "/"

        If date < 10 Then
            'left pad with zero
            myString = myString + "0"
        End If

        myString = myString + Str(date)
        'make four-digit year
        myString = myString + "/"
        myString = myString + Str(century)
        If year < 10 Then
            myString = myString + "0"
        End If

    Else
        If date < 10 Then
            'left pad with zero
            myString = myString + "0"
        End If

        myString = myString + Str(date)
        myString = myString + "/"
        myString = myString + Str(month)
        'make four-digit year
        myString = myString + "/"
        myString = myString + Str(century)
        If year < 10 Then
            myString = myString + "0"
        End If
    End If
    myString = myString + Str(year)

    GLCDPrint (2, 0, myString )
    Max7219_LEDMatrix_Update
End Sub


Sub updateDisp
    'for best efficiency, date is only updated once a day
    DS3231_ReadTime(hour, min, sec, am_pm)
    If oldsec <> sec Then
        If !(hour | min | sec) Then
            'time to update
            DS3231_ReadDate(DOW, date, month, year, century_flag )
            If century_flag = 1 Then
                DS3231_HandleCentury ( century_flag, Century )
            End If
        End If

        'show time
        printTime
        Wait period

        GLCDCLS
        printDate
        oldsec =  sec
    End If
End Sub
