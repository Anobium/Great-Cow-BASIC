'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program will demonstrate reading the analog to digital converter (ADC or A/D) module.
'''This is implemented within Great Cow Basic to support 8-bit, 10-bit and 12-bit read operations.
'''This is demonstration shows the Diffential channel measurement mode.
''':
'''This is a Diffential measurement mode.
''':
'''Great Cow Basic will configure the analog to digitalconverter clock source, the programmed acquisition time and justification of the returned value.
'''The response can be a byte, word or integer (as defined in the Great Cow Basic method) these are 8-bit, 10-bit and 12-bit values respectively.
''':
'''This demonstration show the usage for a Diffential channel measurement of the ADC.
'''See the Help for connectivity but essential the source device is connected to the appropiate ADC (ANx) pins.
''':
'''This demonstation assumes you have a 10k POT connected to AN9 port of the microchip processor.
'''This demonstation assumes you have the reference voltage connected to AN1 port of the microchip processor.

'''***  Note ***
'''AN9 is pin 37 on 18F45K80
'''AN1 is pin 3  on 18F45K80
'''Always check the datasheet for your specific chip
''':
'''
'''@author	Bill Roth
'''@licence	GPL
'''@version	1.0a
'''@date   	21.12.2015
'''********************************************************************************

' ----- Configuration

#CHIP 18F45K80, 4

#CONFIG MCLRE_OFF

' ----- Constants


' ----- Define Hardware settings


'Setup LCD Parameters
#DEFINE LCD_IO 4
#DEFINE LCD_NO_RW
#DEFINE LCD_SPEED FAST

' ----- Define Hardware settings
#DEFINE LCD_RS PORTB.1
#DEFINE LCD_Enable PORTB.0
#DEFINE LCD_DB4 PORTC.4
#DEFINE LCD_DB5 PORTC.5
#DEFINE LCD_DB6 PORTC.6
#DEFINE LCD_DB7 PORTC.7

' ----- Variables
'lets read negative values also!
Dim ad_val As Integer


' ----- Main body of program commences here.
'Show start up message
SPLASH
Wait 1 s
CLS

'Display fixed messages to display
Locate 0,0: Print  "ReadAD:"
Locate 1,0 : Print "ReadAD10:"
Locate 2,0 : Print "ReadAD12:"


'***  Note ***
'Check datasheet for you specific chip


Do

    'read 8-bit value to Variable
    ad_val = ReadAD(AN9, AN1)
    Locate 0,10
    Print ad_val
    Print "   "
    Wait 20 ms

    'read 10-bit value to Variable
    ad_val = ReadAD10(AN9, AN1)
    Locate 1,10
    Print ad_val
    Print "   "
    Wait 20 ms

    'read 12-bit value to Variable
    ad_val = ReadAD12(AN9,AN1)
    Locate 2,10
    Print ad_val
    Print "   "
    Wait 20 ms

Loop

End

' ----- Support methods.  Subroutines and Functions

Sub Splash
    Locate 0,0 : Print "CHIP: ": Print ChipNameStr
    Locate 1,0 : Print "RAM: ": Print  ChipRAM: Print " Bytes"
    Locate 2,0 : Print "MEMORY:" : Print ChipWords: Print " Words"
End Sub

