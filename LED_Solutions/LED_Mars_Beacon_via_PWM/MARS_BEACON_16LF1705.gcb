'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program ia a demonstration of a Simulated MARS Beacon for Experimental / RC Aircraft on a Chipino Board
'''You should see it on the aircraft using four 3 Watt Cree XR-E LED's.
'''Makes runway taxiing a lot safer for these smaller experimental aircraft.  And of course can be used on R/C Planes for a realistic looking beacon.
'''
'''@author    EvanV on works of William Roth
'''@licence   GPL
'''@version   1.0a
'''@date      8.11.2017
'''********************************************************************************
'********************************************************************************

' ----- Configuration

#CHIP 16lf1705,32

'Set the PPS of the PWM
'Set the PPS for this solution.
#STARTUP InitPPS, 85
LVP = On

Sub InitPPS
    UNLOCKPPS
    'Module: PWM3
    'PWM3OUT > RA0
    RA0PPS = 0x000E
    LOCKPPS
End Sub



' Adjust for Beacon Effect
'~50 %
#DEFINE Max_Duty 120
' ms
#DEFINE Flash_ON 110
' ms
#DEFINE Flash_OFF 110
' ramp delay
#DEFINE Delay 20

' ----- Define Hardware settings
#DEFINE LEDD1 PORTA.0

Dir     LEDD1 Out


' ----- Variables
Dim Duty As Byte
'starting Value
Duty = 10

' ----- Quick Command Reference:
'A MARS Beacon simulation for your enjoyment. I originally written for Picaxe Basic for an Experimental Aircraft owner/ pilot who  uses it on his Airplane.
'It passed U.S. Federal regulations and was approved by the FAA inspector who really liked it.
'To get best performance on a breadboard, use a general purpose NPN transistor (2N3904. etc )  to drive a  5mm LED.
'Recommend a 220 Ohm resistor from 5v to the collector to limit current and a series resistor of 3K3  from the PIC CCP pin to the transistor base.


' ----- Main body of program commences here.

Do Forever


    ''' Ramp UP
    Do While duty  < Max_Duty
        Duty = Duty + 4
        '10bit HPWM. So, you need to set the timer source.
        HPWM 3,2, duty, 2
        Wait delay ms
    Loop

    ''' Flash
    HPWM 3,2, 255, 2
    Wait FLASH_ON ms
    HPWM 3,2,max_duty, 2
    Wait FLASH_OFF ms

    HPWM 3, 2, 255, 2
    Wait FLASH_ON ms
    HPWM 3, 2, max_duty, 2
    Wait Flash_OFF ms

    'Ramp Dowm
    Do While duty  > 10
        Duty = Duty - 4
        HPWM 3,2, duty, 2
        Wait delay ms
    Loop

Loop

End

' ----- Support methods.  Subroutines and Functions

''' GCB Optimisation file

'Optmise PWM.h
#DEFINE USE_HPWMCCP1 FALSE
#DEFINE USE_HPWMCCP2 FALSE
#DEFINE USE_HPWMCCP3 TRUE
#DEFINE USE_HPWMCCP4 FALSE

#DEFINE USE_HPWM6 FALSE
#DEFINE USE_HPWM7 FALSE

#DEFINE USE_HPWM_TIMER2 TRUE
#DEFINE USE_HPWM_TIMER4 FALSE
#DEFINE USE_HPWM_TIMER6 FALSE

'Optimise A-d.h
'Standard family chips
#DEFINE USE_AD0 FALSE
#DEFINE USE_AD1 FALSE
#DEFINE USE_AD2 FALSE
#DEFINE USE_AD2 FALSE
#DEFINE USE_AD3 FALSE
#DEFINE USE_AD4 FALSE
#DEFINE USE_AD5 FALSE
#DEFINE USE_AD6 FALSE
#DEFINE USE_AD7 FALSE
#DEFINE USE_AD8 FALSE
#DEFINE USE_AD9 FALSE
#DEFINE USE_AD10 FALSE
#DEFINE USE_AD11 FALSE
#DEFINE USE_AD12 FALSE
#DEFINE USE_AD13 FALSE
#DEFINE USE_AD14 FALSE
#DEFINE USE_AD15 FALSE
#DEFINE USE_AD16 FALSE
#DEFINE USE_AD17 FALSE
#DEFINE USE_AD18 FALSE
#DEFINE USE_AD19 FALSE
#DEFINE USE_AD20 FALSE
#DEFINE USE_AD21 FALSE
#DEFINE USE_AD22 FALSE
#DEFINE USE_AD23 FALSE
#DEFINE USE_AD24 FALSE
#DEFINE USE_AD25 FALSE
#DEFINE USE_AD26 FALSE
#DEFINE USE_AD27 FALSE
#DEFINE USE_AD28 FALSE
#DEFINE USE_AD29 FALSE
#DEFINE USE_AD30 FALSE
#DEFINE USE_AD31 FALSE
#DEFINE USE_AD32 FALSE
#DEFINE USE_AD33 FALSE
#DEFINE USE_AD34 FALSE

'Family of chips based on 16f1688x with ADCON3 register
#DEFINE USE_ADA0 FALSE
#DEFINE USE_ADA1 FALSE
#DEFINE USE_ADA2 FALSE
#DEFINE USE_ADA3 FALSE
#DEFINE USE_ADA4 FALSE
#DEFINE USE_ADA5 FALSE
#DEFINE USE_ADA6 FALSE
#DEFINE USE_ADA7 FALSE
#DEFINE USE_ADB0 FALSE
#DEFINE USE_ADB1 FALSE
#DEFINE USE_ADB2 FALSE
#DEFINE USE_ADB3 FALSE
#DEFINE USE_ADB4 FALSE
#DEFINE USE_ADB5 FALSE
#DEFINE USE_ADB6 FALSE
#DEFINE USE_ADB7 FALSE
#DEFINE USE_ADC0 FALSE
#DEFINE USE_ADC1 FALSE
#DEFINE USE_ADC2 FALSE
#DEFINE USE_ADC3 FALSE
#DEFINE USE_ADC4 FALSE
#DEFINE USE_ADC5 FALSE
#DEFINE USE_ADC6 FALSE
#DEFINE USE_ADC7 FALSE
#DEFINE USE_ADD0 FALSE
#DEFINE USE_ADD1 FALSE
#DEFINE USE_ADD2 FALSE
#DEFINE USE_ADD3 FALSE
#DEFINE USE_ADD4 FALSE
#DEFINE USE_ADD5 FALSE
#DEFINE USE_ADD6 FALSE
#DEFINE USE_ADD7 FALSE
#DEFINE USE_ADE0 FALSE
#DEFINE USE_ADE1 FALSE
#DEFINE USE_ADE2 FALSE
